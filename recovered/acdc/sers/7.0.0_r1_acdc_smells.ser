<linked-hash-set>
  <edu.usc.softarch.arcade.antipattern.detection.BdcSmell>
    <clusters>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.internal.content.ss</name>
        <entities>
          <string>com.android.internal.content.ReferrerIntent</string>
          <string>com.android.internal.content.ReferrerIntent$1</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.internal.net.ss</name>
        <entities>
          <string>com.android.internal.util.ProcFileReader</string>
          <string>com.android.internal.net.VpnProfile$1</string>
          <string>com.android.internal.net.VpnConfig</string>
          <string>com.android.internal.net.VpnInfo$1</string>
          <string>com.android.internal.net.NetworkStatsFactory</string>
          <string>com.android.internal.net.VpnConfig$1</string>
          <string>com.android.internal.net.LegacyVpnInfo</string>
          <string>com.android.internal.net.VpnProfile</string>
          <string>com.android.internal.net.VpnInfo</string>
          <string>com.android.internal.net.LegacyVpnInfo$1</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.filterfw.geometry.ss</name>
        <entities>
          <string>android.filterfw.geometry.Rectangle</string>
          <string>android.filterfw.geometry.Quad</string>
          <string>android.filterfw.geometry.Point</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.hardware.camera2.marshal.impl.ss</name>
        <entities>
          <string>android.hardware.camera2.marshal.impl.MarshalQueryableBoolean</string>
          <string>android.hardware.camera2.marshal.impl.MarshalQueryablePair</string>
          <string>android.hardware.camera2.params.ReprocessFormatsMap</string>
          <string>android.hardware.camera2.params.MeteringRectangle</string>
          <string>android.hardware.camera2.marshal.impl.MarshalQueryableStreamConfigurationDuration$MarshalerStreamConfigurationDuration</string>
          <string>android.hardware.camera2.params.ColorSpaceTransform</string>
          <string>android.hardware.camera2.marshal.impl.MarshalQueryableRect</string>
          <string>android.hardware.camera2.marshal.impl.MarshalQueryableStreamConfiguration</string>
          <string>android.hardware.camera2.marshal.impl.MarshalQueryableStreamConfiguration$MarshalerStreamConfiguration</string>
          <string>android.hardware.camera2.marshal.impl.MarshalQueryableRggbChannelVector$MarshalerRggbChannelVector</string>
          <string>android.util.SizeF</string>
          <string>android.hardware.camera2.params.RggbChannelVector</string>
          <string>android.hardware.camera2.marshal.impl.MarshalQueryableBlackLevelPattern$MarshalerBlackLevelPattern</string>
          <string>android.hardware.camera2.marshal.impl.MarshalQueryableBlackLevelPattern</string>
          <string>android.hardware.camera2.marshal.impl.MarshalQueryableHighSpeedVideoConfiguration$MarshalerHighSpeedVideoConfiguration</string>
          <string>android.hardware.camera2.marshal.MarshalHelpers</string>
          <string>android.hardware.camera2.marshal.impl.MarshalQueryableHighSpeedVideoConfiguration</string>
          <string>android.hardware.camera2.marshal.impl.MarshalQueryableArray</string>
          <string>android.hardware.camera2.marshal.impl.MarshalQueryableParcelable$MarshalerParcelable</string>
          <string>android.hardware.camera2.marshal.impl.MarshalQueryableArray$MarshalerArray</string>
          <string>android.hardware.camera2.params.StreamConfigurationDuration</string>
          <string>android.hardware.camera2.marshal.impl.MarshalQueryableSizeF$MarshalerSizeF</string>
          <string>android.hardware.camera2.marshal.impl.MarshalQueryableSize$MarshalerSize</string>
          <string>android.hardware.camera2.marshal.impl.MarshalQueryableRect$MarshalerRect</string>
          <string>android.hardware.camera2.params.StreamConfigurationMap</string>
          <string>android.hardware.camera2.marshal.MarshalQueryable</string>
          <string>android.hardware.camera2.marshal.impl.MarshalQueryableNativeByteToInteger</string>
          <string>android.hardware.camera2.marshal.impl.MarshalQueryableSize</string>
          <string>android.hardware.camera2.marshal.impl.MarshalQueryableSizeF</string>
          <string>android.hardware.camera2.utils.HashCodeHelpers</string>
          <string>android.hardware.camera2.marshal.Marshaler</string>
          <string>android.hardware.camera2.utils.SurfaceUtils</string>
          <string>android.hardware.camera2.marshal.impl.MarshalQueryableEnum</string>
          <string>android.hardware.camera2.marshal.impl.MarshalQueryableNativeByteToInteger$MarshalerNativeByteToInteger</string>
          <string>android.hardware.camera2.marshal.impl.MarshalQueryableRange$MarshalerRange</string>
          <string>android.hardware.camera2.marshal.impl.MarshalQueryableMeteringRectangle</string>
          <string>android.hardware.camera2.marshal.impl.MarshalQueryableString</string>
          <string>android.hardware.camera2.marshal.impl.MarshalQueryableMeteringRectangle$MarshalerMeteringRectangle</string>
          <string>android.hardware.camera2.params.StreamConfiguration</string>
          <string>android.hardware.camera2.marshal.impl.MarshalQueryableRggbChannelVector</string>
          <string>android.hardware.camera2.marshal.impl.MarshalQueryableReprocessFormatsMap$MarshalerReprocessFormatsMap</string>
          <string>android.hardware.camera2.marshal.impl.MarshalQueryableColorSpaceTransform$MarshalerColorSpaceTransform</string>
          <string>android.hardware.camera2.marshal.impl.MarshalQueryableColorSpaceTransform</string>
          <string>android.hardware.camera2.marshal.impl.MarshalQueryableString$MarshalerString</string>
          <string>android.hardware.camera2.marshal.impl.MarshalQueryableBoolean$MarshalerBoolean</string>
          <string>android.hardware.camera2.marshal.impl.MarshalQueryableStreamConfigurationDuration</string>
          <string>android.hardware.camera2.params.HighSpeedVideoConfiguration</string>
          <string>android.hardware.camera2.marshal.impl.MarshalQueryablePair$MarshalerPair</string>
          <string>android.hardware.camera2.marshal.impl.MarshalQueryablePrimitive</string>
          <string>android.hardware.camera2.marshal.impl.MarshalQueryableRange</string>
          <string>android.hardware.camera2.marshal.impl.MarshalQueryableParcelable</string>
          <string>android.hardware.camera2.marshal.impl.MarshalQueryableEnum$MarshalerEnum</string>
          <string>android.hardware.camera2.marshal.impl.MarshalQueryableReprocessFormatsMap</string>
          <string>android.hardware.camera2.marshal.impl.MarshalQueryablePrimitive$MarshalerPrimitive</string>
          <string>android.hardware.camera2.params.BlackLevelPattern</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.opengl.ss</name>
        <entities>
          <string>android.opengl.GLU</string>
          <string>java.nio.FloatBuffer</string>
          <string>android.opengl.GLSurfaceView</string>
          <string>android.opengl.GLSurfaceView$GLThreadManager</string>
          <string>android.opengl.GLWrapperBase</string>
          <string>com.google.android.gles_jni.EGLSurfaceImpl</string>
          <string>javax.microedition.khronos.opengles.GL</string>
          <string>java.nio.IntBuffer</string>
          <string>android.opengl.ETC1Util$ETC1Texture</string>
          <string>javax.microedition.khronos.opengles.GL10Ext</string>
          <string>android.opengl.GLSurfaceView$Renderer</string>
          <string>javax.microedition.khronos.egl.EGLSurface</string>
          <string>android.opengl.GLException</string>
          <string>android.opengl.GLErrorWrapper</string>
          <string>android.opengl.GLSurfaceView$EglHelper</string>
          <string>android.opengl.GLLogWrapper$PointerInfo</string>
          <string>android.opengl.GLSurfaceView$SimpleEGLConfigChooser</string>
          <string>android.opengl.GLES10</string>
          <string>android.opengl.GLES11</string>
          <string>android.opengl.EGLLogWrapper</string>
          <string>javax.microedition.khronos.egl.EGLConfig</string>
          <string>android.opengl.GLSurfaceView$GLWrapper</string>
          <string>javax.microedition.khronos.opengles.GL11Ext</string>
          <string>android.opengl.GLSurfaceView$EGLWindowSurfaceFactory</string>
          <string>javax.microedition.khronos.opengles.GL11ExtensionPack</string>
          <string>javax.microedition.khronos.egl.EGL10</string>
          <string>javax.microedition.khronos.egl.EGL11</string>
          <string>android.opengl.GLSurfaceView$EGLContextFactory</string>
          <string>android.opengl.GLSurfaceView$EGLConfigChooser</string>
          <string>com.google.android.gles_jni.EGLDisplayImpl</string>
          <string>android.opengl.GLSurfaceView$ComponentSizeChooser</string>
          <string>android.opengl.GLES32$DebugProc</string>
          <string>javax.microedition.khronos.opengles.GL10</string>
          <string>android.opengl.GLSurfaceView$BaseConfigChooser</string>
          <string>android.opengl.GLSurfaceView$LogWriter</string>
          <string>android.opengl.GLES11Ext</string>
          <string>javax.microedition.khronos.opengles.GL11</string>
          <string>android.opengl.GLES31Ext$DebugProcKHR</string>
          <string>android.opengl.GLLogWrapper</string>
          <string>java.nio.DoubleBuffer</string>
          <string>android.opengl.GLDebugHelper</string>
          <string>android.opengl.GLES32</string>
          <string>android.opengl.GLES30</string>
          <string>android.opengl.GLES31</string>
          <string>android.opengl.GLSurfaceView$DefaultContextFactory</string>
          <string>android.opengl.GLSurfaceView$DefaultWindowSurfaceFactory</string>
          <string>android.opengl.GLSurfaceView$GLThread</string>
          <string>android.opengl.ETC1</string>
          <string>javax.microedition.khronos.egl.EGLDisplay</string>
          <string>java.nio.LongBuffer</string>
          <string>android.opengl.ETC1Util</string>
          <string>android.opengl.GLES31Ext</string>
          <string>android.opengl.GLES10Ext</string>
          <string>com.google.android.gles_jni.EGLConfigImpl</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.util.ss</name>
        <entities>
          <string>android.util.Xml$XmlSerializerFactory</string>
          <string>android.os.DeadSystemException</string>
          <string>android.util.DayOfMonthCursor</string>
          <string>java.io.ObjectInputStream</string>
          <string>android.util.MemoryIntArray$1</string>
          <string>android.util.MapCollections$EntrySet</string>
          <string>android.util.Property</string>
          <string>android.util.ReflectiveProperty</string>
          <string>org.kxml2.io.KXmlParser</string>
          <string>android.util.MonthDisplayHelper</string>
          <string>java.io.InvalidObjectException</string>
          <string>android.util.Log</string>
          <string>android.util.Spline</string>
          <string>android.util.EventLogTags$Description</string>
          <string>android.util.JsonToken</string>
          <string>android.util.FastImmutableArraySet$FastIterator</string>
          <string>android.util.MapCollections$MapIterator</string>
          <string>android.util.EventLogTags</string>
          <string>android.util.Rational</string>
          <string>android.util.Xml$Encoding</string>
          <string>org.xmlpull.v1.XmlPullParserFactory</string>
          <string>java.io.Writer</string>
          <string>android.util.MapCollections$ArrayIterator</string>
          <string>android.util.JsonReader</string>
          <string>android.util.FastImmutableArraySet</string>
          <string>android.util.Log$ImmediateLogWriter</string>
          <string>java.util.AbstractSet</string>
          <string>libcore.internal.StringPool</string>
          <string>android.util.MemoryIntArray</string>
          <string>android.util.Spline$MonotoneCubicSpline</string>
          <string>android.util.JsonScope</string>
          <string>libcore.util.Objects</string>
          <string>android.util.MapCollections</string>
          <string>android.util.MapCollections$KeySet</string>
          <string>android.util.ArraySet</string>
          <string>com.android.internal.util.LineBreakBufferedWriter</string>
          <string>android.util.Spline$LinearSpline</string>
          <string>android.util.ArrayMap</string>
          <string>android.util.XmlPullAttributes</string>
          <string>java.lang.UnsupportedOperationException</string>
          <string>org.xml.sax.InputSource</string>
          <string>android.util.MapCollections$ValuesCollection</string>
          <string>android.util.Xml</string>
          <string>android.util.Log$NoPreloadHolder</string>
          <string>android.util.ArraySet$1</string>
          <string>org.apache.harmony.xml.ExpatReader</string>
          <string>android.util.Log$1</string>
          <string>android.util.Log$TerribleFailure</string>
          <string>android.util.ArrayMap$1</string>
          <string>android.util.MalformedJsonException</string>
          <string>android.util.Log$TerribleFailureHandler</string>
          <string>android.util.NoSuchPropertyException</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.app.ss</name>
        <entities>
          <string>android.app.SearchDialog$4</string>
          <string>android.hardware.SensorManager</string>
          <string>android.app.SearchDialog$5</string>
          <string>android.app.SearchDialog$2</string>
          <string>android.app.SystemServiceRegistry$ServiceFetcher</string>
          <string>android.app.SearchDialog$3</string>
          <string>android.os.IVibratorService$Stub$Proxy</string>
          <string>android.app.ISearchManager$Stub$Proxy</string>
          <string>android.accessibilityservice.AccessibilityService$Callbacks</string>
          <string>android.app.Notification$BuilderRemoteViews</string>
          <string>android.app.IInstrumentationWatcher$Stub$Proxy</string>
          <string>android.app.ActivityTransitionCoordinator$FixedEpicenterCallback</string>
          <string>android.app.SearchDialog$1</string>
          <string>libcore.io.DropBox$Reporter</string>
          <string>android.app.ActivityManager$AppTask</string>
          <string>android.print.IWriteResultCallback</string>
          <string>android.app.ActivityThread$ProviderClientRecord</string>
          <string>android.media.tv.ITvInputClient$Stub$Proxy</string>
          <string>android.app.FragmentState$1</string>
          <string>android.print.IPrintServicesChangeListener</string>
          <string>android.app.SharedElementCallback$OnSharedElementsReadyListener</string>
          <string>android.content.ReceiverCallNotAllowedException</string>
          <string>android.app.LocalActivityManager</string>
          <string>android.os.IRecoverySystem</string>
          <string>android.service.persistentdata.IPersistentDataBlockService$Stub</string>
          <string>android.media.tv.ITvInputHardware$Stub$Proxy</string>
          <string>android.os.IRemoteCallback$Stub</string>
          <string>android.net.NetworkPolicyManager</string>
          <string>android.os.IRemoteCallback$Stub$Proxy</string>
          <string>android.app.ApplicationThreadProxy</string>
          <string>android.app.EnterTransitionCoordinator$5$1</string>
          <string>android.app.AppImportanceMonitor$2</string>
          <string>android.app.ActivityManager$RunningTaskInfo</string>
          <string>android.app.AppImportanceMonitor$1</string>
          <string>android.app.TimePickerDialog</string>
          <string>android.app.IProcessObserver</string>
          <string>android.app.Notification$DecoratedCustomViewStyle</string>
          <string>android.hardware.hdmi.IHdmiControlService$Stub</string>
          <string>android.app.EnterTransitionCoordinator</string>
          <string>android.media.tv.ITvInputClient$Stub</string>
          <string>android.os.health.HealthStats</string>
          <string>android.app.Notification$Action$WearableExtender</string>
          <string>android.app.WallpaperManager$WallpaperSetCompletion</string>
          <string>android.net.wifi.IWifiManager$Stub</string>
          <string>android.location.ICountryDetector$Stub$Proxy</string>
          <string>android.net.wifi.p2p.IWifiP2pManager$Stub</string>
          <string>android.app.IActivityController</string>
          <string>android.os.IVibratorService$Stub</string>
          <string>android.content.CursorLoader</string>
          <string>android.hardware.hdmi.IHdmiInputChangeListener$Stub</string>
          <string>android.app.ActivityView$SerialExecutor</string>
          <string>android.os.IRecoverySystem$Stub</string>
          <string>android.app.Notification$WearableExtender</string>
          <string>android.app.Activity$TranslucentConversionListener</string>
          <string>android.app.IAppTask</string>
          <string>android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel$1</string>
          <string>android.app.Notification$CarExtender$UnreadConversation</string>
          <string>com.android.server.hdmi.HdmiConfig</string>
          <string>android.app.KeyguardManager</string>
          <string>com.android.internal.telephony.ITelephonyRegistry</string>
          <string>android.app.ResourcesManager</string>
          <string>libcore.net.NetworkSecurityPolicy</string>
          <string>android.util.LayoutDirection</string>
          <string>android.print.IPrintDocumentAdapterObserver$Stub</string>
          <string>android.os.IBatteryPropertiesListener$Stub$Proxy</string>
          <string>android.app.LoadedApk$WarningContextClassLoader</string>
          <string>android.hardware.hdmi.IHdmiVendorCommandListener$Stub</string>
          <string>com.android.internal.app.IVoiceInteractorCallback</string>
          <string>android.telephony.CarrierConfigManager</string>
          <string>android.hardware.usb.UsbManager</string>
          <string>com.android.internal.telephony.IOnSubscriptionsChangedListener</string>
          <string>android.app.ContextImpl$ApplicationContentResolver</string>
          <string>com.android.internal.statusbar.IStatusBar$Stub$Proxy</string>
          <string>android.hardware.soundtrigger.SoundTrigger$RecognitionConfig$1</string>
          <string>android.hardware.usb.IUsbManager$Stub$Proxy</string>
          <string>android.provider.Downloads$Impl$RequestHeaders</string>
          <string>android.service.persistentdata.IPersistentDataBlockService$Stub$Proxy</string>
          <string>android.app.Application</string>
          <string>android.app.Activity$ManagedDialog</string>
          <string>android.text.style.TextAppearanceSpan</string>
          <string>android.widget.SearchView$OnCloseListener</string>
          <string>android.app.ActivityView$ActivityViewCallback</string>
          <string>android.hardware.hdmi.IHdmiSystemAudioModeChangeListener$Stub$Proxy</string>
          <string>android.net.wifi.nan.IWifiNanEventListener</string>
          <string>android.app.IWallpaperManager$Stub$Proxy</string>
          <string>android.location.IGnssStatusListener$Stub$Proxy</string>
          <string>android.os.IHardwarePropertiesManager$Stub</string>
          <string>android.app.Activity$NonConfigurationInstances</string>
          <string>android.net.wifi.nan.IWifiNanManager$Stub$Proxy</string>
          <string>android.media.AudioFormat$Builder</string>
          <string>android.hardware.soundtrigger.SoundTrigger$Keyphrase$1</string>
          <string>android.hardware.hdmi.IHdmiHotplugEventListener$Stub$Proxy</string>
          <string>android.app.TimePickerDialog$OnTimeSetListener</string>
          <string>android.app.Notification$Builder</string>
          <string>android.hardware.ISerialManager$Stub$Proxy</string>
          <string>android.net.wifi.p2p.IWifiP2pManager</string>
          <string>android.os.IHardwarePropertiesManager$Stub$Proxy</string>
          <string>android.filterpacks.ui.package_info</string>
          <string>android.app.ProgressDialog$1</string>
          <string>android.net.wifi.IWifiManager$Stub$Proxy</string>
          <string>android.app.MediaRouteButton$MediaRouterCallback</string>
          <string>android.app.Fragment$1</string>
          <string>android.print.IPrintJobStateChangeListener$Stub</string>
          <string>android.app.SystemServiceRegistry$StaticServiceFetcher</string>
          <string>android.app.IProcessObserver$Stub</string>
          <string>android.app.Instrumentation$InstrumentationThread</string>
          <string>android.app.usage.IUsageStatsManager</string>
          <string>android.print.IPrintDocumentAdapter$Stub</string>
          <string>android.os.Looper</string>
          <string>android.app.FragmentState</string>
          <string>android.content.pm.PackageManager$MoveCallback</string>
          <string>android.app.ActivityThread$ProviderRefCount</string>
          <string>android.app.Notification$Extender</string>
          <string>android.app.IWallpaperManager$Stub</string>
          <string>android.app.SearchableInfo$1</string>
          <string>android.location.IGnssNavigationMessageListener$Stub$Proxy</string>
          <string>android.app.ActivityThread$2</string>
          <string>android.accessibilityservice.AccessibilityService$IAccessibilityServiceClientWrapper</string>
          <string>android.app.ActivityThread$1</string>
          <string>android.app.LoaderManagerImpl$LoaderInfo</string>
          <string>android.app.ActivityThread$3</string>
          <string>android.app.BackStackRecord</string>
          <string>android.net.wifi.nan.IWifiNanManager</string>
          <string>android.app.VoiceInteractor$CommandRequest</string>
          <string>android.app.SystemServiceRegistry$9</string>
          <string>android.media.tv.ITvInputManagerCallback$Stub$Proxy</string>
          <string>com.android.internal.statusbar.IStatusBarService$Stub$Proxy</string>
          <string>android.app.ActivityThread$Profiler</string>
          <string>android.content.IRestrictionsManager$Stub</string>
          <string>android.hardware.soundtrigger.SoundTrigger$Keyphrase</string>
          <string>android.app.SystemServiceRegistry$5</string>
          <string>android.app.SystemServiceRegistry$6</string>
          <string>android.app.SystemServiceRegistry$7</string>
          <string>android.app.ActivityView$ActivityContainerCallback$1</string>
          <string>android.app.SystemServiceRegistry$8</string>
          <string>android.app.SystemServiceRegistry$1</string>
          <string>android.app.SystemServiceRegistry$2</string>
          <string>android.app.SystemServiceRegistry</string>
          <string>android.app.ActivityView</string>
          <string>android.app.ActivityThread$H</string>
          <string>android.app.SystemServiceRegistry$3</string>
          <string>android.app.SystemServiceRegistry$4</string>
          <string>com.android.internal.app.ConfirmUserCreationActivity</string>
          <string>android.app.FragmentManager$OnBackStackChangedListener</string>
          <string>android.content.Loader$OnLoadCompleteListener</string>
          <string>android.content.res.AssetManager</string>
          <string>android.app.ProfilerInfo$1</string>
          <string>android.app.ResultInfo</string>
          <string>android.app.ITaskStackListener$Stub$Proxy</string>
          <string>android.app.FragmentManagerImpl</string>
          <string>android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionEvent</string>
          <string>android.app.IAppTask$Stub</string>
          <string>android.net.wifi.p2p.WifiP2pManager$DnsSdTxtRecordListener</string>
          <string>android.app.ITaskStackListener</string>
          <string>android.hardware.soundtrigger.SoundTrigger$ModuleProperties$1</string>
          <string>java.lang.ClassNotFoundException</string>
          <string>com.android.internal.util.Protocol</string>
          <string>android.os.IHardwarePropertiesManager</string>
          <string>android.content.res.XmlBlock</string>
          <string>android.app.ActivityManager$StackInfo$1</string>
          <string>android.widget.SearchView$OnSuggestionListener</string>
          <string>android.app.ApplicationLoaders</string>
          <string>android.net.INetworkScoreCache</string>
          <string>android.os.IBinder</string>
          <string>android.app.KeyguardManager$OnKeyguardExitResult</string>
          <string>android.location.IGnssStatusListener$Stub</string>
          <string>android.view.ContextThemeWrapper</string>
          <string>android.app.ActivityThread$ServiceArgsData</string>
          <string>com.android.internal.telephony.ISub</string>
          <string>android.app.LauncherActivity$IconResizer</string>
          <string>android.app.PendingIntent$1</string>
          <string>android.filterpacks.text.package_info</string>
          <string>android.content.Context</string>
          <string>android.hardware.soundtrigger.SoundTrigger$ConfidenceLevel</string>
          <string>android.app.Instrumentation$ActivityResult</string>
          <string>android.hardware.soundtrigger.SoundTrigger$SoundModel</string>
          <string>android.provider.Downloads</string>
          <string>android.app.ActivityThread$UpdateCompatibilityData</string>
          <string>android.app.ApplicationPackageManager$ResourceName</string>
          <string>android.app.ListFragment</string>
          <string>android.app.Activity$ManagedCursor</string>
          <string>android.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener</string>
          <string>android.app.KeyguardManager$KeyguardLock</string>
          <string>android.app.LauncherActivity$ActivityAdapter$ArrayFilter</string>
          <string>android.app.Fragment$SavedState$1</string>
          <string>android.app.Instrumentation$1MenuRunnable</string>
          <string>android.hardware.ISerialManager$Stub</string>
          <string>android.app.ApplicationErrorReport$RunningServiceInfo</string>
          <string>com.android.internal.telephony.ITelephonyRegistry$Stub</string>
          <string>android.app.ISearchManagerCallback$Stub</string>
          <string>android.app.ActionBar</string>
          <string>android.app.PackageInstallObserver</string>
          <string>android.webkit.PluginStub</string>
          <string>android.app.DownloadManager$CursorTranslator</string>
          <string>android.app.IActivityContainerCallback</string>
          <string>android.app.usage.UsageStatsManager</string>
          <string>android.opengl.Visibility</string>
          <string>android.app.LoadedApk$ReceiverDispatcher$InnerReceiver</string>
          <string>com.android.internal.app.ISoundTriggerService$Stub$Proxy</string>
          <string>android.app.IntentReceiverLeaked</string>
          <string>android.app.FragmentBreadCrumbs$1</string>
          <string>android.app.AppOpsManager$OnOpChangedListener</string>
          <string>android.app.SystemServiceRegistry$20</string>
          <string>android.app.SystemServiceRegistry$23</string>
          <string>android.app.SystemServiceRegistry$24</string>
          <string>android.app.SystemServiceRegistry$21</string>
          <string>android.app.SystemServiceRegistry$22</string>
          <string>android.hardware.fingerprint.IFingerprintService</string>
          <string>android.hardware.soundtrigger.SoundTrigger$SoundModelEvent</string>
          <string>android.os.IBatteryPropertiesListener$Stub</string>
          <string>android.app.FragmentManagerState$1</string>
          <string>android.app.IntentService</string>
          <string>android.app.LocalActivityManager$LocalActivityRecord</string>
          <string>android.app.SystemServiceRegistry$27</string>
          <string>android.hardware.soundtrigger.SoundTrigger</string>
          <string>android.app.SystemServiceRegistry$28</string>
          <string>android.app.SystemServiceRegistry$25</string>
          <string>android.app.SystemServiceRegistry$26</string>
          <string>android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionEvent$1</string>
          <string>android.app.SystemServiceRegistry$29</string>
          <string>android.printservice.recommendation.IRecommendationsChangeListener$Stub</string>
          <string>android.app.SystemServiceRegistry$30</string>
          <string>android.app.SystemServiceRegistry$31</string>
          <string>android.app.SystemServiceRegistry$34</string>
          <string>android.app.SystemServiceRegistry$35</string>
          <string>android.app.SystemServiceRegistry$32</string>
          <string>android.app.SystemServiceRegistry$33</string>
          <string>android.net.NetworkScoreManager</string>
          <string>android.content.MutableContextWrapper</string>
          <string>android.net.INetworkPolicyListener$Stub$Proxy</string>
          <string>android.app.ActivityManager$TaskDescription</string>
          <string>android.app.KeyguardManager$1</string>
          <string>android.app.BackStackRecord$1</string>
          <string>android.app.BackStackRecord$2</string>
          <string>android.app.BackStackRecord$3</string>
          <string>android.app.BackStackRecord$4</string>
          <string>android.app.SystemServiceRegistry$38</string>
          <string>android.app.SystemServiceRegistry$39</string>
          <string>android.app.SystemServiceRegistry$36</string>
          <string>android.app.SystemServiceRegistry$37</string>
          <string>android.app.DownloadManager$Request</string>
          <string>android.content.Loader$ForceLoadContentObserver</string>
          <string>android.app.ServiceConnectionLeaked</string>
          <string>android.app.SystemServiceRegistry$41</string>
          <string>android.app.SystemServiceRegistry$42</string>
          <string>android.app.SystemServiceRegistry$40</string>
          <string>android.app.SystemServiceRegistry$45</string>
          <string>android.app.SystemServiceRegistry$46</string>
          <string>android.app.SystemServiceRegistry$43</string>
          <string>android.app.SystemServiceRegistry$44</string>
          <string>android.app.Instrumentation$SyncRunnable</string>
          <string>android.app.SystemServiceRegistry$49</string>
          <string>android.app.SystemServiceRegistry$47</string>
          <string>android.app.SystemServiceRegistry$48</string>
          <string>android.app.ListActivity</string>
          <string>android.app.SystemServiceRegistry$52</string>
          <string>android.app.SystemServiceRegistry$53</string>
          <string>android.app.SystemServiceRegistry$50</string>
          <string>android.app.SystemServiceRegistry$51</string>
          <string>android.app.SystemServiceRegistry$56</string>
          <string>android.app.SystemServiceRegistry$57</string>
          <string>android.app.SystemServiceRegistry$54</string>
          <string>android.app.ResourcesManager$ActivityResources</string>
          <string>android.app.SystemServiceRegistry$55</string>
          <string>android.app.ActivityManager$RunningAppProcessInfo$1</string>
          <string>android.app.ProgressDialog</string>
          <string>com.android.internal.app.IVoiceInteractorCallback$Stub$Proxy</string>
          <string>android.print.IPrintDocumentAdapter$Stub$Proxy</string>
          <string>android.app.SystemServiceRegistry$58</string>
          <string>android.app.SystemServiceRegistry$59</string>
          <string>android.app.SystemServiceRegistry$63</string>
          <string>android.net.INetworkScoreService</string>
          <string>android.app.SystemServiceRegistry$64</string>
          <string>android.app.SystemServiceRegistry$61</string>
          <string>android.app.SystemServiceRegistry$62</string>
          <string>android.view.FocusFinderHelper</string>
          <string>android.app.SystemServiceRegistry$67</string>
          <string>android.app.SystemServiceRegistry$68</string>
          <string>android.app.ActivityView$2$1</string>
          <string>android.app.SystemServiceRegistry$65</string>
          <string>android.app.SystemServiceRegistry$66</string>
          <string>android.app.LauncherActivity</string>
          <string>android.app.SystemServiceRegistry$60</string>
          <string>android.app.DatePickerDialog</string>
          <string>android.app.IActivityController$Stub$Proxy</string>
          <string>android.app.SystemServiceRegistry$69</string>
          <string>com.android.internal.appwidget.IAppWidgetService$Stub$Proxy</string>
          <string>com.android.internal.app.IBatteryStats$Stub$Proxy</string>
          <string>android.app.ActivityThread$EventLoggingReporter</string>
          <string>android.app.SystemServiceRegistry$74</string>
          <string>android.app.SystemServiceRegistry$72</string>
          <string>android.app.RemoteServiceException</string>
          <string>android.app.SystemServiceRegistry$73</string>
          <string>com.android.internal.telephony.IOnSubscriptionsChangedListener$Stub$Proxy</string>
          <string>com.android.internal.appwidget.IAppWidgetHost$Stub$Proxy</string>
          <string>android.app.ActivityOptions$1$1</string>
          <string>android.app.SystemServiceRegistry$70</string>
          <string>android.app.SystemServiceRegistry$71</string>
          <string>android.app.DatePickerDialog$1</string>
          <string>android.print.IWriteResultCallback$Stub</string>
          <string>android.app.LoadedApk$ReceiverDispatcher$Args</string>
          <string>android.content.Loader</string>
          <string>android.view.DisplayAdjustments</string>
          <string>android.app.ActivityThread$Idler</string>
          <string>android.view.textservice.SpellCheckerSession$SpellCheckerSessionListener</string>
          <string>android.net.wifi.IRttManager$Stub</string>
          <string>android.app.ExitTransitionCoordinator</string>
          <string>android.app.ApplicationPackageManager</string>
          <string>android.os.IBatteryPropertiesRegistrar$Stub</string>
          <string>android.app.ActivityManager$MemoryInfo$1</string>
          <string>android.app.ActivityTransitionCoordinator$2</string>
          <string>android.app.ActivityTransitionCoordinator$1</string>
          <string>com.google.android.util.Procedure</string>
          <string>android.app.admin.DeviceAdminReceiver</string>
          <string>android.media.tv.ITvInputHardwareCallback$Stub$Proxy</string>
          <string>android.media.tv.ITvInputManagerCallback$Stub</string>
          <string>android.os.IBatteryPropertiesListener</string>
          <string>java.util.concurrent.ExecutorService</string>
          <string>android.content.pm.IShortcutService$Stub$Proxy</string>
          <string>com.android.internal.widget.DialogViewAnimator</string>
          <string>android.app.TaskStackBuilder</string>
          <string>android.app.ActivityThread$DropBoxReporter</string>
          <string>android.app.FragmentBreadCrumbs</string>
          <string>android.hardware.hdmi.IHdmiDeviceEventListener$Stub</string>
          <string>android.hardware.usb.UsbConstants</string>
          <string>android.filterpacks.numeric.package_info</string>
          <string>android.app.VoiceInteractor</string>
          <string>android.app.ListFragment$2</string>
          <string>android.app.ApplicationErrorReport$1</string>
          <string>android.filterpacks.videosrc.package_info</string>
          <string>android.accessibilityservice.IAccessibilityServiceClient$Stub</string>
          <string>android.app.PackageDeleteObserver</string>
          <string>android.app.ListFragment$1</string>
          <string>android.app.IActivityPendingResult</string>
          <string>com.android.server.vr.VrStateListener</string>
          <string>android.app.SharedPreferencesImpl$2</string>
          <string>android.app.SharedPreferencesImpl$1</string>
          <string>android.app.FragmentManagerImpl$3</string>
          <string>android.app.FragmentManagerImpl$4</string>
          <string>android.app.FragmentManagerImpl$5</string>
          <string>android.app.FragmentManagerImpl$6</string>
          <string>android.location.ICountryListener</string>
          <string>com.android.internal.policy.PhoneLayoutInflater</string>
          <string>android.app.WallpaperManager</string>
          <string>android.app.AppImportanceMonitor</string>
          <string>android.location.IGnssMeasurementsListener$Stub$Proxy</string>
          <string>android.os.IBatteryPropertiesRegistrar$Stub$Proxy</string>
          <string>android.app.JobSchedulerImpl</string>
          <string>android.app.FragmentManager$BackStackEntry</string>
          <string>android.app.SearchManager$OnDismissListener</string>
          <string>android.printservice.recommendation.IRecommendationsChangeListener</string>
          <string>libcore.io.DropBox</string>
          <string>android.app.usage.IUsageStatsManager$Stub$Proxy</string>
          <string>android.media.midi.IMidiManager$Stub$Proxy</string>
          <string>com.android.internal.appwidget.IAppWidgetService$Stub</string>
          <string>android.app.SharedElementCallback</string>
          <string>android.app.ActivityThread$ActivityConfigChangeData</string>
          <string>android.view.HapticFeedbackConstants</string>
          <string>android.app.job.IJobScheduler$Stub$Proxy</string>
          <string>android.content.IRestrictionsManager</string>
          <string>android.app.ApplicationPackageManager$OnPermissionsChangeListenerDelegate</string>
          <string>android.net.ConnectivityThread</string>
          <string>android.app.Dialog$_void__init__android_content_Context_context_int_themeResId_boolean_createContextThemeWrapper_LambdaImpl0</string>
          <string>android.app.IWallpaperManagerCallback$Stub$Proxy</string>
          <string>android.app.FragmentManagerImpl$1</string>
          <string>android.app.FragmentManagerImpl$2</string>
          <string>android.hardware.soundtrigger.SoundTrigger$KeyphraseSoundModel</string>
          <string>android.app.FragmentManagerNonConfig</string>
          <string>android.filterfw.core.package_info</string>
          <string>android.app.ActivityThread$AppBindData</string>
          <string>android.net.wifi.p2p.WifiP2pManager$HandoverMessageListener</string>
          <string>android.app.VoiceInteractor$AbortVoiceRequest</string>
          <string>android.app.ActivityThread$ResultData</string>
          <string>android.app.ActivityThread$StopInfo</string>
          <string>android.app.IntentService$ServiceHandler</string>
          <string>android.app.ApplicationErrorReport$BatteryInfo</string>
          <string>android.net.IConnectivityManager</string>
          <string>android.app.IInstrumentationWatcher$Stub</string>
          <string>android.app.job.IJobScheduler</string>
          <string>android.app.PackageInstallObserver$1</string>
          <string>android.app.ActivityManager$TaskThumbnail$1</string>
          <string>android.net.wifi.nan.IWifiNanSessionListener</string>
          <string>android.net.INetworkScoreCache$Stub$Proxy</string>
          <string>android.app.ActivityOptions$OnAnimationFinishedListener</string>
          <string>android.app.ContextImpl</string>
          <string>android.filterfw.io.package_info</string>
          <string>android.app.ActivityThread$GcIdler</string>
          <string>android.app.Notification$BigPictureStyle</string>
          <string>android.content.Loader$OnLoadCanceledListener</string>
          <string>android.os.IRecoverySystemProgressListener</string>
          <string>android.app.StatusBarManager</string>
          <string>android.database.CursorWrapper</string>
          <string>android.app.RemoteInput</string>
          <string>android.app.ActivityOptions</string>
          <string>android.accessibilityservice.IAccessibilityServiceClient</string>
          <string>android.net.INetworkPolicyListener</string>
          <string>android.app.ResourcesManager$1</string>
          <string>android.app.Notification$DecoratedMediaCustomViewStyle</string>
          <string>android.net.wifi.nan.IWifiNanSessionListener$Stub</string>
          <string>android.app.VoiceInteractor$CompleteVoiceRequest</string>
          <string>android.hardware.hdmi.IHdmiControlService</string>
          <string>android.app.ActivityManager$StackInfo</string>
          <string>android.net.INetworkScoreService$Stub$Proxy</string>
          <string>com.android.internal.app.IBatteryStats</string>
          <string>android.app.SharedPreferencesImpl$EditorImpl</string>
          <string>com.android.internal.telephony.IPhoneStateListener</string>
          <string>android.app.ListActivity$1</string>
          <string>android.app.Notification$Action</string>
          <string>android.app.ListActivity$2</string>
          <string>android.app.AutomaticZenRule$1</string>
          <string>com.android.internal.textservice.ITextServicesManager$Stub$Proxy</string>
          <string>android.app.Notification$MessagingStyle</string>
          <string>android.app.ContextImpl$1</string>
          <string>android.app.Instrumentation$ActivityMonitor</string>
          <string>android.net.INetworkPolicyManager</string>
          <string>android.net.wifi.p2p.WifiP2pManager$ChannelListener</string>
          <string>android.app.ActivityThread$RequestAssistContextExtras</string>
          <string>android.hardware.hdmi.IHdmiVendorCommandListener$Stub$Proxy</string>
          <string>android.app.ReceiverRestrictedContext</string>
          <string>android.net.wifi.p2p.WifiP2pManager$UpnpServiceResponseListener</string>
          <string>android.app.Notification$Action$Extender</string>
          <string>android.app.AlarmManager$ListenerWrapper</string>
          <string>android.hardware.fingerprint.IFingerprintService$Stub$Proxy</string>
          <string>android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionExtra$1</string>
          <string>android.app.VoiceInteractor$PickOptionRequest</string>
          <string>android.telephony.SubscriptionManager</string>
          <string>android.app.IActivityController$Stub</string>
          <string>android.speech.RecognizerIntent</string>
          <string>android.bluetooth.IBluetoothManager</string>
          <string>android.app.ApplicationPackageManager$MoveCallbackDelegate</string>
          <string>android.app.SystemServiceRegistry$12</string>
          <string>android.app.AlarmManager</string>
          <string>android.app.SystemServiceRegistry$13</string>
          <string>android.app.SystemServiceRegistry$10</string>
          <string>android.app.SystemServiceRegistry$11</string>
          <string>android.hardware.soundtrigger.SoundTrigger$KeyphraseRecognitionExtra</string>
          <string>android.media.midi.IMidiDeviceListener$Stub$Proxy</string>
          <string>android.print.IPrintManager</string>
          <string>android.telephony.PreciseDisconnectCause</string>
          <string>android.provider.Downloads$Impl</string>
          <string>android.telephony.Rlog</string>
          <string>android.app.SystemServiceRegistry$16</string>
          <string>android.app.SystemServiceRegistry$17</string>
          <string>android.app.SystemServiceRegistry$14</string>
          <string>android.app.SystemServiceRegistry$15</string>
          <string>android.app.SystemServiceRegistry$18</string>
          <string>android.app.SystemServiceRegistry$19</string>
          <string>android.app.Notification$InboxStyle</string>
          <string>android.app.NativeActivity</string>
          <string>android.content.ComponentCallbacks</string>
          <string>android.app.IActivityPendingResult$Stub$Proxy</string>
          <string>android.os.SystemVibrator</string>
          <string>android.net.IEthernetManager</string>
          <string>android.net.wifi.p2p.WifiP2pManager$DnsSdServiceResponseListener</string>
          <string>android.opengl.GLWallpaperService</string>
          <string>android.app.PendingIntent$OnMarshaledListener</string>
          <string>android.app.ActivityThread$DumpHeapData</string>
          <string>android.hardware.hdmi.IHdmiInputChangeListener$Stub$Proxy</string>
          <string>android.hardware.fingerprint.IFingerprintService$Stub</string>
          <string>android.app.ISearchManager</string>
          <string>android.os.IRecoverySystemProgressListener$Stub</string>
          <string>dalvik.system.BaseDexClassLoader</string>
          <string>android.app.ActivityThread$NewIntentData</string>
          <string>android.app.BackStackRecord$Op</string>
          <string>com.android.internal.backup.LocalTransportService</string>
          <string>android.app.ActivityOptions$OnAnimationStartedListener</string>
          <string>android.content.res.XmlBlock$Parser</string>
          <string>android.media.ToneGenerator</string>
          <string>android.location.ICountryDetector</string>
          <string>android.content.DialogInterface$OnShowListener</string>
          <string>android.app.FragmentManager</string>
          <string>android.hardware.hdmi.IHdmiSystemAudioModeChangeListener</string>
          <string>android.location.IGnssMeasurementsListener$Stub</string>
          <string>android.accessibilityservice.IAccessibilityServiceClient$Stub$Proxy</string>
          <string>android.service.persistentdata.IPersistentDataBlockService</string>
          <string>com.android.internal.telephony.ICarrierConfigLoader$Stub</string>
          <string>android.print.IPrintServicesChangeListener$Stub</string>
          <string>android.location.ICountryDetector$Stub</string>
          <string>android.app.LoadedApk$ServiceDispatcher</string>
          <string>android.os.IPowerManager$Stub</string>
          <string>android.net.wifi.p2p.WifiP2pManager$ServiceResponseListener</string>
          <string>android.app.UiAutomationConnection$1</string>
          <string>android.view.ViewTreeObserver$OnPreDrawListener</string>
          <string>android.app.ActivityManager$RunningTaskInfo$1</string>
          <string>android.app.SearchDialog$SearchBar</string>
          <string>android.print.IPrintDocumentAdapterObserver</string>
          <string>android.app.SharedPreferencesImpl$EditorImpl$2</string>
          <string>android.app.SharedPreferencesImpl$EditorImpl$3</string>
          <string>android.hardware.soundtrigger.SoundTrigger$GenericRecognitionEvent</string>
          <string>android.hardware.soundtrigger.SoundTrigger$RecognitionEvent$1</string>
          <string>android.app.SharedPreferencesImpl$EditorImpl$1</string>
          <string>android.app.ActivityOptions$2</string>
          <string>android.app.ActivityOptions$1</string>
          <string>android.app.Presentation</string>
          <string>android.print.IPrintDocumentAdapterObserver$Stub$Proxy</string>
          <string>android.app.Instrumentation$Idler</string>
          <string>android.hardware.ISerialManager</string>
          <string>android.app.RemoteInput$1</string>
          <string>android.app.LoadedApk$ServiceDispatcher$DeathMonitor</string>
          <string>android.net.IConnectivityManager$Stub$Proxy</string>
          <string>com.android.internal.appwidget.IAppWidgetHost$Stub</string>
          <string>android.os.IUserManager$Stub$Proxy</string>
          <string>android.app.IServiceConnection$Stub</string>
          <string>android.app.ResultInfo$1</string>
          <string>android.app.WallpaperInfo</string>
          <string>android.app.IActivityContainerCallback$Stub</string>
          <string>com.android.internal.telephony.ISub$Stub</string>
          <string>android.app.Notification$Action$Builder</string>
          <string>android.content.pm.IShortcutService</string>
          <string>android.app.ActivityManager$RunningServiceInfo</string>
          <string>com.android.internal.util.UserIcons</string>
          <string>android.filterfw.format.package_info</string>
          <string>android.print.IPrintDocumentAdapter</string>
          <string>android.app.IWallpaperManagerCallback</string>
          <string>com.android.internal.telephony.IOnSubscriptionsChangedListener$Stub</string>
          <string>android.app.Notification</string>
          <string>com.android.internal.telephony.IPhoneStateListener$Stub</string>
          <string>android.app.FragmentManagerState</string>
          <string>android.view.textservice.TextServicesManager</string>
          <string>android.app.UiAutomation$IAccessibilityServiceClientImpl$1</string>
          <string>com.android.internal.app.ISoundTriggerService$Stub</string>
          <string>android.app.UiAutomation$AccessibilityEventFilter</string>
          <string>android.app.ActivityView$SerialExecutor$1</string>
          <string>android.hardware.soundtrigger.SoundTrigger$SoundModelEvent$1</string>
          <string>android.net.wifi.IRttManager</string>
          <string>com.android.internal.widget.Smileys</string>
          <string>android.app.ActivityThread$ProviderKey</string>
          <string>android.hardware.fingerprint.IFingerprintServiceReceiver$Stub</string>
          <string>android.app.VoiceInteractor$ConfirmationRequest</string>
          <string>android.app.UiAutomation</string>
          <string>android.app.AppImportanceMonitor$AppEntry</string>
          <string>android.media.tv.ITvInputManager$Stub$Proxy</string>
          <string>android.app.ProfilerInfo</string>
          <string>android.nfc.NfcManager</string>
          <string>android.os.Vibrator</string>
          <string>android.animation.PointFEvaluator</string>
          <string>android.location.ILocationManager$Stub</string>
          <string>android.app.EnterTransitionCoordinator$5$1$1</string>
          <string>android.app.IAppTask$Stub$Proxy</string>
          <string>android.net.wifi.p2p.IWifiP2pManager$Stub$Proxy</string>
          <string>android.app.DownloadManager$Query</string>
          <string>android.os.IPowerManager$Stub$Proxy</string>
          <string>android.text.ClipboardManager</string>
          <string>android.hardware.usb.IUsbManager$Stub</string>
          <string>android.hardware.fingerprint.IFingerprintServiceReceiver$Stub$Proxy</string>
          <string>android.app.ActivityThread$CreateServiceData</string>
          <string>android.app.ActivityGroup</string>
          <string>android.net.wifi.p2p.WifiP2pManager$GroupInfoListener</string>
          <string>android.hardware.hdmi.IHdmiDeviceEventListener$Stub$Proxy</string>
          <string>com.android.internal.statusbar.IStatusBar$Stub</string>
          <string>android.app.ExitTransitionCoordinator$1</string>
          <string>android.app.AutomaticZenRule</string>
          <string>android.app.ExitTransitionCoordinator$2</string>
          <string>android.os.HardwarePropertiesManager</string>
          <string>android.app.IActivityPendingResult$Stub</string>
          <string>android.app.Instrumentation</string>
          <string>com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy</string>
          <string>android.media.tv.ITvInputHardwareCallback$Stub</string>
          <string>com.android.internal.telephony.IPhoneStateListener$Stub$Proxy</string>
          <string>android.widget.DatePicker$ValidationCallback</string>
          <string>android.os.IBatteryPropertiesRegistrar</string>
          <string>android.app.Notification$CarExtender$Builder</string>
          <string>android.hardware.soundtrigger.IRecognitionStatusCallback$Stub</string>
          <string>android.print.IPrintManager$Stub$Proxy</string>
          <string>android.content.RestrictionsManager</string>
          <string>android.app.SharedPreferencesImpl</string>
          <string>android.content.pm.ShortcutManager</string>
          <string>android.hardware.soundtrigger.SoundTrigger$GenericRecognitionEvent$1</string>
          <string>android.net.wifi.IWifiScanner</string>
          <string>android.app.Notification$_void_writeToParcel_android_os_Parcel_parcel_int_flags_LambdaImpl0</string>
          <string>android.net.wifi.p2p.WifiP2pManager$Channel$P2pHandler</string>
          <string>android.os.PowerManager$WakeLock$1</string>
          <string>com.android.internal.statusbar.IStatusBarService$Stub</string>
          <string>android.print.IWriteResultCallback$Stub$Proxy</string>
          <string>android.app.IActivityContainer$Stub$Proxy</string>
          <string>android.net.INetworkScoreCache$Stub</string>
          <string>com.android.internal.app.IVoiceInteractorRequest$Stub</string>
          <string>android.app.ActivityView$ActivityViewSurfaceTextureListener</string>
          <string>android.app.IWallpaperManagerCallback$Stub</string>
          <string>android.hardware.soundtrigger.SoundTrigger$RecognitionEvent</string>
          <string>android.bluetooth.BluetoothAssignedNumbers</string>
          <string>android.app.IInstrumentationWatcher</string>
          <string>android.content.SharedPreferences$OnSharedPreferenceChangeListener</string>
          <string>android.app.Presentation$3</string>
          <string>android.app.Presentation$2</string>
          <string>android.net.wifi.RttManager$RttCapabilities$1</string>
          <string>android.app.Notification$MessagingStyle$Message</string>
          <string>android.hardware.hdmi.IHdmiControlService$Stub$Proxy</string>
          <string>android.app.Presentation$1</string>
          <string>android.app.DownloadManager</string>
          <string>android.net.IEthernetManager$Stub</string>
          <string>android.app.SearchManager</string>
          <string>android.app.VoiceInteractor$Request</string>
          <string>android.app.ExitTransitionCoordinator$7</string>
          <string>android.app.ExitTransitionCoordinator$8</string>
          <string>android.app.ExitTransitionCoordinator$9</string>
          <string>android.app.ExitTransitionCoordinator$3</string>
          <string>android.app.ExitTransitionCoordinator$4</string>
          <string>android.app.UiAutomation$IAccessibilityServiceClientImpl</string>
          <string>android.app.ExitTransitionCoordinator$5</string>
          <string>android.app.ExitTransitionCoordinator$6</string>
          <string>android.net.wifi.IWifiScanner$Stub</string>
          <string>com.android.internal.app.IVoiceInteractorCallback$Stub</string>
          <string>android.app.admin.DevicePolicyManager</string>
          <string>android.app.VoiceInteractor$PickOptionRequest$Option</string>
          <string>android.app.LoadedApk$ReceiverDispatcher</string>
          <string>android.os.IUserManager$Stub</string>
          <string>android.net.wifi.p2p.WifiP2pManager$PeerListListener</string>
          <string>android.app.Notification$Style</string>
          <string>com.android.internal.appwidget.IAppWidgetService</string>
          <string>android.app.ApplicationErrorReport</string>
          <string>android.hardware.usb.IUsbManager</string>
          <string>com.android.internal.app.IBatteryStats$Stub</string>
          <string>android.app.ActivityThread</string>
          <string>android.app.Instrumentation$EmptyRunnable</string>
          <string>com.android.internal.textservice.ITextServicesManager</string>
          <string>android.app.MediaRouteActionProvider</string>
          <string>android.app.WallpaperManager$Globals</string>
          <string>android.app.ActionBar$FollowOutOfActionBar</string>
          <string>android.app.Activity$HostCallbacks</string>
          <string>libcore.io.EventLogger$Reporter</string>
          <string>android.net.IConnectivityManager$Stub</string>
          <string>com.android.internal.statusbar.IStatusBarService</string>
          <string>android.app.Instrumentation$1ContextMenuRunnable</string>
          <string>android.hardware.soundtrigger.IRecognitionStatusCallback$Stub$Proxy</string>
          <string>android.app.FragmentContainer</string>
          <string>android.bluetooth.BluetoothAvrcp</string>
          <string>android.app.ActivityTransitionState$1</string>
          <string>android.app.ActivityThread$ActivityClientRecord</string>
          <string>android.app.ActivityTransitionState$2</string>
          <string>android.app.UiAutomationConnection</string>
          <string>android.os.IRecoverySystemProgressListener$Stub$Proxy</string>
          <string>android.print.IPrintServicesChangeListener$Stub$Proxy</string>
          <string>android.app.SearchDialog</string>
          <string>android.bluetooth.BluetoothManager</string>
          <string>android.database.CharArrayBuffer</string>
          <string>android.app.ActivityTransitionCoordinator$ContinueTransitionListener</string>
          <string>android.app.TabActivity</string>
          <string>android.app.ActivityView$ActivityContainerWrapper</string>
          <string>android.app.ISearchManagerCallback</string>
          <string>android.media.midi.IMidiManager$Stub</string>
          <string>android.app.ActivityManagerNative</string>
          <string>android.app.IWallpaperManager</string>
          <string>android.location.ILocationListener$Stub</string>
          <string>android.media.midi.IMidiDeviceListener$Stub</string>
          <string>android.app.IServiceConnection$Stub$Proxy</string>
          <string>android.app.ActivityManager$RunningServiceInfo$1</string>
          <string>android.net.wifi.nan.IWifiNanManager$Stub</string>
          <string>android.os.IVibratorService</string>
          <string>android.media.MediaRouter$Callback</string>
          <string>android.app.ExitTransitionCoordinator$10</string>
          <string>android.app.ExitTransitionCoordinator$11</string>
          <string>android.app.SharedElementCallback$1</string>
          <string>android.app.MediaRouteActionProvider$MediaRouterCallback</string>
          <string>android.app.LoadedApk$ServiceDispatcher$RunConnection</string>
          <string>java.lang.ClassLoader</string>
          <string>android.app.ISearchManagerCallback$Stub$Proxy</string>
          <string>android.os.BatteryManager</string>
          <string>android.app.VoiceInteractor$1</string>
          <string>android.app.VoiceInteractor$2</string>
          <string>android.net.wifi.nan.IWifiNanEventListener$Stub$Proxy</string>
          <string>android.app.BackStackRecord$TransitionState</string>
          <string>libcore.io.EventLogger</string>
          <string>android.media.tv.ITvInputHardware$Stub</string>
          <string>android.location.ILocationListener$Stub$Proxy</string>
          <string>android.net.nsd.INsdManager$Stub$Proxy</string>
          <string>android.printservice.recommendation.IRecommendationsChangeListener$Stub$Proxy</string>
          <string>com.android.internal.telephony.ICarrierConfigLoader$Stub$Proxy</string>
          <string>android.content.ContextWrapper</string>
          <string>android.location.IGnssNavigationMessageListener$Stub</string>
          <string>android.hardware.soundtrigger.SoundTrigger$RecognitionConfig</string>
          <string>android.service.restrictions.RestrictionsReceiver</string>
          <string>com.android.server.power.ScreenOnBlocker</string>
          <string>android.net.wifi.p2p.WifiP2pManager$PersistentGroupInfoListener</string>
          <string>com.android.internal.telephony.ICarrierConfigLoader</string>
          <string>android.app.LoaderManagerImpl</string>
          <string>android.util.Config</string>
          <string>android.net.INetworkPolicyListener$Stub</string>
          <string>android.net.wifi.p2p.WifiP2pManager$ConnectionInfoListener</string>
          <string>android.app.Fragment$InstantiationException</string>
          <string>android.util.FloatMath</string>
          <string>android.app.ActivityManager$TaskThumbnail</string>
          <string>android.net.nsd.INsdManager$Stub</string>
          <string>android.hardware.soundtrigger.SoundTrigger$ConfidenceLevel$1</string>
          <string>android.app.ActivityManagerProxy</string>
          <string>android.app.IActivityManager$ContentProviderHolder$1</string>
          <string>android.app.SearchManager$OnCancelListener</string>
          <string>android.filterpacks.performance.package_info</string>
          <string>android.service.persistentdata.PersistentDataBlockManager</string>
          <string>android.content.IRestrictionsManager$Stub$Proxy</string>
          <string>android.net.wifi.nan.IWifiNanSessionListener$Stub$Proxy</string>
          <string>android.app.IActivityManager$ContentProviderHolder</string>
          <string>android.app.SharedPreferencesImpl$MemoryCommitResult</string>
          <string>android.net.wifi.RttManager$RttCapabilities</string>
          <string>android.media.tv.ITvInputManager$Stub</string>
          <string>android.os.MessageQueue$IdleHandler</string>
          <string>android.os.storage.StorageResultCode</string>
          <string>android.net.wifi.p2p.WifiP2pManager$Channel</string>
          <string>android.content.pm.IShortcutService$Stub</string>
          <string>android.app.PackageDeleteObserver$1</string>
          <string>com.android.internal.app.IVoiceInteractorRequest</string>
          <string>android.print.IPrintJobStateChangeListener$Stub$Proxy</string>
          <string>android.app.IActivityContainer$Stub</string>
          <string>android.app.ActivityView$1</string>
          <string>android.app.ActivityView$2</string>
          <string>android.app.IActivityContainerCallback$Stub$Proxy</string>
          <string>android.app.IAlarmManager</string>
          <string>android.app.ActivityManager</string>
          <string>android.app.LoaderManager$LoaderCallbacks</string>
          <string>android.app.ActivityManagerNative$1</string>
          <string>android.app.ActivityThread$BindServiceData</string>
          <string>android.app.Instrumentation$ActivityWaiter</string>
          <string>android.app.MediaRouteButton</string>
          <string>android.net.INetworkPolicyManager$Stub</string>
          <string>android.app.ApplicationThreadNative</string>
          <string>android.app.LoadedApk</string>
          <string>android.hardware.soundtrigger.SoundTrigger$ModuleProperties</string>
          <string>android.app.job.IJobScheduler$Stub</string>
          <string>android.net.INetworkPolicyManager$Stub$Proxy</string>
          <string>android.app.ActivityManager$MemoryInfo</string>
          <string>android.app.IUiAutomationConnection$Stub</string>
          <string>android.content.res.ResourcesKey</string>
          <string>android.app.usage.IUsageStatsManager$Stub</string>
          <string>android.app.ActivityTransitionCoordinator$SharedElementOriginalState</string>
          <string>android.print.IPrintManager$Stub</string>
          <string>android.app.ActivityOptions$2$1</string>
          <string>android.net.IEthernetManager$Stub$Proxy</string>
          <string>android.hardware.soundtrigger.SoundTrigger$GenericSoundModel$1</string>
          <string>java.lang.Object</string>
          <string>android.app.Activity</string>
          <string>android.hardware.hdmi.IHdmiDeviceEventListener</string>
          <string>android.app.ActivityManager$RunningAppProcessInfo</string>
          <string>android.net.nsd.INsdManager</string>
          <string>android.app.QueuedWork</string>
          <string>android.content.IntentSender$SendIntentException</string>
          <string>android.app.EnterTransitionCoordinator$8</string>
          <string>android.app.IServiceConnection</string>
          <string>android.hardware.soundtrigger.SoundTrigger$GenericSoundModel</string>
          <string>android.app.RemoteInput$Builder</string>
          <string>android.app.EnterTransitionCoordinator$7</string>
          <string>android.app.EnterTransitionCoordinator$6</string>
          <string>android.app.EnterTransitionCoordinator$5</string>
          <string>android.app.EnterTransitionCoordinator$9</string>
          <string>android.app.ITaskStackListener$Stub</string>
          <string>android.hardware.hdmi.IHdmiSystemAudioModeChangeListener$Stub</string>
          <string>android.os.IPowerManager</string>
          <string>android.app.Notification$Action$1</string>
          <string>android.hardware.soundtrigger.IRecognitionStatusCallback</string>
          <string>android.content.pm.IPackageDeleteObserver2$Stub</string>
          <string>android.os.IUserManager</string>
          <string>android.appwidget.AppWidgetProvider</string>
          <string>android.app.VoiceInteractor$PickOptionRequest$Option$1</string>
          <string>android.app.EnterTransitionCoordinator$4</string>
          <string>android.app.ActivityManager$TaskDescription$1</string>
          <string>android.app.EnterTransitionCoordinator$3</string>
          <string>android.content.res.AssetManager$AssetInputStream</string>
          <string>android.app.DatePickerDialog$OnDateSetListener</string>
          <string>android.app.EnterTransitionCoordinator$2</string>
          <string>android.app.FragmentHostCallback</string>
          <string>android.app.EnterTransitionCoordinator$1</string>
          <string>com.android.internal.app.IVoiceInteractorRequest$Stub$Proxy</string>
          <string>android.app.NativeActivity$NativeContentView</string>
          <string>android.app.Dialog</string>
          <string>android.app.BackStackState</string>
          <string>com.android.internal.telephony.ISub$Stub$Proxy</string>
          <string>android.net.wifi.nan.IWifiNanEventListener$Stub</string>
          <string>android.app.LauncherActivity$ListItem</string>
          <string>android.app.AppOpsManager$OnOpChangedInternalListener</string>
          <string>android.app.Notification$1</string>
          <string>android.os.health.SystemHealthManager</string>
          <string>android.app.BackStackState$1</string>
          <string>android.app.SystemServiceRegistry$StaticApplicationContextServiceFetcher</string>
          <string>android.app.Fragment</string>
          <string>android.app.ActivityThread$DumpComponentInfo</string>
          <string>android.app.FragmentController</string>
          <string>android.filterpacks.imageproc.package_info</string>
          <string>android.app.LoadedApk$ServiceDispatcher$ConnectionInfo</string>
          <string>android.app.ActivityView$ActivityContainerCallback</string>
          <string>android.appwidget.AppWidgetManager</string>
          <string>android.content.ComponentCallbacks2</string>
          <string>android.app.ISearchManager$Stub</string>
          <string>android.net.wifi.p2p.WifiP2pManager</string>
          <string>android.app.ActivityThread$ContextCleanupInfo</string>
          <string>android.location.ICountryListener$Stub</string>
          <string>android.app.AppOpsManager</string>
          <string>android.app.IProcessObserver$Stub$Proxy</string>
          <string>android.app.LauncherActivity$1</string>
          <string>android.app.UiAutomation$OnAccessibilityEventListener</string>
          <string>android.app.LoadedApk$ServiceDispatcher$InnerConnection</string>
          <string>android.app.PendingIntent</string>
          <string>android.widget.SearchView$OnQueryTextListener</string>
          <string>android.app.LauncherActivity$ActivityAdapter</string>
          <string>android.location.ILocationManager$Stub$Proxy</string>
          <string>android.app.Notification$MediaStyle</string>
          <string>android.app.ActivityTransitionState</string>
          <string>android.app.UiModeManager</string>
          <string>android.os.PowerManager</string>
          <string>android.app.PendingIntent$FinishedDispatcher</string>
          <string>android.net.wifi.IWifiScanner$Stub$Proxy</string>
          <string>com.android.internal.app.ISoundTriggerService</string>
          <string>android.net.INetworkScoreService$Stub</string>
          <string>android.net.wifi.IRttManager$Stub$Proxy</string>
          <string>android.app.EnterTransitionCoordinator$10</string>
          <string>android.app.EnterTransitionCoordinator$11</string>
          <string>android.app.SearchableInfo</string>
          <string>android.app.FragmentBreadCrumbs$OnBreadCrumbClickListener</string>
          <string>android.hardware.display.DisplayManager</string>
          <string>android.app.ActivityThread$CreateBackupAgentData</string>
          <string>android.app.SystemServiceRegistry$CachedServiceFetcher</string>
          <string>android.app.Application$OnProvideAssistDataListener</string>
          <string>android.app.WallpaperManager$FastBitmapDrawable</string>
          <string>android.filterfw.geometry.package_info</string>
          <string>android.app.Instrumentation$ActivityGoing</string>
          <string>android.app.Dialog$ListenersHandler</string>
          <string>com.android.internal.textservice.ITextServicesManager$Stub</string>
          <string>android.app.AppOpsManager$1</string>
          <string>android.location.ICountryListener$Stub$Proxy</string>
          <string>android.app.LoaderManager</string>
          <string>android.app.ActivityTransitionCoordinator</string>
          <string>android.app.Fragment$SavedState</string>
          <string>android.os.IRecoverySystem$Stub$Proxy</string>
          <string>android.app.WallpaperInfo$1</string>
          <string>android.app.Notification$CarExtender</string>
          <string>android.widget.ImageView$ScaleType</string>
          <string>android.hardware.hdmi.IHdmiHotplugEventListener$Stub</string>
          <string>android.app.ActivityTransitionCoordinator$GhostViewListeners</string>
          <string>android.media.MediaRouter$SimpleCallback</string>
          <string>android.app.ActivityThread$ReceiverData</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.accounts.ss</name>
        <entities>
          <string>android.accounts.ChooseAccountActivity$1</string>
          <string>android.accounts.IAccountManagerResponse$Stub$Proxy</string>
          <string>android.accounts.IAccountManagerResponse</string>
          <string>android.accounts.AccountsException</string>
          <string>android.accounts.AccountManager$AmsTask</string>
          <string>android.accounts.AccountManager$Future2Task$1</string>
          <string>android.accounts.AccountManagerResponse$1</string>
          <string>android.accounts.AbstractAccountAuthenticator$Transport</string>
          <string>android.accounts.AccountManager$BaseFutureTask$1</string>
          <string>android.accounts.ChooseTypeAndAccountActivity</string>
          <string>android.accounts.GrantCredentialsPermissionActivity$1$1</string>
          <string>android.accounts.AccountManager</string>
          <string>android.accounts.AccountManager$2</string>
          <string>android.accounts.AccountManager$11</string>
          <string>android.accounts.ChooseTypeAndAccountActivity$1</string>
          <string>android.accounts.AccountManager$10</string>
          <string>android.accounts.AccountManager$1</string>
          <string>android.accounts.AbstractAccountAuthenticator$2</string>
          <string>android.accounts.AccountManager$13</string>
          <string>android.accounts.AbstractAccountAuthenticator$1</string>
          <string>android.accounts.AccountManager$12</string>
          <string>java.util.concurrent.CancellationException</string>
          <string>android.accounts.Account</string>
          <string>android.accounts.AccountManager$15</string>
          <string>android.accounts.ChooseAccountTypeActivity$1</string>
          <string>android.accounts.AccountManager$14</string>
          <string>android.accounts.IAccountManager$Stub$Proxy</string>
          <string>android.accounts.AccountManager$8</string>
          <string>android.accounts.GrantCredentialsPermissionActivity$1</string>
          <string>android.accounts.ChooseAccountTypeActivity$AccountArrayAdapter</string>
          <string>android.accounts.AccountManager$7</string>
          <string>android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask$1$1</string>
          <string>android.accounts.AccountManager$9</string>
          <string>android.accounts.AccountManager$4</string>
          <string>android.accounts.AccountManager$3</string>
          <string>android.accounts.AccountManager$6</string>
          <string>android.accounts.AccountManagerFuture</string>
          <string>android.accounts.AbstractAccountAuthenticator</string>
          <string>android.accounts.AccountManager$5</string>
          <string>android.accounts.Account$1</string>
          <string>android.accounts.AccountManager$BaseFutureTask$Response</string>
          <string>android.accounts.AccountManagerCallback</string>
          <string>android.accounts.IAccountManagerResponse$Stub</string>
          <string>android.accounts.ChooseAccountTypeActivity$AuthInfo</string>
          <string>android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask</string>
          <string>android.accounts.AccountManagerResponse</string>
          <string>android.accounts.AccountManager$20</string>
          <string>android.accounts.AccountAuthenticatorResponse</string>
          <string>android.accounts.ChooseAccountActivity$ViewHolder</string>
          <string>android.accounts.AccountManager$22</string>
          <string>android.accounts.AccountManager$21</string>
          <string>android.accounts.AccountManager$23</string>
          <string>android.accounts.IAccountManager$Stub</string>
          <string>java.lang.Error</string>
          <string>android.os.RemoteException</string>
          <string>java.util.concurrent.Callable</string>
          <string>android.accounts.AccountAuthenticatorResponse$1</string>
          <string>android.accounts.AccountManager$AmsTask$1</string>
          <string>android.accounts.OnAccountsUpdateListener</string>
          <string>android.accounts.AuthenticatorException</string>
          <string>android.accounts.IAccountManager</string>
          <string>android.accounts.AccountManager$AmsTask$Response</string>
          <string>android.accounts.AccountManager$17</string>
          <string>android.accounts.ChooseAccountActivity</string>
          <string>android.accounts.AccountManager$16</string>
          <string>android.accounts.AccountManager$Future2Task</string>
          <string>java.lang.Boolean</string>
          <string>android.accounts.AbstractAccountAuthenticator$4</string>
          <string>android.accounts.AccountManager$BaseFutureTask</string>
          <string>android.accounts.AccountManager$19</string>
          <string>android.accounts.AbstractAccountAuthenticator$3</string>
          <string>android.accounts.AccountManager$18</string>
          <string>android.accounts.ChooseAccountTypeActivity$ViewHolder</string>
          <string>android.accounts.AuthenticatorDescription</string>
          <string>android.accounts.OperationCanceledException</string>
          <string>java.lang.RuntimeException</string>
          <string>android.database.SQLException</string>
          <string>android.accounts.ChooseAccountActivity$AccountArrayAdapter</string>
          <string>android.accounts.ChooseAccountTypeActivity</string>
          <string>android.accounts.ChooseAccountActivity$AccountInfo</string>
          <string>android.accounts.GrantCredentialsPermissionActivity</string>
          <string>android.accounts.AuthenticatorDescription$1</string>
          <string>android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask$1</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.net.ss</name>
        <entities>
          <string>com.android.server.net.NetworkPolicyManagerService$5</string>
          <string>com.android.server.net.NetworkPolicyManagerService$4</string>
          <string>com.android.internal.util.FileRotator$Rewriter</string>
          <string>com.android.server.net.NetworkStatsService</string>
          <string>android.net.NetworkStats$NonMonotonicObserver</string>
          <string>com.android.server.net.NetworkPolicyManagerService$7</string>
          <string>com.android.server.net.NetworkPinner</string>
          <string>com.android.server.net.NetworkPolicyManagerService$6</string>
          <string>java.util.SortedSet</string>
          <string>com.android.server.net.NetworkPolicyManagerService$9</string>
          <string>com.android.server.net.NetworkPolicyManagerService$8</string>
          <string>com.android.server.net.LockdownVpnTracker$1</string>
          <string>android.net.NetworkStats$Entry</string>
          <string>com.android.server.net.NetworkPolicyManagerService$1</string>
          <string>com.android.server.net.NetworkPolicyManagerService$3</string>
          <string>com.android.server.net.NetworkPolicyManagerService$2</string>
          <string>com.android.server.net.NetworkStatsObservers$NetworkUsageRequestInfo</string>
          <string>com.android.server.net.IpConfigStore</string>
          <string>com.android.server.net.NetworkStatsObservers$1</string>
          <string>com.android.server.net.NetworkStatsObservers$RequestInfo</string>
          <string>com.android.server.net.NetworkStatsObservers</string>
          <string>com.google.android.collect.Sets</string>
          <string>com.android.server.net.IpConfigStore$1</string>
          <string>android.content.BroadcastReceiver</string>
          <string>com.android.server.net.NetlinkTracker</string>
          <string>com.android.server.net.NetworkStatsService$DefaultNetworkStatsSettings</string>
          <string>android.content.BroadcastReceiver$PendingResult</string>
          <string>com.android.server.net.NetworkStatsCollection$Key</string>
          <string>android.app.INotificationManager</string>
          <string>android.content.BroadcastReceiver$PendingResult$1</string>
          <string>com.android.server.net.NetworkPinner$Callback</string>
          <string>com.android.server.net.NetworkStatsService$3</string>
          <string>com.android.server.net.NetworkStatsAccess</string>
          <string>com.android.server.net.NetworkStatsService$2</string>
          <string>com.android.server.net.NetworkStatsService$1</string>
          <string>com.android.server.net.NetworkStatsRecorder$RemoveUidRewriter</string>
          <string>com.android.server.net.NetworkStatsService$NetworkStatsSettings$Config</string>
          <string>com.android.server.net.NetworkStatsService$7</string>
          <string>com.android.server.net.NetworkStatsService$6</string>
          <string>com.android.server.net.NetworkStatsCollection</string>
          <string>android.net.NetworkStatsHistory$Entry</string>
          <string>com.android.server.net.NetworkStatsService$5</string>
          <string>com.android.server.net.NetworkStatsService$4</string>
          <string>com.android.server.net.NetworkIdentitySet</string>
          <string>com.android.server.net.NetworkPolicyManagerService$NetworkPolicyManagerInternalImpl</string>
          <string>com.android.server.net.DelayedDiskWrite$1</string>
          <string>com.android.server.net.NetworkStatsService$HandlerCallback</string>
          <string>android.net.NetworkIdentity</string>
          <string>com.android.server.net.NetworkStatsService$NetworkStatsSettings</string>
          <string>com.android.server.net.DelayedDiskWrite</string>
          <string>com.android.server.net.NetworkStatsRecorder</string>
          <string>com.android.server.net.NetworkPolicyManagerService$MyPackageMonitor</string>
          <string>android.net.INetworkStatsSession$Stub</string>
          <string>com.android.server.net.NetworkPolicyManagerService$15</string>
          <string>com.android.server.net.NetworkPolicyManagerService$16</string>
          <string>com.android.server.net.NetworkStatsAccess$Level</string>
          <string>android.util.TrustedTime</string>
          <string>com.android.server.net.NetworkPolicyManagerShellCommand</string>
          <string>com.android.server.net.DnsServerRepository</string>
          <string>com.android.server.net.NetworkPolicyManagerService$AppIdleStateChangeListener</string>
          <string>com.android.server.net.NetworkStatsRecorder$CombiningRewriter</string>
          <string>android.net.INetworkStatsSession</string>
          <string>com.android.server.net.NetworkPolicyManagerInternal</string>
          <string>com.android.server.net.NetworkStatsObservers$UserUsageRequestInfo</string>
          <string>com.android.server.net.LockdownVpnTracker</string>
          <string>com.android.server.net.NetworkPolicyManagerService</string>
          <string>com.android.server.net.NetworkStatsObservers$StatsContext</string>
          <string>com.android.server.net.BaseNetworkObserver</string>
          <string>android.net.INetworkStatsSession$Stub$Proxy</string>
          <string>com.android.server.net.DnsServerEntry</string>
          <string>com.android.server.net.NetworkPolicyManagerService$10</string>
          <string>com.android.server.net.NetworkStatsService$DropBoxNonMonotonicObserver</string>
          <string>com.android.server.net.NetworkPolicyManagerService$11</string>
          <string>com.android.server.net.NetworkPolicyManagerService$12</string>
          <string>java.lang.OutOfMemoryError</string>
          <string>com.android.server.net.NetworkPolicyManagerService$13</string>
          <string>com.android.server.net.DelayedDiskWrite$Writer</string>
          <string>com.android.server.net.NetworkPolicyManagerService$14</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.view.inputmethod.ss</name>
        <entities>
          <string>android.view.inputmethod.CompletionInfo</string>
          <string>android.view.inputmethod.InputMethodSubtypeArray</string>
          <string>android.view.inputmethod.CorrectionInfo$1</string>
          <string>java.util.zip.GZIPInputStream</string>
          <string>android.view.inputmethod.ExtractedText$1</string>
          <string>android.view.inputmethod.InputConnectionInspector</string>
          <string>android.view.inputmethod.CursorAnchorInfo</string>
          <string>android.view.inputmethod.InputMethodManager$ControlledInputConnectionWrapper</string>
          <string>android.view.inputmethod.InputBinding$1</string>
          <string>android.view.inputmethod.InputMethodManager</string>
          <string>android.view.inputmethod.InputMethodInfo</string>
          <string>com.android.internal.view.IInputMethodClient$Stub</string>
          <string>android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder</string>
          <string>android.view.inputmethod.CorrectionInfo</string>
          <string>android.view.inputmethod.CompletionInfo$1</string>
          <string>android.view.inputmethod.ExtractedTextRequest</string>
          <string>android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder</string>
          <string>android.view.inputmethod.InputMethodManager$ImeInputEventSender</string>
          <string>android.view.inputmethod.BaseInputConnection</string>
          <string>android.view.inputmethod.InputBinding</string>
          <string>android.view.inputmethod.SparseRectFArray</string>
          <string>android.view.inputmethod.InputMethodManager$2</string>
          <string>android.view.inputmethod.InputMethodManager$1</string>
          <string>android.view.inputmethod.SparseRectFArray$1</string>
          <string>android.view.inputmethod.InputMethodManager$PendingEvent</string>
          <string>android.text.InputType</string>
          <string>android.view.inputmethod.ComposingText</string>
          <string>android.view.inputmethod.ExtractedText</string>
          <string>android.view.inputmethod.CursorAnchorInfo$1</string>
          <string>android.view.inputmethod.ExtractedTextRequest$1</string>
          <string>android.view.inputmethod.InputMethodManager$H</string>
          <string>android.view.inputmethod.InputMethodSubtype$1</string>
          <string>com.android.internal.view.IInputMethodClient$Stub$Proxy</string>
          <string>android.view.inputmethod.InputConnectionWrapper</string>
          <string>android.view.inputmethod.EditorInfo$1</string>
          <string>android.view.inputmethod.InputMethodInfo$1</string>
          <string>android.view.inputmethod.InputMethodSubtype</string>
          <string>android.icu.text.LocaleDisplayNames</string>
          <string>android.view.InputEventSender</string>
          <string>android.view.inputmethod.EditorInfo</string>
          <string>android.view.inputmethod.InputMethodManager$FinishedInputEventCallback</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.soundtrigger.ss</name>
        <entities>
          <string>com.android.server.soundtrigger.SoundTriggerHelper$ModelData</string>
          <string>com.android.server.soundtrigger.SoundTriggerHelper$MyCallStateListener</string>
          <string>com.android.server.soundtrigger.SoundTriggerService$LocalSoundTriggerService</string>
          <string>com.android.server.soundtrigger.SoundTriggerService</string>
          <string>com.android.server.soundtrigger.SoundTriggerDbHelper$GenericSoundModelContract</string>
          <string>com.android.server.soundtrigger.SoundTriggerService$SoundTriggerServiceStub</string>
          <string>com.android.server.soundtrigger.SoundTriggerHelper</string>
          <string>com.android.server.soundtrigger.SoundTriggerDbHelper</string>
          <string>com.android.server.soundtrigger.SoundTriggerHelper$PowerSaveModeListener</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.graphics.drawable.ss</name>
        <entities>
          <string>android.graphics.drawable.NinePatchDrawable$NinePatchState</string>
          <string>android.graphics.drawable.AnimationDrawable$AnimationState</string>
          <string>android.graphics.drawable.ColorDrawable</string>
          <string>android.graphics.drawable.Drawable</string>
          <string>android.graphics.drawable.DrawableInflater</string>
          <string>android.graphics.RadialGradient</string>
          <string>android.graphics.drawable.Drawable$ConstantState</string>
          <string>android.graphics.drawable.RotateDrawable$RotateState</string>
          <string>android.graphics.drawable.VectorDrawable$VClipPath</string>
          <string>android.graphics.drawable.Icon$OnDrawableLoadedListener</string>
          <string>android.graphics.drawable.Icon$1</string>
          <string>android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState$PendingAnimator</string>
          <string>android.graphics.drawable.AnimatedRotateDrawable$1</string>
          <string>android.graphics.drawable.NinePatchDrawable</string>
          <string>android.graphics.drawable.BitmapDrawable$BitmapState</string>
          <string>android.graphics.drawable.ShapeDrawable$ShapeState</string>
          <string>android.graphics.drawable.VectorDrawable$VPath</string>
          <string>android.graphics.drawable.RotateDrawable</string>
          <string>android.graphics.CornerPathEffect</string>
          <string>android.graphics.drawable.RippleDrawable$RippleState</string>
          <string>android.graphics.drawable.GradientDrawable$GradientState</string>
          <string>android.graphics.drawable.VectorDrawable$VFullPath$1</string>
          <string>android.graphics.drawable.LayerDrawable</string>
          <string>android.graphics.drawable.AnimatedStateListDrawable$FrameInterpolator</string>
          <string>android.graphics.drawable.StateListDrawable$StateListState</string>
          <string>android.graphics.drawable.RippleComponent$RenderNodeAnimatorSet</string>
          <string>android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorRT</string>
          <string>android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimator</string>
          <string>android.graphics.PathEffect</string>
          <string>android.graphics.drawable.AnimatedVectorDrawable</string>
          <string>android.graphics.drawable.AnimationDrawable</string>
          <string>com.android.server.policy.RecentApplicationsBackground</string>
          <string>android.graphics.drawable.ClipDrawable</string>
          <string>android.graphics.drawable.GradientDrawable</string>
          <string>android.graphics.drawable.shapes.Shape</string>
          <string>android.graphics.SweepGradient</string>
          <string>android.graphics.ColorFilter</string>
          <string>android.graphics.drawable.VectorDrawable$VGroup$1</string>
          <string>android.graphics.drawable.ShapeDrawable</string>
          <string>android.graphics.Path$FillType</string>
          <string>android.graphics.drawable.DrawableContainer$DrawableContainerState</string>
          <string>android.graphics.drawable.AnimatedVectorDrawable$2</string>
          <string>android.graphics.drawable.PictureDrawable</string>
          <string>android.graphics.drawable.AnimatedVectorDrawable$1</string>
          <string>android.graphics.drawable.ClipDrawable$ClipState</string>
          <string>android.graphics.LightingColorFilter</string>
          <string>android.graphics.drawable.ScaleDrawable</string>
          <string>android.graphics.drawable.DrawableWrapper</string>
          <string>android.graphics.drawable.LevelListDrawable$LevelListState</string>
          <string>android.graphics.drawable.ScaleDrawable$ScaleState</string>
          <string>android.graphics.drawable.AnimatedStateListDrawable$AnimatableTransition</string>
          <string>android.graphics.drawable.GradientDrawable$Orientation</string>
          <string>android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState</string>
          <string>android.view.RenderNodeAnimatorSetHelper</string>
          <string>android.graphics.drawable.VectorDrawable$VGroup</string>
          <string>android.graphics.drawable.ColorDrawable$ColorState</string>
          <string>android.graphics.drawable.Icon$LoadDrawableTask</string>
          <string>android.graphics.SumPathEffect</string>
          <string>android.graphics.drawable.RippleBackground$BackgroundProperty</string>
          <string>android.graphics.drawable.DrawableContainer$BlockInvalidateCallback</string>
          <string>android.graphics.drawable.Animatable2</string>
          <string>android.graphics.drawable.Drawable$Callback</string>
          <string>android.graphics.drawable.LevelListDrawable</string>
          <string>android.graphics.DiscretePathEffect</string>
          <string>android.graphics.drawable.DrawableContainer$1</string>
          <string>android.graphics.drawable.InsetDrawable$InsetState</string>
          <string>android.graphics.drawable.RippleForeground$LogDecelerateInterpolator</string>
          <string>android.graphics.drawable.StateListDrawable</string>
          <string>android.graphics.drawable.RippleForeground$1</string>
          <string>android.graphics.drawable.LayerDrawable$LayerState</string>
          <string>android.graphics.drawable.RippleForeground$2</string>
          <string>android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState</string>
          <string>android.graphics.drawable.RippleForeground$3</string>
          <string>android.graphics.drawable.RippleForeground$4</string>
          <string>android.graphics.drawable.AnimatedStateListDrawable$AnimationDrawableTransition</string>
          <string>android.graphics.BitmapShader</string>
          <string>android.graphics.drawable.AnimatedRotateDrawable</string>
          <string>android.graphics.drawable.AnimatedVectorDrawable$VectorDrawableAnimatorUI</string>
          <string>android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState</string>
          <string>android.graphics.drawable.TransitionDrawable$TransitionState</string>
          <string>android.graphics.drawable.BitmapDrawable</string>
          <string>android.graphics.NinePatch</string>
          <string>android.graphics.drawable.VectorDrawable$VectorDrawableState</string>
          <string>android.graphics.PorterDuff</string>
          <string>android.graphics.drawable.Animatable</string>
          <string>android.graphics.drawable.RippleBackground$1</string>
          <string>android.graphics.drawable.TransitionDrawable</string>
          <string>android.graphics.drawable.Animatable2$AnimationCallback</string>
          <string>android.graphics.drawable.VectorDrawable$VObject</string>
          <string>android.graphics.drawable.RippleComponent</string>
          <string>android.graphics.drawable.RippleDrawable</string>
          <string>android.graphics.drawable.RippleForeground</string>
          <string>android.graphics.drawable.AnimatedStateListDrawable$Transition</string>
          <string>android.graphics.drawable.ShapeDrawable$ShaderFactory</string>
          <string>android.graphics.Insets</string>
          <string>android.graphics.NinePatch$InsetStruct</string>
          <string>android.graphics.drawable.VectorDrawable</string>
          <string>android.graphics.drawable.Icon</string>
          <string>android.graphics.ComposePathEffect</string>
          <string>android.graphics.drawable.DrawableContainer</string>
          <string>android.graphics.drawable.AnimatedStateListDrawable</string>
          <string>android.graphics.drawable.InsetDrawable</string>
          <string>android.graphics.drawable.AnimatedStateListDrawable$AnimatedVectorDrawableTransition</string>
          <string>android.view.ViewDebug$ExportedProperty</string>
          <string>android.graphics.drawable.VectorDrawable$VFullPath</string>
          <string>android.graphics.drawable.Icon$LoadDrawableTask$1</string>
          <string>android.graphics.DashPathEffect</string>
          <string>android.graphics.drawable.LayerDrawable$ChildDrawable</string>
          <string>android.graphics.drawable.DrawableWrapper$DrawableWrapperState</string>
          <string>android.graphics.drawable.RippleBackground</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.printservice.ss</name>
        <entities>
          <string>android.printservice.PrintService$ServiceHandler</string>
          <string>android.printservice.IPrintServiceClient</string>
          <string>android.printservice.PrintJob</string>
          <string>android.printservice.CustomPrinterIconCallback</string>
          <string>java.lang.IllegalAccessError</string>
          <string>android.printservice.PrintServiceInfo$1</string>
          <string>android.printservice.PrinterDiscoverySession</string>
          <string>android.printservice.PrintService$1</string>
          <string>android.printservice.PrintService</string>
          <string>android.printservice.PrintServiceInfo</string>
          <string>android.printservice.PrintDocument</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.usb.ss</name>
        <entities>
          <string>com.android.server.usb.UsbMidiDevice$InputReceiverProxy</string>
          <string>com.android.server.usb.UsbService</string>
          <string>com.android.server.usb.MtpNotificationManager</string>
          <string>android.system.StructPollfd</string>
          <string>com.android.server.usb.UsbSettingsManager$DeviceFilter</string>
          <string>com.android.server.usb.UsbDeviceManager$AdbSettingsObserver</string>
          <string>com.android.server.usb.UsbSettingsManager$MyPackageMonitor</string>
          <string>com.android.server.usb.UsbPortManager$PortInfo</string>
          <string>java.util.Scanner</string>
          <string>java.lang.ThreadGroup</string>
          <string>android.media.midi.MidiDeviceServer$Callback</string>
          <string>com.android.server.usb.UsbMidiDevice</string>
          <string>com.android.internal.alsa.AlsaCardsParser$AlsaCardRecord</string>
          <string>com.android.server.usb.UsbSettingsManager</string>
          <string>com.android.server.usb.UsbService$1</string>
          <string>com.android.server.usb.UsbAlsaManager$1</string>
          <string>com.android.server.usb.UsbHostManager$1</string>
          <string>com.android.server.usb.MtpNotificationManager$Receiver</string>
          <string>com.android.server.usb.UsbMidiDevice$2</string>
          <string>com.android.server.usb.UsbMidiDevice$3</string>
          <string>com.android.server.usb.UsbHostManager</string>
          <string>com.android.server.usb.UsbAlsaManager</string>
          <string>com.android.server.usb.UsbPortManager$2</string>
          <string>com.android.server.usb.UsbPortManager$1</string>
          <string>com.android.server.usb.UsbPortManager$3</string>
          <string>com.android.server.usb.UsbMidiDevice$1</string>
          <string>com.android.server.usb.UsbDebuggingManager</string>
          <string>com.android.server.usb.UsbSettingsManager$1</string>
          <string>com.android.server.usb.UsbDebuggingManager$UsbDebuggingThread</string>
          <string>com.android.server.usb.UsbPortManager</string>
          <string>com.android.internal.alsa.AlsaCardsParser</string>
          <string>com.android.server.usb.UsbDeviceManager</string>
          <string>com.android.server.usb.MtpNotificationManager$OnOpenInAppListener</string>
          <string>com.android.server.usb.UsbSettingsManager$AccessoryFilter</string>
          <string>android.system.StructStat</string>
          <string>android.os.SystemProperties</string>
          <string>com.android.server.usb.UsbDeviceManager$2</string>
          <string>com.android.server.usb.UsbDeviceManager$1</string>
          <string>com.android.server.usb.UsbAudioDevice</string>
          <string>com.android.server.usb.UsbDeviceManager$UsbHandler</string>
          <string>android.content.ActivityNotFoundException</string>
          <string>com.android.server.usb.UsbAlsaManager$AlsaDevice</string>
          <string>com.android.server.usb.UsbDebuggingManager$UsbDebuggingHandler</string>
          <string>com.android.server.usb.UsbPortManager$SimulatedPortInfo</string>
          <string>com.android.server.usb.UsbService$Lifecycle</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.google.android.util.ss</name>
        <entities>
          <string>com.google.android.util.AbstractMessageParser$Token</string>
          <string>com.google.android.util.AbstractMessageParser$TrieNode</string>
          <string>com.google.android.util.AbstractMessageParser</string>
          <string>com.google.android.util.AbstractMessageParser$Smiley</string>
          <string>com.google.android.util.AbstractMessageParser$Html</string>
          <string>com.google.android.util.AbstractMessageParser$Resources</string>
          <string>com.google.android.util.AbstractMessageParser$Link</string>
          <string>com.google.android.util.AbstractMessageParser$FlickrPhoto</string>
          <string>com.google.android.util.SmileyResources</string>
          <string>com.google.android.util.AbstractMessageParser$Part</string>
          <string>com.google.android.util.AbstractMessageParser$YouTubeVideo</string>
          <string>com.google.android.util.AbstractMessageParser$MusicTrack</string>
          <string>java.util.regex.Matcher</string>
          <string>com.google.android.util.AbstractMessageParser$Photo</string>
          <string>com.google.android.util.AbstractMessageParser$Video</string>
          <string>com.google.android.util.AbstractMessageParser$Token$Type</string>
          <string>com.google.android.util.SmileyParser</string>
          <string>com.google.android.util.AbstractMessageParser$Format</string>
          <string>java.util.regex.Pattern</string>
          <string>com.google.android.util.AbstractMessageParser$Acronym</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.filterpacks.videosrc.ss</name>
        <entities>
          <string>android.filterpacks.base.FrameSource</string>
          <string>android.filterpacks.ui.SurfaceTargetFilter</string>
          <string>android.filterpacks.videosrc.CameraSource</string>
          <string>android.filterpacks.videosrc.SurfaceTextureSource$SurfaceTextureSourceListener</string>
          <string>android.filterpacks.videosrc.CameraSource$1</string>
          <string>android.filterpacks.videosrc.SurfaceTextureSource$1</string>
          <string>android.filterpacks.videosrc.MediaSource</string>
          <string>android.filterpacks.imageproc.FixedRotationFilter</string>
          <string>android.filterfw.core.ShaderProgram</string>
          <string>android.filterpacks.base.FrameFetch</string>
          <string>android.filterpacks.videosrc.MediaSource$4</string>
          <string>android.filterpacks.videosrc.MediaSource$3</string>
          <string>android.filterpacks.videosrc.MediaSource$2</string>
          <string>android.filterfw.format.ImageFormat</string>
          <string>android.filterpacks.videosrc.MediaSource$1</string>
          <string>android.filterpacks.videosrc.SurfaceTextureSource</string>
          <string>android.filterfw.core.GenerateFinalPort</string>
          <string>android.filterfw.core.GenerateFieldPort</string>
          <string>android.filterpacks.videosrc.SurfaceTextureTarget</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.security.keymaster.ss</name>
        <entities>
          <string>android.security.keymaster.OperationResult</string>
          <string>android.security.keymaster.ExportResult</string>
          <string>android.security.keymaster.KeymasterBooleanArgument</string>
          <string>android.security.keymaster.KeyCharacteristics</string>
          <string>android.security.keymaster.KeymasterDefs</string>
          <string>android.security.keymaster.KeymasterLongArgument</string>
          <string>android.security.keymaster.KeymasterCertificateChain$1</string>
          <string>android.security.keymaster.KeymasterCertificateChain</string>
          <string>android.security.keymaster.KeymasterArguments$1</string>
          <string>android.security.keymaster.KeymasterDateArgument</string>
          <string>android.security.keymaster.KeymasterBlobArgument</string>
          <string>android.security.keymaster.KeymasterArguments</string>
          <string>android.security.keymaster.KeymasterBlob$1</string>
          <string>android.security.keymaster.ExportResult$1</string>
          <string>android.security.keymaster.KeymasterBlob</string>
          <string>android.security.keymaster.KeymasterArgument$1</string>
          <string>android.security.keymaster.OperationResult$1</string>
          <string>android.security.keymaster.KeyCharacteristics$1</string>
          <string>android.security.keymaster.KeymasterIntArgument</string>
          <string>android.security.keymaster.KeymasterArgument</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.view.textservice.ss</name>
        <entities>
          <string>com.android.internal.textservice.ISpellCheckerSession</string>
          <string>android.view.textservice.SuggestionsInfo$1</string>
          <string>android.view.textservice.SpellCheckerSession$SpellCheckerSessionListenerImpl</string>
          <string>android.view.textservice.SentenceSuggestionsInfo</string>
          <string>android.view.textservice.SuggestionsInfo</string>
          <string>android.view.textservice.TextInfo</string>
          <string>android.view.textservice.SpellCheckerInfo</string>
          <string>android.view.textservice.SpellCheckerSession$InternalListener</string>
          <string>android.view.textservice.SpellCheckerSession$1</string>
          <string>android.view.textservice.SpellCheckerInfo$1</string>
          <string>android.view.textservice.TextInfo$1</string>
          <string>android.view.textservice.SpellCheckerSession</string>
          <string>android.view.textservice.SpellCheckerSession$SpellCheckerSessionListenerImpl$SpellCheckerParams</string>
          <string>android.view.textservice.SpellCheckerSubtype$1</string>
          <string>android.view.textservice.SpellCheckerSubtype</string>
          <string>android.view.textservice.SentenceSuggestionsInfo$1</string>
          <string>android.view.textservice.SpellCheckerSession$SpellCheckerSessionListenerImpl$1</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.media.browse.ss</name>
        <entities>
          <string>android.media.browse.MediaBrowser$SubscriptionCallback</string>
          <string>android.media.browse.MediaBrowser$ServiceCallbacks</string>
          <string>android.service.media.IMediaBrowserServiceCallbacks$Stub</string>
          <string>android.media.browse.MediaBrowser$ItemCallback</string>
          <string>android.media.browse.MediaBrowser$6</string>
          <string>android.service.media.IMediaBrowserService$Stub$Proxy</string>
          <string>android.media.browse.MediaBrowser$5</string>
          <string>android.media.browse.MediaBrowser$7</string>
          <string>android.media.browse.MediaBrowser$2</string>
          <string>android.media.browse.MediaBrowser$1</string>
          <string>android.media.browse.MediaBrowser$4</string>
          <string>android.media.browse.MediaBrowser$MediaItem</string>
          <string>android.service.media.IMediaBrowserService</string>
          <string>android.media.browse.MediaBrowser$ConnectionCallback</string>
          <string>android.media.browse.MediaBrowser$3</string>
          <string>android.media.browse.MediaBrowser$Subscription</string>
          <string>android.media.browse.MediaBrowser</string>
          <string>android.media.browse.MediaBrowser$MediaItem$1</string>
          <string>android.service.media.IMediaBrowserService$Stub</string>
          <string>android.media.browse.MediaBrowser$MediaServiceConnection</string>
          <string>android.media.browse.MediaBrowser$MediaServiceConnection$1</string>
          <string>android.media.browse.MediaBrowser$MediaServiceConnection$2</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.hardware.fingerprint.ss</name>
        <entities>
          <string>android.hardware.fingerprint.Fingerprint$1</string>
          <string>android.hardware.fingerprint.FingerprintManager$RemovalCallback</string>
          <string>android.hardware.fingerprint.FingerprintManager</string>
          <string>android.hardware.fingerprint.FingerprintManager$OnAuthenticationCancelListener</string>
          <string>android.hardware.fingerprint.FingerprintManager$CryptoObject</string>
          <string>android.hardware.fingerprint.FingerprintManager$LockoutResetCallback</string>
          <string>android.hardware.fingerprint.FingerprintManager$MyHandler</string>
          <string>android.hardware.fingerprint.FingerprintManager$AuthenticationResult</string>
          <string>android.hardware.fingerprint.FingerprintManager$AuthenticationCallback</string>
          <string>android.hardware.fingerprint.FingerprintManager$OnEnrollCancelListener</string>
          <string>android.hardware.fingerprint.FingerprintManager$2</string>
          <string>android.hardware.fingerprint.Fingerprint</string>
          <string>android.hardware.fingerprint.FingerprintManager$1</string>
          <string>android.hardware.fingerprint.FingerprintManager$2$1</string>
          <string>android.os.CancellationSignal$OnCancelListener</string>
          <string>android.hardware.fingerprint.FingerprintManager$EnrollmentCallback</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.telecom.ss</name>
        <entities>
          <string>com.android.server.telecom.TelecomLoaderService$TelecomServiceConnection</string>
          <string>com.android.server.telecom.TelecomLoaderService$TelecomServiceConnection$1</string>
          <string>android.telecom.DefaultDialerManager</string>
          <string>com.android.server.telecom.TelecomLoaderService$4</string>
          <string>android.content.pm.PackageManagerInternal</string>
          <string>com.android.server.telecom.TelecomLoaderService$3</string>
          <string>com.android.server.telecom.TelecomLoaderService$5</string>
          <string>com.android.server.telecom.TelecomLoaderService</string>
          <string>android.util.IntArray</string>
          <string>com.android.server.telecom.TelecomLoaderService$2</string>
          <string>com.android.server.telecom.TelecomLoaderService$1</string>
          <string>android.telecom.TelecomManager</string>
          <string>android.content.pm.PackageManagerInternal$PackagesProvider</string>
          <string>com.android.internal.telephony.SmsApplication</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.internal.midi.ss</name>
        <entities>
          <string>com.android.internal.midi.MidiFramer</string>
          <string>com.android.internal.midi.MidiConstants</string>
          <string>com.android.internal.midi.EventScheduler$SchedulableEvent</string>
          <string>com.android.internal.midi.MidiEventScheduler$MidiEvent</string>
          <string>com.android.internal.midi.EventScheduler$FastEventQueue</string>
          <string>com.android.internal.midi.MidiEventScheduler$SchedulingReceiver</string>
          <string>com.android.internal.midi.MidiEventScheduler</string>
          <string>com.android.internal.midi.MidiDispatcher</string>
          <string>com.android.internal.midi.EventScheduler</string>
          <string>com.android.internal.midi.MidiDispatcher$1</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.text.method.ss</name>
        <entities>
          <string>android.text.method.TextKeyListener$SettingsObserver</string>
          <string>android.text.SpannedString</string>
          <string>android.widget.GridView</string>
          <string>android.icu.lang.UCharacter</string>
          <string>android.text.method.MultiTapKeyListener</string>
          <string>android.text.method.QwertyKeyListener</string>
          <string>android.text.method.Touch$DragState</string>
          <string>android.text.method.LinkMovementMethod</string>
          <string>android.text.method.CharacterPickerDialog</string>
          <string>android.text.method.WordIterator</string>
          <string>android.text.method.PasswordTransformationMethod$PasswordCharSequence</string>
          <string>android.text.AutoText</string>
          <string>android.text.method.PasswordTransformationMethod</string>
          <string>android.text.method.MovementMethod</string>
          <string>android.text.method.QwertyKeyListener$Replaced</string>
          <string>android.text.method.TextKeyListener$Capitalize</string>
          <string>android.text.style.UpdateLayout</string>
          <string>android.text.method.KeyListener</string>
          <string>android.text.method.Touch</string>
          <string>android.text.method.ScrollingMovementMethod</string>
          <string>android.text.method.HideReturnsTransformationMethod</string>
          <string>android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence</string>
          <string>android.icu.text.BreakIterator</string>
          <string>android.text.method.PasswordTransformationMethod$ViewReference</string>
          <string>android.text.method.ReplacementTransformationMethod$ReplacementCharSequence</string>
          <string>android.text.method.ReplacementTransformationMethod</string>
          <string>android.text.method.PasswordTransformationMethod$Visible</string>
          <string>android.text.NoCopySpan$Concrete</string>
          <string>android.text.Emoji</string>
          <string>android.text.method.TextKeyListener$NullKeyListener</string>
          <string>android.text.method.BaseMovementMethod</string>
          <string>android.text.method.CharacterPickerDialog$OptionsAdapter</string>
          <string>android.text.method.TextKeyListener</string>
          <string>android.text.method.MultiTapKeyListener$Timeout</string>
          <string>android.text.method.BaseKeyListener</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.media.tv.ss</name>
        <entities>
          <string>android.media.tv.TvInputService$Session$9</string>
          <string>android.media.tv.TvInputManager$SessionCallbackRecord$8</string>
          <string>android.media.tv.DvbDeviceInfo</string>
          <string>android.media.tv.TvInputService$1</string>
          <string>android.media.tv.TvInputService$Session$8</string>
          <string>android.media.tv.TvInputManager$SessionCallbackRecord$9</string>
          <string>android.media.tv.TvInputService$Session$7</string>
          <string>android.media.tv.TvInputService$Session$6</string>
          <string>android.media.tv.TvInputService$Session$5</string>
          <string>android.media.tv.TvInputManager$SessionCallbackRecord$4</string>
          <string>android.media.tv.TvInputService$Session$4</string>
          <string>android.media.tv.TvInputManager$SessionCallbackRecord$5</string>
          <string>android.media.tv.TvInputService$Session$3</string>
          <string>android.media.tv.TvInputManager$SessionCallbackRecord$6</string>
          <string>android.media.tv.TvInputService$Session$2</string>
          <string>android.media.tv.TvInputManager$SessionCallbackRecord$7</string>
          <string>android.media.tv.TvStreamConfig$Builder</string>
          <string>android.media.tv.TvInputManager$SessionCallback</string>
          <string>android.media.tv.TvStreamConfig</string>
          <string>android.media.tv.TvInputService$Session$1</string>
          <string>android.media.tv.TvInputInfo$1</string>
          <string>android.media.tv.TvContract</string>
          <string>android.media.tv.TvInputService$ServiceHandler</string>
          <string>android.media.tv.TvView</string>
          <string>android.media.tv.ITvInputSessionWrapper</string>
          <string>android.media.tv.TvInputManager$TvInputCallbackRecord</string>
          <string>android.media.tv.TvInputManager$Session$InputEventHandler</string>
          <string>android.media.tv.TvInputService$HardwareSession$1</string>
          <string>android.media.tv.TvInputManager$SessionCallbackRecord$1</string>
          <string>android.media.tv.TvInputManager</string>
          <string>android.media.tv.TvInputManager$SessionCallbackRecord$2</string>
          <string>android.media.tv.TvInputManager$SessionCallbackRecord$3</string>
          <string>android.media.tv.TvContentRating</string>
          <string>android.media.tv.TvInputHardwareInfo</string>
          <string>android.media.tv.TvRecordingClient$RecordingCallback</string>
          <string>android.media.tv.TvContentRatingSystemInfo</string>
          <string>android.media.tv.TvInputService$OverlayViewCleanUpTask</string>
          <string>android.media.tv.TvTrackInfo</string>
          <string>android.media.tv.TvInputManager$Session</string>
          <string>android.media.tv.ITvInputSessionWrapper$TvInputEventReceiver</string>
          <string>android.media.tv.DvbDeviceInfo$1</string>
          <string>android.media.tv.TvView$OnUnhandledInputEventListener</string>
          <string>android.media.tv.TvInputService$Session</string>
          <string>android.media.tv.TvInputService$RecordingSession</string>
          <string>android.media.tv.TvView$TvInputCallback</string>
          <string>android.media.tv.TvInputInfo</string>
          <string>android.media.tv.TvView$TimeShiftPositionCallback</string>
          <string>android.media.tv.TvInputManager$SessionCallbackRecord</string>
          <string>android.media.tv.TvRecordingClient</string>
          <string>android.media.tv.TvTrackInfo$1</string>
          <string>android.media.tv.TvView$3</string>
          <string>android.media.tv.TvInputManager$3</string>
          <string>android.media.tv.TvView$2</string>
          <string>android.media.tv.TvInputManager$2</string>
          <string>android.media.tv.TvInputManager$1</string>
          <string>android.media.tv.TvRecordingClient$MySessionCallback</string>
          <string>android.media.tv.TvContract$Programs</string>
          <string>android.media.tv.TvInputInfo$TvInputSettings</string>
          <string>android.media.tv.TvView$1</string>
          <string>android.media.tv.TvInputService$HardwareSession</string>
          <string>android.media.tv.TvInputManager$Hardware</string>
          <string>android.media.tv.TvInputManager$TvInputCallback</string>
          <string>android.media.tv.TvInputService</string>
          <string>android.media.tv.TvInputManager$SessionCallbackRecord$12</string>
          <string>android.media.tv.TvTrackInfo$Builder</string>
          <string>android.media.tv.TvInputManager$SessionCallbackRecord$11</string>
          <string>android.media.tv.TvInputManager$SessionCallbackRecord$14</string>
          <string>android.media.tv.TvInputManager$SessionCallbackRecord$13</string>
          <string>android.media.tv.TvInputManager$Session$TvInputEventSender</string>
          <string>android.media.tv.TvInputManager$SessionCallbackRecord$10</string>
          <string>android.media.tv.TvInputService$Session$TimeShiftPositionTrackingRunnable</string>
          <string>android.media.tv.TvContentRatingSystemInfo$1</string>
          <string>android.media.tv.TvInputManager$SessionCallbackRecord$16</string>
          <string>android.media.tv.TvInputManager$SessionCallbackRecord$15</string>
          <string>android.media.tv.ITvInputHardware</string>
          <string>android.media.tv.TvInputManager$SessionCallbackRecord$18</string>
          <string>android.media.tv.TvInputManager$SessionCallbackRecord$17</string>
          <string>android.annotation.SuppressLint</string>
          <string>android.media.tv.TvInputManager$Session$FinishedInputEventCallback</string>
          <string>android.media.tv.TvContract$BaseTvColumns</string>
          <string>android.media.tv.TvView$MySessionCallback</string>
          <string>android.media.tv.TvContract$RecordedPrograms</string>
          <string>android.media.tv.TvInputService$Session$13</string>
          <string>android.media.tv.TvInputHardwareInfo$Builder</string>
          <string>android.media.tv.TvInputHardwareInfo$1</string>
          <string>android.media.tv.TvInputService$Session$10</string>
          <string>android.media.tv.TvInputService$Session$12</string>
          <string>android.media.tv.TvInputService$Session$11</string>
          <string>android.media.tv.TvInputManager$TvInputCallbackRecord$1</string>
          <string>android.media.tv.ITvInputManager</string>
          <string>android.media.tv.TvInputManager$Session$PendingEvent</string>
          <string>android.media.tv.TvContract$Programs$Genres</string>
          <string>android.media.tv.TvInputManager$HardwareCallback</string>
          <string>android.media.tv.TvInputService$RecordingSession$3</string>
          <string>android.media.tv.TvStreamConfig$1</string>
          <string>android.media.tv.TvInputService$RecordingSession$4</string>
          <string>android.media.tv.TvInputManager$TvInputCallbackRecord$3</string>
          <string>android.media.tv.TvInputManager$TvInputCallbackRecord$2</string>
          <string>android.media.tv.TvInputManager$TvInputCallbackRecord$5</string>
          <string>android.media.tv.TvInputManager$TvInputCallbackRecord$4</string>
          <string>android.media.tv.TvInputService$RecordingSession$1</string>
          <string>android.media.tv.TvInputService$RecordingSession$2</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.service.voice.ss</name>
        <entities>
          <string>com.android.internal.app.IVoiceInteractionManagerService</string>
          <string>android.service.voice.AlwaysOnHotwordDetector$SoundTriggerListener</string>
          <string>android.service.voice.VoiceInteractionSession$PickOptionRequest</string>
          <string>android.hardware.soundtrigger.KeyphraseMetadata</string>
          <string>android.service.voice.IVoiceInteractionService$Stub$Proxy</string>
          <string>android.service.voice.VoiceInteractionSession</string>
          <string>android.service.voice.VoiceInteractionSession$Request$1</string>
          <string>android.app.VoiceInteractor$Prompt$1</string>
          <string>android.service.voice.AlwaysOnHotwordDetector$Callback</string>
          <string>android.service.voice.VoiceInteractionSessionService</string>
          <string>android.service.voice.VoiceInteractionSession$2$1</string>
          <string>android.service.voice.VoiceInteractionSession$CommandRequest</string>
          <string>android.service.voice.VoiceInteractionService</string>
          <string>android.service.voice.AlwaysOnHotwordDetector$RefreshAvailabiltyTask</string>
          <string>android.service.voice.IVoiceInteractionService</string>
          <string>android.service.voice.AlwaysOnHotwordDetector$EventPayload</string>
          <string>android.service.voice.IVoiceInteractionService$Stub</string>
          <string>android.service.voice.VoiceInteractionSession$ConfirmationRequest</string>
          <string>android.service.voice.AlwaysOnHotwordDetector$MyHandler</string>
          <string>android.service.voice.VoiceInteractionSession$1</string>
          <string>android.service.voice.VoiceInteractionSession$4</string>
          <string>android.app.VoiceInteractor$Prompt</string>
          <string>android.service.voice.VoiceInteractionSessionService$1</string>
          <string>android.service.voice.VoiceInteractionSession$2</string>
          <string>android.service.voice.VoiceInteractionSessionService$2</string>
          <string>android.service.voice.VoiceInteractionSession$3</string>
          <string>android.service.voice.VoiceInteractionSession$Request</string>
          <string>android.service.voice.VoiceInteractionService$MyHandler</string>
          <string>android.service.voice.VoiceInteractionSession$MyCallbacks</string>
          <string>android.service.voice.VoiceInteractionSession$Insets</string>
          <string>android.service.voice.VoiceInteractionSession$AbortVoiceRequest</string>
          <string>android.hardware.soundtrigger.KeyphraseEnrollmentInfo</string>
          <string>android.service.voice.VoiceInteractionSession$CompleteVoiceRequest</string>
          <string>android.service.voice.VoiceInteractionService$1</string>
          <string>android.service.voice.AlwaysOnHotwordDetector</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.ddm.ss</name>
        <entities>
          <string>android.ddm.DdmRegister</string>
          <string>android.ddm.DdmHandleProfiling</string>
          <string>android.ddm.DdmHandleViewDebug</string>
          <string>android.ddm.DdmHandleHello</string>
          <string>android.ddm.DdmHandleAppName</string>
          <string>org.apache.harmony.dalvik.ddmc.DdmVmInternal</string>
          <string>android.ddm.DdmHandleViewDebug$1</string>
          <string>android.ddm.DdmHandleHeap</string>
          <string>org.apache.harmony.dalvik.ddmc.DdmServer</string>
          <string>org.apache.harmony.dalvik.ddmc.Chunk</string>
          <string>android.ddm.DdmHandleThread</string>
          <string>android.ddm.DdmHandleExit</string>
          <string>android.ddm.DdmHandleNativeHeap</string>
          <string>org.apache.harmony.dalvik.ddmc.ChunkHandler</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.wallpaper.ss</name>
        <entities>
          <string>android.service.wallpaper.IWallpaperEngine</string>
          <string>android.app.IUserSwitchObserver$Stub</string>
          <string>android.service.wallpaper.IWallpaperService$Stub</string>
          <string>android.service.wallpaper.IWallpaperConnection$Stub$Proxy</string>
          <string>com.android.internal.policy.IShortcutService$Stub</string>
          <string>com.android.server.wallpaper.WallpaperManagerService$Lifecycle</string>
          <string>com.android.internal.policy.IShortcutService</string>
          <string>com.android.server.wallpaper.WallpaperManagerService</string>
          <string>android.app.IUserSwitchObserver</string>
          <string>android.service.wallpaper.IWallpaperEngine$Stub</string>
          <string>com.android.server.wallpaper.WallpaperManagerService$MyPackageMonitor</string>
          <string>android.graphics.Bitmap$CompressFormat</string>
          <string>android.view.IWindowSessionCallback$Stub$Proxy</string>
          <string>android.app.IUserSwitchObserver$Stub$Proxy</string>
          <string>android.view.IAppTransitionAnimationSpecsFuture$Stub</string>
          <string>android.view.IWindowManager$Stub$Proxy</string>
          <string>android.view.IWindowSessionCallback</string>
          <string>com.android.internal.policy.IShortcutService$Stub$Proxy</string>
          <string>android.service.wallpaper.IWallpaperConnection$Stub</string>
          <string>android.service.wallpaper.IWallpaperService</string>
          <string>android.view.IAppTransitionAnimationSpecsFuture$Stub$Proxy</string>
          <string>android.graphics.BitmapRegionDecoder</string>
          <string>com.android.server.wallpaper.WallpaperManagerService$WallpaperData</string>
          <string>com.android.server.wallpaper.WallpaperManagerService$WallpaperConnection</string>
          <string>android.view.IWindowManager$Stub</string>
          <string>com.android.server.wallpaper.WallpaperManagerService$WallpaperObserver</string>
          <string>android.service.wallpaper.IWallpaperService$Stub$Proxy</string>
          <string>android.service.wallpaper.IWallpaperEngine$Stub$Proxy</string>
          <string>com.android.server.wallpaper.WallpaperManagerService$2</string>
          <string>android.os.IRemoteCallback</string>
          <string>android.view.IWindowSessionCallback$Stub</string>
          <string>com.android.server.wallpaper.WallpaperManagerService$1</string>
          <string>com.android.internal.util.JournaledFile</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.internal.location.ss</name>
        <entities>
          <string>com.android.internal.location.GpsNetInitiatedHandler$1</string>
          <string>com.android.internal.location.ProviderProperties$1</string>
          <string>com.android.internal.location.GpsNetInitiatedHandler$2</string>
          <string>com.android.internal.location.ProviderProperties</string>
          <string>com.android.internal.location.ProviderRequest</string>
          <string>com.android.internal.location.GpsNetInitiatedHandler$GpsNiResponse</string>
          <string>com.android.internal.location.GpsNetInitiatedHandler</string>
          <string>com.android.internal.location.ProviderRequest$1</string>
          <string>com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification</string>
          <string>android.location.INetInitiatedListener</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.camera.ss</name>
        <entities>
          <string>android.nfc.IAppCallback</string>
          <string>com.android.server.camera.CameraService</string>
          <string>com.android.server.camera.CameraService$1</string>
          <string>com.android.server.camera.CameraService$2</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.job.ss</name>
        <entities>
          <string>com.android.server.job.JobServiceContext</string>
          <string>com.android.server.job.JobSchedulerService$LocalService$1</string>
          <string>com.android.internal.util.RingBufferIndices</string>
          <string>com.android.server.job.JobStore</string>
          <string>android.app.job.IJobService</string>
          <string>com.android.server.job.JobSchedulerService$Constants</string>
          <string>com.android.server.job.JobStore$JobSet</string>
          <string>com.android.server.job.JobPackageTracker</string>
          <string>com.android.server.job.controllers.ContentObserverController$ObserverInstance</string>
          <string>com.android.server.job.JobStore$WriteJobsMapToDiskRunnable</string>
          <string>android.app.job.IJobService$Stub</string>
          <string>com.android.server.job.JobPackageTracker$DataSet</string>
          <string>com.android.server.job.JobStore$WriteJobsMapToDiskRunnable$1</string>
          <string>com.android.server.job.JobCompletedListener</string>
          <string>com.android.server.job.JobSchedulerService$JobHandler$MaybeReadyJobQueueFunctor</string>
          <string>com.android.server.job.JobSchedulerInternal</string>
          <string>com.android.server.job.JobSchedulerService$LocalService</string>
          <string>com.android.server.job.JobServiceContext$JobServiceHandler</string>
          <string>com.android.server.job.JobSchedulerService$JobSchedulerStub</string>
          <string>android.app.job.IJobService$Stub$Proxy</string>
          <string>com.android.server.job.JobSchedulerService$JobHandler$ReadyJobQueueFunctor</string>
          <string>android.app.job.IJobCallback$Stub$Proxy</string>
          <string>com.android.server.job.controllers.ContentObserverController$JobInstance</string>
          <string>com.android.server.job.controllers.StateController</string>
          <string>com.android.server.job.JobStore$ReadJobMapFromDiskRunnable</string>
          <string>com.android.server.job.JobSchedulerService</string>
          <string>com.android.server.job.JobSchedulerService$JobHandler</string>
          <string>android.util.AtomicFile</string>
          <string>com.android.server.job.JobSchedulerShellCommand</string>
          <string>com.android.server.job.JobSchedulerService$4</string>
          <string>com.android.server.job.JobSchedulerService$3</string>
          <string>com.android.server.job.JobSchedulerService$2</string>
          <string>com.android.server.job.JobSchedulerService$1</string>
          <string>com.android.server.job.controllers.JobStatus</string>
          <string>android.app.job.IJobCallback$Stub</string>
          <string>com.android.server.job.JobPackageTracker$PackageEntry</string>
          <string>com.android.server.job.controllers.ContentObserverController$TriggerRunnable</string>
          <string>com.android.server.job.controllers.ContentObserverController</string>
          <string>com.android.server.job.JobStore$JobStatusFunctor</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.app.job.ss</name>
        <entities>
          <string>android.app.job.JobService</string>
          <string>android.app.job.JobService$JobHandler</string>
          <string>android.app.job.IJobCallback</string>
          <string>android.app.job.JobParameters$1</string>
          <string>android.app.job.JobParameters</string>
          <string>android.app.job.JobService$JobInterface</string>
          <string>android.app.job.JobInfo</string>
          <string>android.app.job.JobInfo$1</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.hardware.location.ss</name>
        <entities>
          <string>android.hardware.location.ContextHubManager$1</string>
          <string>android.hardware.location.GeofenceHardware$GeofenceHardwareCallbackWrapper</string>
          <string>android.hardware.location.IGeofenceHardwareCallback$Stub$Proxy</string>
          <string>android.hardware.location.NanoAppInstanceInfo$1</string>
          <string>android.hardware.location.ContextHubInfo</string>
          <string>android.hardware.location.ContextHubManager$1$1</string>
          <string>android.hardware.location.ContextHubManager$ICallback</string>
          <string>android.hardware.location.GeofenceHardwareRequestParcelable</string>
          <string>android.hardware.location.IContextHubService$Stub</string>
          <string>android.hardware.location.IActivityRecognitionHardware</string>
          <string>android.hardware.location.ContextHubInfo$1</string>
          <string>android.hardware.location.IContextHubService$Stub$Proxy</string>
          <string>android.hardware.location.GeofenceHardware$GeofenceHardwareMonitorCallbackWrapper</string>
          <string>android.hardware.location.IGeofenceHardwareCallback$Stub</string>
          <string>android.hardware.location.GeofenceHardwareMonitorEvent$1</string>
          <string>android.hardware.location.ContextHubService$1</string>
          <string>android.hardware.location.IActivityRecognitionHardware$Stub$Proxy</string>
          <string>android.hardware.location.NanoApp</string>
          <string>android.hardware.location.GeofenceHardwareCallback</string>
          <string>android.hardware.location.IGeofenceHardwareMonitorCallback</string>
          <string>android.hardware.location.ActivityRecognitionHardware</string>
          <string>android.hardware.location.ContextHubManager$Callback</string>
          <string>android.hardware.location.MemoryRegion</string>
          <string>android.hardware.location.IActivityRecognitionHardwareSink$Stub</string>
          <string>android.hardware.location.IActivityRecognitionHardwareSink$Stub$Proxy</string>
          <string>android.hardware.location.ContextHubMessage$1</string>
          <string>android.hardware.location.IContextHubCallback$Stub$Proxy</string>
          <string>android.hardware.location.ActivityRecognitionHardware$SinkList</string>
          <string>android.hardware.location.GeofenceHardwareMonitorEvent</string>
          <string>android.hardware.location.IContextHubService</string>
          <string>android.hardware.location.IActivityRecognitionHardwareSink</string>
          <string>android.hardware.location.IContextHubCallback$Stub</string>
          <string>android.hardware.location.ActivityRecognitionEvent</string>
          <string>android.hardware.location.NanoAppFilter$1</string>
          <string>android.hardware.location.ActivityChangedEvent</string>
          <string>android.hardware.location.NanoApp$1</string>
          <string>android.hardware.location.GeofenceHardwareRequestParcelable$1</string>
          <string>android.hardware.location.IContextHubCallback</string>
          <string>android.hardware.location.NanoAppInstanceInfo</string>
          <string>android.hardware.location.GeofenceHardwareService</string>
          <string>android.hardware.location.GeofenceHardwareImpl$GeofenceTransition</string>
          <string>android.hardware.location.GeofenceHardwareImpl$1</string>
          <string>android.hardware.location.ContextHubManager</string>
          <string>android.hardware.location.GeofenceHardwareRequest</string>
          <string>android.hardware.location.NanoAppFilter</string>
          <string>android.hardware.location.GeofenceHardwareImpl$3</string>
          <string>android.hardware.location.GeofenceHardware</string>
          <string>android.hardware.location.ActivityRecognitionHardware$Event</string>
          <string>android.hardware.location.GeofenceHardwareImpl$2</string>
          <string>android.hardware.location.IGeofenceHardwareMonitorCallback$Stub$Proxy</string>
          <string>android.hardware.location.IGeofenceHardwareMonitorCallback$Stub</string>
          <string>android.hardware.location.ActivityRecognitionEvent$1</string>
          <string>android.hardware.location.IActivityRecognitionHardware$Stub</string>
          <string>android.hardware.location.GeofenceHardwareMonitorCallback</string>
          <string>android.hardware.location.GeofenceHardwareImpl$Reaper</string>
          <string>android.hardware.location.ContextHubService</string>
          <string>android.hardware.location.GeofenceHardwareImpl</string>
          <string>android.hardware.location.ActivityChangedEvent$1</string>
          <string>android.hardware.location.GeofenceHardwareService$1</string>
          <string>android.hardware.location.ContextHubMessage</string>
          <string>android.hardware.location.MemoryRegion$1</string>
          <string>android.hardware.location.IGeofenceHardwareCallback</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.google.android.gles_jni.ss</name>
        <entities>
          <string>com.google.android.gles_jni.EGLContextImpl</string>
          <string>java.nio.ShortBuffer</string>
          <string>com.google.android.gles_jni.GLImpl</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.internal.ss</name>
        <entities>
          <string>com.android.internal.R$color</string>
          <string>com.android.internal.R$xml</string>
          <string>com.android.internal.R$menu</string>
          <string>com.android.internal.R$dimen</string>
          <string>com.android.internal.R$transition</string>
          <string>com.android.internal.R$attr</string>
          <string>com.android.internal.R$anim</string>
          <string>com.android.internal.R$string</string>
          <string>com.android.internal.R$style</string>
          <string>com.android.internal.R$mipmap</string>
          <string>com.android.internal.R$animator</string>
          <string>com.android.internal.R$drawable</string>
          <string>com.android.internal.R$integer</string>
          <string>com.android.internal.R$bool</string>
          <string>com.android.internal.R$array</string>
          <string>com.android.internal.R$raw</string>
          <string>com.android.internal.R$fraction</string>
          <string>com.android.internal.R$layout</string>
          <string>com.android.internal.R$plurals</string>
          <string>com.android.internal.R</string>
          <string>com.android.internal.R$id</string>
          <string>com.android.internal.R$interpolator</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.service.notification.ss</name>
        <entities>
          <string>android.service.notification.Adjustment$1</string>
          <string>android.service.notification.NotificationRankingUpdate$1</string>
          <string>android.service.notification.Adjustment</string>
          <string>android.service.notification.ConditionProviderService$Provider</string>
          <string>android.service.notification.NotificationRankingUpdate</string>
          <string>android.service.notification.StatusBarNotification$1</string>
          <string>android.service.notification.ConditionProviderService</string>
          <string>android.service.notification.NotificationListenerService</string>
          <string>android.service.notification.IConditionListener$Stub</string>
          <string>android.service.notification.NotificationListenerService$RankingMap$1</string>
          <string>android.service.notification.IConditionListener</string>
          <string>android.service.notification.NotificationRankerService$NotificationRankingServiceWrapper</string>
          <string>android.service.notification.ZenModeConfig</string>
          <string>android.service.notification.Condition</string>
          <string>android.service.notification.NotificationRankerService</string>
          <string>android.service.notification.ConditionProviderService$H</string>
          <string>android.service.notification.Condition$1</string>
          <string>android.service.notification.IConditionListener$Stub$Proxy</string>
          <string>android.service.notification.NotificationRankerService$MyHandler</string>
          <string>android.service.notification.NotificationListenerService$NotificationListenerWrapper</string>
          <string>android.service.notification.NotificationListenerService$RankingMap</string>
          <string>android.service.notification.NotificationListenerService$MyHandler</string>
          <string>android.service.notification.ZenModeConfig$1</string>
          <string>android.service.notification.StatusBarNotification</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.net.netlink.ss</name>
        <entities>
          <string>android.net.netlink.StructNdaCacheInfo</string>
          <string>android.net.netlink.StructNlAttr</string>
          <string>android.net.netlink.RtNetlinkNeighborMessage</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.pm.ss</name>
        <entities>
          <string>com.android.server.SystemConfig</string>
          <string>com.android.internal.view.InputMethodClient</string>
          <string>android.content.pm.PackageInstaller$SessionParams</string>
          <string>com.android.server.pm.PackageManagerService$29</string>
          <string>com.android.server.pm.PackageManagerService$28</string>
          <string>com.android.server.pm.PackageManagerService$27</string>
          <string>com.android.server.pm.PackageManagerService$26</string>
          <string>com.android.server.pm.PackageManagerService$25</string>
          <string>com.android.server.pm.PackageManagerService$24</string>
          <string>android.opengl.GLUtils</string>
          <string>com.android.server.pm.PackageManagerService$23</string>
          <string>com.android.server.pm.PackageManagerService$22</string>
          <string>com.android.server.pm.PackageManagerService$21</string>
          <string>com.android.server.pm.PackageManagerService$20</string>
          <string>libcore.io.IoUtils</string>
          <string>android.content.pm.IPackageStatsObserver$Stub$Proxy</string>
          <string>com.android.server.pm.PackageInstallerService$PackageInstallObserverAdapter</string>
          <string>com.android.server.pm.PackageManagerService$DefaultContainerConnection</string>
          <string>com.android.server.pm.PackageManagerService$PackageHandler</string>
          <string>com.android.server.pm.SettingBase</string>
          <string>com.android.server.updates.IntentFirewallInstallReceiver</string>
          <string>android.content.pm.IPackageDeleteObserver2$Stub$Proxy</string>
          <string>android.app.IUidObserver$Stub$Proxy</string>
          <string>com.android.server.pm.PackageManagerService$SharedLibraryEntry</string>
          <string>com.android.server.pm.PackageManagerService$19</string>
          <string>com.android.server.pm.PackageManagerService$18</string>
          <string>com.android.server.pm.PackageManagerService$17</string>
          <string>com.android.server.pm.PackageManagerService$16</string>
          <string>com.android.server.pm.PackageManagerService$15</string>
          <string>android.util.LogPrinter</string>
          <string>com.android.server.pm.ShortcutService$_void_handlePackageUpdateFinished_java_lang_String_packageName_int_userId_LambdaImpl0</string>
          <string>com.android.server.pm.PackageManagerService$14</string>
          <string>android.app.IUidObserver</string>
          <string>com.android.server.pm.PackageManagerService$13</string>
          <string>com.android.server.pm.PackageManagerService$12</string>
          <string>com.android.server.pm.PackageManagerService$11</string>
          <string>com.android.server.pm.PackageManagerService$10</string>
          <string>android.content.pm.IPackageInstallerCallback$Stub</string>
          <string>android.net.MailTo</string>
          <string>android.bluetooth.BluetoothDevicePicker</string>
          <string>android.content.pm.PackageParser$Component</string>
          <string>android.provider.DocumentsProvider</string>
          <string>com.android.server.pm.KeySetManagerService</string>
          <string>java.lang.StringBuffer</string>
          <string>com.android.server.pm.PackageManagerServiceCompilerMapping</string>
          <string>android.widget.ImageSwitcher</string>
          <string>android.os.RemoteMailException</string>
          <string>com.android.server.pm.PermissionsState</string>
          <string>android.content.pm.PackageInstaller$SessionParams$1</string>
          <string>com.android.server.pm.PackageManagerService$DumpState</string>
          <string>android.content.pm.IOnPermissionsChangeListener$Stub</string>
          <string>com.android.server.ServiceThread</string>
          <string>android.filterpacks.base.OutputStreamTarget</string>
          <string>com.android.server.pm.PackageManagerService$FileInstallArgs</string>
          <string>android.provider.AlarmClock</string>
          <string>com.android.server.pm.PackageManagerService$31</string>
          <string>android.filterpacks.imageproc.AlphaBlendFilter</string>
          <string>com.android.server.BrickReceiver</string>
          <string>com.android.server.pm.PackageManagerService$30</string>
          <string>com.android.server.pm.PackageSetting</string>
          <string>com.android.server.pm.UserManagerService</string>
          <string>android.app.IUidObserver$Stub</string>
          <string>android.content.pm.IPackageInstaller$Stub</string>
          <string>com.android.server.pm.PackageManagerService$1</string>
          <string>com.android.server.pm.KeySetManagerService$PublicKeyHandle</string>
          <string>com.android.server.pm.PackageManagerService$2</string>
          <string>android.content.pm.PackageParser$Package</string>
          <string>com.android.server.pm.PackageManagerService$3</string>
          <string>android.content.pm.IPackageInstallerSession</string>
          <string>com.android.server.pm.PackageManagerService$4</string>
          <string>com.android.server.pm.PackageManagerService$5</string>
          <string>com.android.server.pm.PackageManagerService$6</string>
          <string>java.net.URISyntaxException</string>
          <string>com.android.server.pm.PackageManagerService$7</string>
          <string>com.android.server.pm.ShortcutService$LocalService$_java_util_List_getShortcuts_int_launcherUserId_java_lang_String_callingPackage_long_changedSince_java_lang_String_packageName_java_util_List_shortcutIds_android_content_ComponentName_componentName_int_queryFlags_int_userId_LambdaImpl0</string>
          <string>android.system.ErrnoException</string>
          <string>android.graphics.ComposeShader</string>
          <string>android.util.Base64InputStream</string>
          <string>com.android.server.pm.EphemeralResolverConnection$GetEphemeralResolveInfoCaller</string>
          <string>com.android.server.pm.PackageManagerService$8</string>
          <string>com.android.server.pm.PackageManagerService$9</string>
          <string>com.android.server.SystemConfig$PermissionEntry</string>
          <string>android.content.pm.IOnPermissionsChangeListener</string>
          <string>com.android.server.updates.CertPinInstallReceiver</string>
          <string>android.service.gatekeeper.IGateKeeperService$Stub</string>
          <string>com.android.server.pm.PackageDexOptimizer</string>
          <string>com.android.server.pm.PreferredActivity</string>
          <string>android.graphics.LargeBitmap</string>
          <string>android.app.admin.IDevicePolicyManager$Stub$Proxy</string>
          <string>android.content.pm.ComponentInfo</string>
          <string>com.android.server.updates.CarrierProvisioningUrlsInstallReceiver</string>
          <string>java.util.Objects</string>
          <string>android.content.pm.IPackageInstallerCallback$Stub$Proxy</string>
          <string>com.android.internal.os.IParcelFileDescriptorFactory$Stub</string>
          <string>com.android.server.pm.ShortcutService$_byte__getBackupPayload_int_userId_LambdaImpl0</string>
          <string>com.android.server.pm.IntentFilterVerificationState</string>
          <string>com.android.server.pm.InstructionSets</string>
          <string>com.android.server.pm.PermissionsState$PermissionData</string>
          <string>android.media.AmrInputStream</string>
          <string>com.android.server.pm.ShortcutPackage$_void_refreshPinnedFlags_com_android_server_pm_ShortcutService_s_LambdaImpl0</string>
          <string>android.telecom.Response</string>
          <string>android.content.pm.IPackageInstaller</string>
          <string>android.service.gatekeeper.IGateKeeperService$Stub$Proxy</string>
          <string>com.android.internal.content.SelectionBuilder</string>
          <string>com.android.server.pm.EphemeralResolverConnection$GetEphemeralResolveInfoCaller$1</string>
          <string>android.content.IIntentSender$Stub</string>
          <string>com.android.server.pm.UserRestrictionsUtils</string>
          <string>libcore.util.EmptyArray</string>
          <string>java.io.PrintStream</string>
          <string>java.util.function.Consumer</string>
          <string>com.android.server.pm.EphemeralApplicationRegistry</string>
          <string>android.os.storage.StorageEventListener</string>
          <string>android.content.pm.PackageInstaller$Session</string>
          <string>com.android.server.pm.ShortcutService$_android_content_pm_ParceledListSlice_getPinnedShortcuts_java_lang_String_packageName_int_userId_LambdaImpl0</string>
          <string>com.android.server.pm.ShortcutService$ConfigConstants</string>
          <string>android.database.sqlite.SqliteWrapper</string>
          <string>com.android.server.pm.PackageSettingBase</string>
          <string>com.android.server.pm.ShortcutService</string>
          <string>com.android.server.pm.UserManagerService$LocalService</string>
          <string>com.android.internal.app.IEphemeralResolver</string>
          <string>com.android.server.pm.UserManagerService$6$1</string>
          <string>android.content.pm.PackageParser$ActivityIntentInfo</string>
          <string>android.os.Build$VERSION</string>
          <string>com.android.server.pm.Settings$VersionInfo</string>
          <string>android.provider.SyncConstValue</string>
          <string>android.renderscript.ScriptIntrinsicBlend</string>
          <string>java.lang.Runtime</string>
          <string>com.android.server.pm.Settings$DatabaseVersion</string>
          <string>com.android.server.hdmi.Constants</string>
          <string>android.net.wifi.p2p.nsd.WifiP2pUpnpServiceInfo</string>
          <string>android.nfc.cardemulation.OffHostApduService</string>
          <string>android.graphics.pdf.PdfEditor</string>
          <string>com.android.server.pm.PackageDexOptimizer$ForcedUpdatePackageDexOptimizer</string>
          <string>java.security.NoSuchAlgorithmException</string>
          <string>com.android.server.pm.PackageManagerException</string>
          <string>android.content.pm.IPackageDataObserver$Stub$Proxy</string>
          <string>com.android.server.pm.ShortcutService$LocalService$_android_content_pm_ShortcutInfo_getShortcutInfoLocked_int_launcherUserId_java_lang_String_callingPackage_java_lang_String_packageName_java_lang_String_shortcutId_int_userId_LambdaImpl0</string>
          <string>com.android.server.pm.PackageManagerService$VerificationInfo</string>
          <string>android.os.Environment</string>
          <string>android.nfc.ErrorCodes</string>
          <string>android.content.pm.ShortcutServiceInternal$ShortcutChangeListener</string>
          <string>android.content.pm.PackageParser$PackageParserException</string>
          <string>com.android.server.pm.PersistentPreferredIntentResolver</string>
          <string>java.util.ArrayList</string>
          <string>android.content.pm.IPackageDeleteObserver$Stub$Proxy</string>
          <string>android.content.pm.IOtaDexopt$Stub</string>
          <string>com.android.server.pm.PackageManagerService$PackageRemovedInfo</string>
          <string>com.android.server.pm.PackageManagerService$PostInstallData</string>
          <string>com.android.server.pm.PackageManagerService$EphemeralIntentResolver</string>
          <string>android.content.pm.EphemeralResolveInfo$EphemeralResolveIntentInfo</string>
          <string>java.lang.String</string>
          <string>android.system.Os</string>
          <string>com.android.server.pm.ShortcutService$_void_checkPackageChanges_int_ownerUserId_LambdaImpl0</string>
          <string>com.android.server.pm.LauncherAppsService$LauncherAppsImpl</string>
          <string>android.security.GateKeeper</string>
          <string>android.filterpacks.imageproc.Invert</string>
          <string>android.service.wallpaper.WallpaperSettingsActivity</string>
          <string>com.android.server.pm.UserManagerService$UserData</string>
          <string>com.android.server.FgThread</string>
          <string>android.media.MediaDrmResetException</string>
          <string>android.content.pm.IPackageDeleteObserver</string>
          <string>android.util.MathUtils</string>
          <string>java.io.FileFilter</string>
          <string>com.android.server.pm.Policy</string>
          <string>com.android.server.pm.PolicyComparator</string>
          <string>android.os.FileBridge</string>
          <string>android.telephony.DisconnectCause</string>
          <string>android.content.pm.PackageParser$PermissionGroup</string>
          <string>android.os.UserManagerInternal</string>
          <string>com.android.server.pm.IntentFilterVerificationResponse</string>
          <string>com.android.server.pm.PackageManagerShellCommand$1</string>
          <string>com.android.server.pm.Policy$PolicyBuilder</string>
          <string>com.android.server.pm.PackageManagerShellCommand$3</string>
          <string>com.android.server.pm.PackageManagerShellCommand$2</string>
          <string>com.android.server.pm.PackageManagerShellCommand$4</string>
          <string>android.app.IStopUserCallback$Stub$Proxy</string>
          <string>com.android.server.pm.PackageInstallerService$Callbacks</string>
          <string>android.content.pm.PackageParser$Service</string>
          <string>com.android.internal.app.IEphemeralResolver$Stub$Proxy</string>
          <string>com.android.server.pm.OtaDexoptService</string>
          <string>java.util.function.Predicate</string>
          <string>dalvik.system.DexFile</string>
          <string>com.android.server.pm.PackageManagerService$MoveInstallArgs</string>
          <string>com.android.server.pm.ShortcutPackageItem</string>
          <string>com.android.server.pm.PackageManagerService$MeasureParams</string>
          <string>java.io.FileNotFoundException</string>
          <string>android.app.admin.IDevicePolicyManager$Stub</string>
          <string>com.android.server.pm.PreferredComponent$Callbacks</string>
          <string>java.util.List</string>
          <string>java.security.cert.Certificate</string>
          <string>com.android.server.pm.PackageManagerService$CrossProfileDomainInfo</string>
          <string>android.accounts.AccountAuthenticatorActivity</string>
          <string>android.database.sqlite.SQLiteOutOfMemoryException</string>
          <string>com.android.internal.app.IMediaContainerService$Stub</string>
          <string>android.webkit.WebViewUpdateService</string>
          <string>com.android.internal.widget.DrawableHolder</string>
          <string>android.content.res.ObbScanner</string>
          <string>com.android.server.pm.PackageSignatures</string>
          <string>android.content.pm.IPackageDeleteObserver2</string>
          <string>com.android.server.pm.PackageManagerService$HandlerParams</string>
          <string>android.os.FileBridge$FileBridgeOutputStream</string>
          <string>android.content.pm.IPackageInstaller$Stub$Proxy</string>
          <string>java.lang.Iterable</string>
          <string>com.android.server.pm.PackageManagerServiceUtils$_java_util_List_getPackagesForDexopt_java_util_Collection_packages_com_android_server_pm_PackageManagerService_packageManagerService_LambdaImpl0</string>
          <string>com.android.server.pm.KeySetHandle</string>
          <string>android.content.IIntentSender$Stub$Proxy</string>
          <string>android.content.pm.IPackageStatsObserver$Stub</string>
          <string>android.content.Intent$CommandOptionHandler</string>
          <string>android.content.pm.PackageParser$ApkLite</string>
          <string>android.content.pm.PackageParser$ServiceIntentInfo</string>
          <string>com.android.server.pm.ShortcutUser$_void_resetThrottlingIfNeeded_com_android_server_pm_ShortcutService_s_LambdaImpl0</string>
          <string>com.android.server.pm.UserManagerService$MainHandler</string>
          <string>com.android.server.pm.PackageVerificationResponse</string>
          <string>com.android.server.pm.PackageManagerService$InstallParams</string>
          <string>com.android.server.pm.PackageManagerService$OriginInfo</string>
          <string>com.android.server.pm.SELinuxMMAC</string>
          <string>android.provider.SearchIndexablesProvider</string>
          <string>android.content.pm.PackageParser$Instrumentation</string>
          <string>com.android.server.pm.PackageManagerService$FileInstallArgs$1</string>
          <string>android.media.effect.effects.IdentityEffect</string>
          <string>android.os.UserManagerInternal$UserRestrictionsListener</string>
          <string>com.android.server.pm.ShortcutService$FileOutputStreamWithPath</string>
          <string>org.xmlpull.v1.XmlPullParser</string>
          <string>com.android.server.pm.PackageManagerShellCommand</string>
          <string>com.android.server.pm.PackageManagerService$ActivityIntentResolver$SchemesIterGenerator</string>
          <string>com.android.server.pm.ShortcutService$_void_handlePackageAdded_java_lang_String_packageName_int_userId_LambdaImpl0</string>
          <string>com.android.server.pm.ShortcutService$LocalService</string>
          <string>android.provider.LiveFolders</string>
          <string>android.os.storage.MountServiceInternal$ExternalStorageMountPolicy</string>
          <string>android.os.BinderProxy</string>
          <string>android.os.storage.MountServiceListener</string>
          <string>com.android.server.pm.PackageManagerService$PendingPackageBroadcasts</string>
          <string>android.content.pm.IPackageManager$Stub</string>
          <string>android.content.IntentFilter$AuthorityEntry</string>
          <string>com.android.server.pm.PersistentPreferredActivity</string>
          <string>com.android.server.pm.Installer</string>
          <string>android.filterfw.core.RandomScheduler</string>
          <string>android.database.sqlite.SQLiteTableLockedException</string>
          <string>java.lang.StringBuilder</string>
          <string>com.android.server.pm.Settings$RuntimePermissionPersistence$MyHandler</string>
          <string>android.content.pm.PackageManagerInternal$SyncAdapterPackagesProvider</string>
          <string>android.content.pm.PackageParser$Activity</string>
          <string>com.android.server.pm.BasePermission</string>
          <string>android.filterfw.core.ProgramVariable</string>
          <string>android.preference.PreferenceCategory</string>
          <string>android.util.TimingLogger</string>
          <string>com.android.server.pm.ShortcutUser$_void_forPackageItem_java_lang_String_packageName_int_packageUserId_java_util_function_Consumer_callback_LambdaImpl0</string>
          <string>android.content.IntentFilter$MalformedMimeTypeException</string>
          <string>com.android.internal.app.IntentForwarderActivity</string>
          <string>libcore.io.IoBridge</string>
          <string>com.android.server.pm.PackageManagerService$ActivityIntentResolver$AuthoritiesIterGenerator</string>
          <string>com.android.server.fingerprint.EnumerateClient</string>
          <string>com.android.server.pm.PackageManagerService$ActivityIntentResolver$ActionIterGenerator</string>
          <string>com.android.internal.app.IMediaContainerService</string>
          <string>com.android.server.pm.ShortcutService$_void_cleanUpPackageLocked_java_lang_String_packageName_int_owningUserId_int_packageUserId_LambdaImpl1</string>
          <string>android.gesture.GestureConstants</string>
          <string>com.android.server.pm.ShortcutService$_void_cleanUpPackageLocked_java_lang_String_packageName_int_owningUserId_int_packageUserId_LambdaImpl0</string>
          <string>android.location.SettingInjectorService</string>
          <string>android.os.Environment$UserEnvironment</string>
          <string>android.hardware.camera2.DngCreator</string>
          <string>com.android.server.pm.ProtectedPackages</string>
          <string>com.android.server.pm.PreferredComponent</string>
          <string>com.android.internal.os.BackgroundThread</string>
          <string>android.util.Base64DataException</string>
          <string>android.drm.DrmOutputStream</string>
          <string>android.content.pm.IPackageManager$Stub$Proxy</string>
          <string>com.android.server.pm.PackageInstallerService</string>
          <string>com.android.internal.util.IndentingPrintWriter</string>
          <string>com.android.server.pm.PackageManagerService$ProviderIntentResolver</string>
          <string>com.android.server.pm.ShortcutService$_void_cleanUpPackageForAllLoadedUsers_java_lang_String_packageName_int_packageUserId_LambdaImpl0</string>
          <string>android.content.pm.IPackageMoveObserver$Stub$Proxy</string>
          <string>com.android.internal.util.SizedInputStream</string>
          <string>com.android.server.pm.CrossProfileIntentResolver</string>
          <string>com.android.server.pm.PackageManagerService$IFVerificationParams</string>
          <string>android.os.ShellCommand</string>
          <string>com.android.server.pm.PackageInstallerService$InternalCallback$1</string>
          <string>com.android.server.pm.OtaDexoptShellCommand</string>
          <string>com.android.server.pm.OtaDexoptService$OTADexoptPackageDexOptimizer</string>
          <string>android.net.wifi.p2p.WifiP2pProvDiscEvent</string>
          <string>android.content.pm.PackageParser$ParsePackageItemArgs</string>
          <string>android.content.pm.ShortcutServiceInternal</string>
          <string>com.android.server.pm.PackageInstallerService$InternalCallback</string>
          <string>com.android.server.pm.ShortcutService$_android_content_pm_ParceledListSlice_getDynamicShortcuts_java_lang_String_packageName_int_userId_LambdaImpl0</string>
          <string>com.android.server.pm.PackageManagerShellCommand$LocalIntentReceiver</string>
          <string>com.android.server.pm.Settings$RuntimePermissionPersistence</string>
          <string>android.content.pm.PackageUserState</string>
          <string>java.util.concurrent.SynchronousQueue</string>
          <string>android.service.gatekeeper.IGateKeeperService</string>
          <string>com.android.internal.telephony.CarrierAppUtils</string>
          <string>java.util.Collection</string>
          <string>android.database.sqlite.SQLiteAccessPermException</string>
          <string>com.android.server.pm.CrossProfileIntentFilter</string>
          <string>android.media.audiofx.AcousticEchoCanceler</string>
          <string>android.content.pm.AppsQueryHelper</string>
          <string>org.xmlpull.v1.XmlPullParserException</string>
          <string>android.content.pm.PackageParser$PackageLite</string>
          <string>android.app.AliasActivity</string>
          <string>android.content.pm.IPackageInstallObserver2$Stub$Proxy</string>
          <string>android.graphics.YuvImage</string>
          <string>com.android.server.updates.SELinuxPolicyInstallReceiver</string>
          <string>com.android.server.pm.UserManagerService$LocalService$1</string>
          <string>com.android.server.pm.PackageManagerService$PackageInstalledInfo</string>
          <string>android.media.CameraProfile</string>
          <string>com.android.server.pm.PackageInstallerSession$1</string>
          <string>com.android.server.pm.PackageManagerService$MoveInfo</string>
          <string>com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor</string>
          <string>com.android.server.pm.SharedUserSetting</string>
          <string>android.util.JsonWriter</string>
          <string>com.android.server.pm.EphemeralApplicationRegistry$UninstalledEphemeralAppState</string>
          <string>com.android.server.pm.DefaultPermissionGrantPolicy</string>
          <string>android.content.pm.IPackageInstallObserver2$Stub</string>
          <string>com.android.server.pm.PackageInstallerSession$4</string>
          <string>com.android.server.pm.PackageInstallerSession$3</string>
          <string>com.android.server.pm.PackageManagerService$ActivityIntentResolver</string>
          <string>com.android.server.pm.PackageInstallerSession$2</string>
          <string>com.android.server.pm.PackageManagerService$ActivityIntentResolver$IterGenerator</string>
          <string>com.android.internal.telephony.TelephonyProperties</string>
          <string>com.android.server.pm.PendingPackage</string>
          <string>android.security.SystemKeyStore</string>
          <string>android.content.pm.PackageParser$Permission</string>
          <string>android.app.IStopUserCallback$Stub</string>
          <string>android.renderscript.ScriptIntrinsic</string>
          <string>com.android.server.pm.Settings</string>
          <string>com.android.internal.os.IParcelFileDescriptorFactory</string>
          <string>com.android.server.pm.Settings$RestoredPermissionGrant</string>
          <string>com.android.server.pm.ShortcutService$1</string>
          <string>android.content.pm.IPackageMoveObserver$Stub</string>
          <string>com.android.server.pm.ShortcutService$2</string>
          <string>android.content.pm.IOtaDexopt$Stub$Proxy</string>
          <string>com.android.server.pm.PackageManagerService$IntentVerifierProxy</string>
          <string>android.database.sqlite.SQLiteMisuseException</string>
          <string>android.content.pm.PackageParser$ParseComponentArgs</string>
          <string>com.android.server.wm.WindowManagerDebugConfig</string>
          <string>com.android.internal.view.menu.ActionMenu</string>
          <string>android.content.pm.IPackageInstallerSession$Stub</string>
          <string>android.renderscript.ScriptIntrinsicBLAS</string>
          <string>java.lang.System</string>
          <string>com.android.internal.content.NativeLibraryHelper$Handle</string>
          <string>com.android.server.pm.PackageManagerService$InstallArgs</string>
          <string>com.android.server.pm.UserManagerService$2</string>
          <string>com.android.server.pm.UserManagerService$1</string>
          <string>com.android.server.pm.UserManagerService$4</string>
          <string>com.android.server.pm.UserManagerService$3</string>
          <string>com.android.server.pm.UserManagerService$6</string>
          <string>com.android.server.pm.LauncherAppsService</string>
          <string>com.android.server.pm.UserManagerService$5</string>
          <string>com.android.server.pm.PackageManagerService$PackageUsage</string>
          <string>com.android.server.pm.ShortcutPackage</string>
          <string>com.android.server.pm.PackageInstallerService$1</string>
          <string>com.android.server.pm.PackageManagerService$PackageUsage$1</string>
          <string>com.android.server.pm.PackageInstallerService$2</string>
          <string>android.content.pm.IPackageMoveObserver</string>
          <string>android.database.sqlite.SQLiteReadOnlyDatabaseException</string>
          <string>com.android.server.pm.ShortcutService$LocalService$_void_onSystemLocaleChangedNoLock__LambdaImpl0</string>
          <string>com.android.server.pm.ShortcutService$_void__init__android_content_Context_context_android_os_Looper_looper_LambdaImpl0</string>
          <string>android.content.pm.IPackageDataObserver$Stub</string>
          <string>com.android.server.pm.ShortcutService$LocalService$_void_getShortcutsInnerLocked_int_launcherUserId_java_lang_String_callingPackage_java_lang_String_packageName_java_util_List_shortcutIds_long_changedSince_android_content_ComponentName_componentName_int_queryFlags_int_userId_java_util_ArrayList_ret_int_cloneFlag_LambdaImpl0</string>
          <string>android.content.pm.IPackageStatsObserver</string>
          <string>com.android.server.pm.PackageManagerService$ClearStorageConnection</string>
          <string>com.android.server.pm.UserManagerService$Shell</string>
          <string>android.content.pm.IPackageInstallerSession$Stub$Proxy</string>
          <string>com.android.server.pm.LauncherAppsService$BroadcastCookie</string>
          <string>com.android.server.pm.PreferredIntentResolver</string>
          <string>android.graphics.Camera</string>
          <string>com.android.server.pm.ShortcutPackageInfo</string>
          <string>android.util.PrintStreamPrinter</string>
          <string>com.android.server.pm.PackageManagerService$InstallParams$1</string>
          <string>android.content.pm.IPackageInstallerCallback</string>
          <string>java.lang.Throwable</string>
          <string>com.android.server.pm.ShortcutLauncher</string>
          <string>com.android.server.pm.LauncherAppsService$LauncherAppsImpl$MyPackageMonitor$_void_onShortcutChanged_java_lang_String_packageName_int_userId_LambdaImpl0</string>
          <string>com.android.internal.content.PackageHelper</string>
          <string>com.android.server.pm.PackageManagerService$PackageManagerInternalImpl</string>
          <string>android.graphics.RegionIterator</string>
          <string>com.android.server.pm.PackageManagerService$AsecInstallArgs</string>
          <string>android.content.pm.PackageParser$Provider</string>
          <string>java.io.BufferedOutputStream</string>
          <string>com.android.internal.widget.PasswordEntryKeyboardHelper</string>
          <string>com.android.server.pm.PackageManagerService</string>
          <string>android.media.audiofx.AutomaticGainControl</string>
          <string>com.android.server.pm.LauncherAppsService$LauncherAppsImpl$PackageCallbackList</string>
          <string>com.android.server.pm.PackageManagerService$PackageFreezer</string>
          <string>com.android.server.pm.EphemeralResolverConnection</string>
          <string>android.content.pm.PackageParser$ProviderIntentInfo</string>
          <string>android.content.EventLogTags</string>
          <string>com.android.server.pm.PackageInstallerSession</string>
          <string>com.android.server.pm.ShortcutService$_void_notifyListeners_java_lang_String_packageName_int_userId_LambdaImpl0</string>
          <string>com.android.server.pm.ShortcutService$Lifecycle</string>
          <string>android.database.sqlite.SQLiteDoneException</string>
          <string>android.content.pm.IPackageDataObserver</string>
          <string>android.renderscript.ScriptC</string>
          <string>com.android.server.pm.EphemeralResolverConnection$MyServiceConnection</string>
          <string>java.io.File</string>
          <string>com.android.server.pm.ProcessLoggingHandler</string>
          <string>com.android.internal.util.ImageUtils</string>
          <string>android.content.pm.PackageInstaller$SessionInfo</string>
          <string>com.android.server.pm.BackgroundDexOptService$2</string>
          <string>android.content.pm.IOnPermissionsChangeListener$Stub$Proxy</string>
          <string>com.android.server.pm.BackgroundDexOptService$1</string>
          <string>java.security.DigestInputStream</string>
          <string>com.android.server.pm.PackageVerificationState</string>
          <string>com.android.server.pm.PackageManagerService$BlobXmlRestorer</string>
          <string>com.android.server.pm.PackageManagerShellCommand$LocalIntentReceiver$1</string>
          <string>com.android.server.pm.PackageManagerService$IntentFilterVerifier</string>
          <string>android.database.sqlite.SQLiteCantOpenDatabaseException</string>
          <string>com.android.server.pm.PackageInstallerService$PackageDeleteObserverAdapter</string>
          <string>android.content.pm.IPackageInstallObserver2</string>
          <string>com.android.server.pm.ShortcutService$MyShellCommand</string>
          <string>java.lang.AutoCloseable</string>
          <string>android.widget.SimpleExpandableListAdapter</string>
          <string>com.android.server.pm.PackageKeySetData</string>
          <string>android.content.pm.PackageInstaller$SessionInfo$1</string>
          <string>android.content.pm.IOtaDexopt</string>
          <string>com.android.server.pm.UserManagerService$LifeCycle</string>
          <string>com.android.server.pm.PackageManagerShellCommand$InstallParams</string>
          <string>android.speech.RecognizerResultsIntent</string>
          <string>java.lang.Byte</string>
          <string>com.android.server.pm.ShortcutUser</string>
          <string>com.android.server.pm.PackageManagerServiceUtils</string>
          <string>android.net.wimax.WimaxManagerConstants</string>
          <string>android.media.ResampleInputStream</string>
          <string>android.util.ExceptionUtils</string>
          <string>android.util.SparseArray</string>
          <string>com.android.server.pm.PackageManagerService$ActivityIntentResolver$CategoriesIterGenerator</string>
          <string>com.android.server.pm.PackageManagerService$ServiceIntentResolver</string>
          <string>com.android.server.pm.ShortcutUser$_void_attemptToRestoreIfNeededAndSave_com_android_server_pm_ShortcutService_s_java_lang_String_packageName_int_packageUserId_LambdaImpl0</string>
          <string>com.android.internal.app.IEphemeralResolver$Stub</string>
          <string>com.android.internal.os.InstallerConnection$InstallerException</string>
          <string>com.android.server.pm.ShortcutService$CommandException</string>
          <string>com.android.server.pm.PackageManagerService$MoveCallbacks</string>
          <string>com.android.internal.app.IMediaContainerService$Stub$Proxy</string>
          <string>com.android.server.pm.PackageManagerService$OnPermissionChangeListeners</string>
          <string>android.database.sqlite.SQLiteDatatypeMismatchException</string>
          <string>com.android.server.updates.SmsShortCodesInstallReceiver</string>
          <string>com.android.server.pm.ShortcutService$Stats</string>
          <string>com.android.server.pm.ShortcutUser$PackageWithUser</string>
          <string>android.content.pm.PackageManager$LegacyPackageDeleteObserver</string>
          <string>java.util.Iterator</string>
          <string>com.android.internal.content.NativeLibraryHelper</string>
          <string>android.media.audiofx.NoiseSuppressor</string>
          <string>com.android.server.pm.PermissionsState$PermissionState</string>
          <string>android.content.pm.LimitedLengthInputStream</string>
          <string>android.app.admin.IDevicePolicyManager</string>
          <string>com.android.internal.os.IParcelFileDescriptorFactory$Stub$Proxy</string>
          <string>android.database.sqlite.SQLiteBlobTooBigException</string>
          <string>com.android.server.updates.ApnDbInstallReceiver</string>
          <string>com.android.internal.telephony.TelephonyIntents</string>
          <string>android.content.pm.PackageParser$NewPermissionInfo</string>
          <string>com.android.server.pm.IntentFilterVerificationKey</string>
          <string>java.util.Collections</string>
          <string>com.android.internal.util.ArrayUtils</string>
          <string>android.content.pm.IPackageDeleteObserver$Stub</string>
          <string>android.content.pm.PackageParser$IntentInfo</string>
          <string>com.android.server.pm.BackgroundDexOptService</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.internal.view.ss</name>
        <entities>
          <string>com.android.internal.view.IInputMethodSession$Stub</string>
          <string>com.android.internal.view.RotationPolicy</string>
          <string>com.android.internal.view.FloatingActionMode</string>
          <string>com.android.internal.view.IInputConnectionWrapper</string>
          <string>com.android.internal.view.InputConnectionWrapper</string>
          <string>com.android.internal.view.RotationPolicy$RotationPolicyListener$1</string>
          <string>com.android.internal.view.RotationPolicy$1</string>
          <string>com.android.internal.view.RotationPolicy$RotationPolicyListener</string>
          <string>com.android.internal.view.FloatingActionMode$FloatingToolbarVisibilityHelper</string>
          <string>com.android.internal.view.InputBindResult</string>
          <string>com.android.internal.view.InputConnectionWrapper$InputContextCallback</string>
          <string>com.android.internal.view.IInputConnectionWrapper$SomeArgs</string>
          <string>com.android.internal.view.FloatingActionMode$1</string>
          <string>com.android.internal.view.FloatingActionMode$2</string>
          <string>com.android.internal.view.IInputConnectionWrapper$MyHandler</string>
          <string>com.android.internal.view.FloatingActionMode$3</string>
          <string>com.android.internal.view.InputBindResult$1</string>
          <string>com.android.internal.view.FloatingActionMode$4</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.text.util.ss</name>
        <entities>
          <string>android.text.util.Rfc822Token</string>
          <string>android.text.util.LinkSpec</string>
          <string>android.text.util.Linkify$TransformFilter</string>
          <string>android.text.util.Linkify$4</string>
          <string>android.text.util.Linkify$3</string>
          <string>android.text.util.Linkify$2</string>
          <string>android.text.util.Linkify$1</string>
          <string>com.android.i18n.phonenumbers.PhoneNumberMatch</string>
          <string>android.text.util.Linkify</string>
          <string>android.text.util.Rfc822Tokenizer</string>
          <string>android.text.util.Linkify$MatchFilter</string>
          <string>java.net.URLEncoder</string>
          <string>android.util.Patterns</string>
          <string>com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.internal.policy.ss</name>
        <entities>
          <string>android.view.ActionMode</string>
          <string>com.android.internal.policy.PhoneWindow$PanelMenuPresenterCallback</string>
          <string>com.android.internal.policy.PhoneWindow$PhoneWindowMenuCallback</string>
          <string>android.transition.Scene</string>
          <string>com.android.internal.policy.DecorView$3</string>
          <string>com.android.internal.policy.DecorView$2$1</string>
          <string>com.android.internal.policy.DecorView$4</string>
          <string>com.android.internal.policy.DecorView$1</string>
          <string>java.lang.AbstractMethodError</string>
          <string>com.android.internal.policy.DecorView$2</string>
          <string>com.android.internal.widget.SwipeDismissLayout$OnDismissedListener</string>
          <string>com.android.internal.policy.DecorView$ActionModeCallback2Wrapper$1</string>
          <string>com.android.internal.policy.PhoneWindow$DrawableFeatureState</string>
          <string>android.view.KeyEvent$DispatcherState</string>
          <string>android.view.ActionMode$Callback</string>
          <string>android.view.WindowCallbacks</string>
          <string>com.android.internal.widget.DecorContentParent</string>
          <string>com.android.internal.policy.DecorContext</string>
          <string>com.android.internal.policy.PhoneWindow$RotationWatcher$1</string>
          <string>android.view.Menu</string>
          <string>com.android.internal.policy.PhoneWindow$RotationWatcher</string>
          <string>com.android.internal.policy.DecorView$ActionModeCallback2Wrapper</string>
          <string>com.android.internal.policy.PhoneWindow$2</string>
          <string>com.android.internal.policy.PhoneWindow$WindowManagerHolder</string>
          <string>com.android.internal.policy.PhoneWindow$PanelFeatureState$SavedState$1</string>
          <string>com.android.internal.policy.PhoneWindow$1</string>
          <string>com.android.internal.policy.PhoneWindow$ActionMenuPresenterCallback</string>
          <string>com.android.internal.policy.PhoneWindow$3</string>
          <string>com.android.internal.view.menu.MenuDialogHelper</string>
          <string>android.animation.ObjectAnimator</string>
          <string>android.view.InputQueue$Callback</string>
          <string>com.android.internal.policy.PhoneWindow$PanelFeatureState</string>
          <string>com.android.internal.policy.DecorView</string>
          <string>android.view.Window$WindowControllerCallback</string>
          <string>com.android.internal.widget.BackgroundFallback</string>
          <string>android.view.SearchEvent</string>
          <string>android.view.ActionMode$Callback2</string>
          <string>com.android.internal.policy.DecorView$ColorViewState</string>
          <string>com.android.internal.widget.DecorCaptionView</string>
          <string>com.android.internal.policy.BackdropFrameRenderer</string>
          <string>com.android.internal.view.StandaloneActionMode</string>
          <string>android.animation.Animator$AnimatorListener</string>
          <string>com.android.internal.policy.PhoneWindow$PanelFeatureState$SavedState</string>
          <string>com.android.internal.view.menu.ContextMenuBuilder</string>
          <string>com.android.internal.policy.PhoneWindow</string>
          <string>com.android.internal.widget.SwipeDismissLayout$OnSwipeProgressChangedListener</string>
          <string>android.view.SurfaceHolder$Callback2</string>
          <string>android.view.ViewManager</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>org.apache.http.conn.ssl.ss</name>
        <entities>
          <string>javax.net.ssl.SSLContext</string>
          <string>javax.security.auth.x500.X500Principal</string>
          <string>javax.net.ssl.SSLSocket</string>
          <string>javax.net.ssl.TrustManager</string>
          <string>java.security.cert.CertificateParsingException</string>
          <string>java.util.logging.Level</string>
          <string>org.apache.http.conn.ssl.StrictHostnameVerifier</string>
          <string>org.apache.http.conn.ssl.SSLSocketFactory$NoPreloadHolder</string>
          <string>org.apache.http.conn.ssl.AbstractVerifier</string>
          <string>javax.net.ssl.SSLSession</string>
          <string>org.apache.http.conn.ssl.X509HostnameVerifier</string>
          <string>java.security.UnrecoverableKeyException</string>
          <string>org.apache.http.conn.ssl.SSLSocketFactory</string>
          <string>javax.net.ssl.HostnameVerifier</string>
          <string>javax.net.ssl.HttpsURLConnection</string>
          <string>org.apache.http.conn.ssl.AndroidDistinguishedNameParser</string>
          <string>javax.net.ssl.TrustManagerFactory</string>
          <string>javax.net.ssl.KeyManagerFactory</string>
          <string>java.security.KeyManagementException</string>
          <string>java.util.logging.Logger</string>
          <string>javax.net.ssl.KeyManager</string>
          <string>javax.net.ssl.SSLSocketFactory</string>
          <string>org.apache.http.conn.ssl.BrowserCompatHostnameVerifier</string>
          <string>javax.net.ssl.SSLException</string>
          <string>org.apache.http.conn.scheme.HostNameResolver</string>
          <string>org.apache.http.conn.ssl.AllowAllHostnameVerifier</string>
          <string>org.apache.http.params.HttpParams</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.voiceinteraction.ss</name>
        <entities>
          <string>com.android.server.soundtrigger.SoundTriggerInternal</string>
          <string>android.service.voice.IVoiceInteractionSessionService$Stub</string>
          <string>com.android.server.voiceinteraction.VoiceInteractionSessionConnection$4</string>
          <string>com.android.server.voiceinteraction.VoiceInteractionSessionConnection$3</string>
          <string>com.android.server.voiceinteraction.VoiceInteractionManagerService$1</string>
          <string>com.android.server.voiceinteraction.VoiceInteractionSessionConnection$5</string>
          <string>java.util.TreeSet</string>
          <string>com.android.server.voiceinteraction.VoiceInteractionSessionConnection$2</string>
          <string>com.android.server.voiceinteraction.VoiceInteractionSessionConnection$1</string>
          <string>android.service.voice.IVoiceInteractionSessionService</string>
          <string>com.android.server.voiceinteraction.VoiceInteractionSessionConnection$AssistDataForActivity</string>
          <string>com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl$2</string>
          <string>com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl$1</string>
          <string>com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub</string>
          <string>android.service.voice.VoiceInteractionManagerInternal</string>
          <string>com.android.server.voiceinteraction.VoiceInteractionSessionConnection$Callback</string>
          <string>com.android.server.voiceinteraction.DatabaseHelper</string>
          <string>com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$SettingsObserver</string>
          <string>com.android.server.voiceinteraction.VoiceInteractionManagerService$LocalService</string>
          <string>com.android.server.voiceinteraction.VoiceInteractionSessionConnection</string>
          <string>com.android.server.voiceinteraction.VoiceInteractionManagerServiceImpl</string>
          <string>android.service.voice.VoiceInteractionServiceInfo</string>
          <string>com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1</string>
          <string>com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$2</string>
          <string>android.service.voice.IVoiceInteractionSessionService$Stub$Proxy</string>
          <string>com.android.server.voiceinteraction.VoiceInteractionManagerService</string>
          <string>com.android.server.voiceinteraction.DatabaseHelper$SoundModelContract</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.filterpacks.base.ss</name>
        <entities>
          <string>android.filterfw.core.FilterContext$OnFrameReceivedListener</string>
          <string>android.filterpacks.base.CallbackFilter</string>
          <string>android.filterpacks.base.CallbackFilter$CallbackRunnable</string>
          <string>android.filterpacks.base.InputStreamSource</string>
          <string>android.filterfw.format.PrimitiveFormat</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.content.ss</name>
        <entities>
          <string>com.android.server.content.SyncStorageEngine$EndPoint</string>
          <string>com.android.server.content.SyncStorageEngine$DayStats</string>
          <string>com.android.server.content.SyncStorageEngine$OnSyncRequestListener</string>
          <string>java.security.InvalidParameterException</string>
          <string>com.android.server.content.SyncManager$12</string>
          <string>com.android.server.content.SyncManager$11</string>
          <string>com.android.server.content.SyncManager$10</string>
          <string>com.android.server.content.SyncManager$PrintTable</string>
          <string>com.android.server.content.SyncManager$16</string>
          <string>com.android.server.content.SyncManager$15</string>
          <string>com.android.server.content.SyncManager$14</string>
          <string>com.google.android.collect.Maps</string>
          <string>com.android.server.content.SyncStorageEngine$AccountInfo</string>
          <string>com.android.server.content.SyncManager$13</string>
          <string>com.android.server.content.ContentService$ObserverNode$ObserverEntry</string>
          <string>com.android.server.content.SyncStorageEngine$OnAuthorityRemovedListener</string>
          <string>android.content.pm.RegisteredServicesCache$ServiceInfo</string>
          <string>android.content.ISyncAdapter$Stub$Proxy</string>
          <string>com.android.server.content.SyncManager</string>
          <string>android.net.TrafficStats</string>
          <string>android.app.job.JobScheduler</string>
          <string>com.android.server.content.SyncManager$SyncTimeTracker</string>
          <string>android.content.ISyncAdapter$Stub</string>
          <string>com.android.server.content.SyncStorageEngine$PeriodicSyncAddedListener</string>
          <string>com.android.server.content.ContentService</string>
          <string>com.android.server.content.SyncManager$ActiveSyncContext</string>
          <string>com.android.server.content.ContentService$3</string>
          <string>com.android.server.content.ContentService$2</string>
          <string>com.android.server.content.ContentService$1</string>
          <string>com.android.server.content.SyncOperation</string>
          <string>android.util.SparseIntArray</string>
          <string>com.android.server.content.SyncStorageEngine$AuthorityInfo</string>
          <string>com.android.server.content.SyncManager$AccountSyncStats</string>
          <string>com.android.server.content.ContentService$ObserverCall</string>
          <string>android.content.ISyncAdapter</string>
          <string>com.android.server.content.SyncManager$UpdatePeriodicSyncMessagePayload</string>
          <string>android.content.pm.RegisteredServicesCacheListener</string>
          <string>android.database.IContentObserver</string>
          <string>com.android.server.content.SyncManager$6</string>
          <string>com.android.server.content.SyncManager$7</string>
          <string>com.android.server.content.SyncManager$8</string>
          <string>com.android.server.content.SyncManager$9</string>
          <string>android.accounts.AccountAndUser</string>
          <string>com.android.server.content.ContentService$ObserverNode</string>
          <string>com.android.server.content.SyncJobService</string>
          <string>com.android.server.content.SyncManager$AuthoritySyncStats</string>
          <string>com.google.android.collect.Lists</string>
          <string>android.content.SyncActivityTooManyDeletes</string>
          <string>com.android.server.content.SyncManager$SyncHandler</string>
          <string>com.android.server.content.SyncStorageEngine$SyncHistoryItem</string>
          <string>com.android.server.content.ContentService$Lifecycle</string>
          <string>com.android.server.content.SyncStorageEngine</string>
          <string>com.android.server.content.SyncManager$1</string>
          <string>com.android.server.content.SyncManager$ServiceConnectionData</string>
          <string>com.android.server.content.SyncManager$2</string>
          <string>com.android.server.content.SyncManager$3</string>
          <string>com.android.server.content.SyncManager$4</string>
          <string>com.android.server.content.SyncManager$5</string>
          <string>com.android.server.content.SyncManager$SyncFinishedOrCancelledMessagePayload</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.text.format.ss</name>
        <entities>
          <string>android.text.format.Time$TimeCalculator</string>
          <string>libcore.util.ZoneInfoDB$TzData</string>
          <string>android.text.format.TimeFormatter</string>
          <string>android.text.format.DateUtils</string>
          <string>libcore.util.ZoneInfo$WallTime</string>
          <string>android.text.format.Time</string>
          <string>libcore.icu.DateIntervalFormat</string>
          <string>libcore.util.ZoneInfo</string>
          <string>libcore.util.ZoneInfoDB</string>
          <string>libcore.icu.RelativeDateTimeFormatter</string>
          <string>android.text.format.Formatter$BytesResult</string>
          <string>android.util.TimeFormatException</string>
          <string>android.text.format.Formatter</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.connectivity.ss</name>
        <entities>
          <string>android.net.ICaptivePortal</string>
          <string>com.android.server.connectivity.MetricsLoggerService</string>
          <string>com.android.server.connectivity.PermissionMonitor</string>
          <string>com.android.net.IProxyService</string>
          <string>com.android.server.connectivity.Tethering$TetherInterfaceSM$TetheredState</string>
          <string>android.net.util.IpUtils</string>
          <string>com.android.server.connectivity.Tethering</string>
          <string>com.android.server.connectivity.DataConnectionStats$1</string>
          <string>com.android.server.connectivity.KeepalivePacketData</string>
          <string>java.net.InetAddress</string>
          <string>com.android.server.connectivity.DataConnectionStats</string>
          <string>com.android.server.connectivity.NetworkMonitor$CaptivePortalState</string>
          <string>com.android.server.connectivity.NetworkMonitor$MaybeNotifyState$1</string>
          <string>com.android.net.IProxyService$Stub$Proxy</string>
          <string>com.android.server.connectivity.NetworkDiagnostics$DnsUdpCheck</string>
          <string>com.android.server.connectivity.NetworkMonitor$CaptivePortalProbeResult</string>
          <string>com.android.server.connectivity.NetworkDiagnostics$SimpleSocketCheck</string>
          <string>com.android.server.connectivity.Tethering$TetherMasterSM$StartTetheringErrorState</string>
          <string>com.android.server.connectivity.KeepaliveTracker</string>
          <string>com.android.server.connectivity.NetworkMonitor$CustomIntentReceiver</string>
          <string>com.android.server.connectivity.Tethering$TetherMasterSM$SetIpForwardingDisabledErrorState</string>
          <string>com.android.server.connectivity.Tethering$2</string>
          <string>com.android.server.connectivity.Tethering$StateReceiver</string>
          <string>com.android.server.connectivity.Tethering$1</string>
          <string>com.android.server.connectivity.Tethering$TetherMasterSM</string>
          <string>com.android.server.connectivity.NetworkAgentInfo</string>
          <string>android.net.NetworkInfo$DetailedState</string>
          <string>android.os.INetworkManagementService</string>
          <string>com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState</string>
          <string>com.android.server.connectivity.Tethering$TetherInterfaceSM$UnavailableState</string>
          <string>com.android.server.connectivity.Tethering$TetherInterfaceSM$StartingState</string>
          <string>com.android.net.IProxyService$Stub</string>
          <string>com.android.server.connectivity.Tethering$UpstreamNetworkCallback</string>
          <string>android.os.INetworkActivityListener$Stub$Proxy</string>
          <string>com.android.server.connectivity.KeepaliveTracker$KeepaliveInfo</string>
          <string>com.android.server.connectivity.PacManager$3$1</string>
          <string>com.android.server.connectivity.Tethering$UpstreamNetworkMonitor</string>
          <string>com.android.server.connectivity.Vpn$1</string>
          <string>com.android.server.connectivity.Vpn$3</string>
          <string>com.android.server.connectivity.Vpn$2</string>
          <string>java.util.TreeMap</string>
          <string>com.android.server.connectivity.DnsEventListenerService$1</string>
          <string>com.android.server.connectivity.NetworkMonitor$DefaultState</string>
          <string>com.android.server.connectivity.KeepalivePacketData$InvalidPacketException</string>
          <string>java.util.ArrayDeque</string>
          <string>java.net.URL</string>
          <string>com.android.server.connectivity.Tethering$TetherInterfaceSM$InitialState</string>
          <string>com.android.server.connectivity.MetricsLoggerService$1</string>
          <string>com.android.net.IProxyCallback</string>
          <string>android.os.INetworkManagementService$Stub$Proxy</string>
          <string>com.android.server.connectivity.PacManager$3</string>
          <string>android.net.ConnectivityMetricsEvent$Reference$1</string>
          <string>com.android.server.connectivity.PacManager$1</string>
          <string>com.android.server.connectivity.PacManager$2</string>
          <string>java.util.concurrent.atomic.AtomicInteger</string>
          <string>android.net.INetworkManagementEventObserver</string>
          <string>android.system.StructTimeval</string>
          <string>com.android.server.connectivity.NetworkDiagnostics$IcmpCheck</string>
          <string>android.os.INetworkManagementService$Stub</string>
          <string>com.android.net.IProxyCallback$Stub</string>
          <string>com.android.server.connectivity.Nat464Xlat</string>
          <string>com.android.server.connectivity.NetworkMonitor$1ProbeThread</string>
          <string>android.net.ICaptivePortal$Stub</string>
          <string>com.android.server.connectivity.NetworkMonitor$EvaluatingState</string>
          <string>com.android.server.connectivity.PacManager</string>
          <string>com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState</string>
          <string>android.net.ConnectivityMetricsEvent$Reference</string>
          <string>com.android.server.connectivity.PacManager$PacRefreshIntentReceiver</string>
          <string>com.android.server.connectivity.NetworkMonitor</string>
          <string>com.android.server.connectivity.Tethering$TetherMasterSM$SetIpForwardingEnabledErrorState</string>
          <string>com.android.server.connectivity.Tethering$TetherInterfaceSM</string>
          <string>com.android.server.connectivity.Vpn$LegacyVpnRunner$1</string>
          <string>com.android.server.connectivity.Tethering$TetherMasterSM$StopTetheringErrorState</string>
          <string>android.net.NetworkUtils</string>
          <string>android.net.INetworkManagementEventObserver$Stub$Proxy</string>
          <string>com.android.server.connectivity.NetworkMonitor$LingeringState</string>
          <string>com.android.server.connectivity.Tethering$TetherMasterSM$SetDnsForwardersErrorState</string>
          <string>java.util.concurrent.atomic.AtomicReference</string>
          <string>com.android.server.connectivity.NetworkDiagnostics</string>
          <string>com.android.server.IoThread</string>
          <string>com.android.server.connectivity.Vpn$LegacyVpnRunner</string>
          <string>android.net.ICaptivePortal$Stub$Proxy</string>
          <string>com.android.server.connectivity.NetworkMonitor$MaybeNotifyState</string>
          <string>com.android.server.connectivity.NetworkDiagnostics$DnsResponseCode</string>
          <string>com.android.server.connectivity.Vpn$Connection</string>
          <string>com.android.server.connectivity.Vpn</string>
          <string>com.android.server.connectivity.Tethering$TetherMasterSM$SimChangeBroadcastReceiver</string>
          <string>com.android.server.connectivity.PermissionMonitor$1</string>
          <string>java.net.MalformedURLException</string>
          <string>android.net.NetworkAgent</string>
          <string>com.android.net.IProxyCallback$Stub$Proxy</string>
          <string>com.android.server.connectivity.NetworkDiagnostics$Measurement</string>
          <string>android.net.util.Stopwatch</string>
          <string>com.android.server.connectivity.NetworkMonitor$ValidatedState</string>
          <string>java.net.Inet6Address</string>
          <string>com.android.server.connectivity.Tethering$TetherMasterSM$InitialState</string>
          <string>android.os.INetworkActivityListener$Stub</string>
          <string>android.net.INetworkManagementEventObserver$Stub</string>
          <string>com.android.server.connectivity.DnsEventListenerService</string>
          <string>com.android.server.connectivity.DnsEventListenerService$DnsEventBatch</string>
          <string>com.android.server.connectivity.Tethering$TetherMasterSM$ErrorState</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.inputmethodservice.ss</name>
        <entities>
          <string>android.inputmethodservice.SoftInputWindow</string>
          <string>android.inputmethodservice.InputMethodService$InputMethodImpl</string>
          <string>android.inputmethodservice.KeyboardView$OnKeyboardActionListener</string>
          <string>android.inputmethodservice.IInputMethodWrapper</string>
          <string>android.view.inputmethod.InputMethod</string>
          <string>android.inputmethodservice.AbstractInputMethodService$AbstractInputMethodSessionImpl</string>
          <string>android.view.inputmethod.InputConnection</string>
          <string>android.inputmethodservice.InputMethodService</string>
          <string>android.view.WindowManager$BadTokenException</string>
          <string>android.inputmethodservice.InputMethodService$InputMethodSessionImpl</string>
          <string>android.inputmethodservice.KeyboardView</string>
          <string>android.inputmethodservice.ExtractEditText</string>
          <string>android.view.inputmethod.InputMethod$SessionCallback</string>
          <string>android.inputmethodservice.IInputMethodWrapper$Notifier</string>
          <string>android.inputmethodservice.InputMethodService$1</string>
          <string>android.inputmethodservice.InputMethodService$2</string>
          <string>android.inputmethodservice.InputMethodService$Insets</string>
          <string>android.inputmethodservice.AbstractInputMethodService</string>
          <string>android.inputmethodservice.SoftInputWindow$Callback</string>
          <string>android.inputmethodservice.KeyboardView$1</string>
          <string>android.inputmethodservice.KeyboardView$2</string>
          <string>android.inputmethodservice.KeyboardView$SwipeTracker</string>
          <string>android.inputmethodservice.InputMethodService$SettingsObserver</string>
          <string>android.inputmethodservice.KeyboardView$3</string>
          <string>android.inputmethodservice.IInputMethodSessionWrapper$ImeInputEventReceiver</string>
          <string>android.inputmethodservice.IInputMethodSessionWrapper</string>
          <string>android.view.inputmethod.InputMethodSession$EventCallback</string>
          <string>android.inputmethodservice.IInputMethodWrapper$InputMethodSessionCallbackWrapper</string>
          <string>android.inputmethodservice.AbstractInputMethodService$AbstractInputMethodImpl</string>
          <string>android.view.inputmethod.InputMethodSession</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.view.ss</name>
        <entities>
          <string>android.view.GestureDetector$OnContextClickListener</string>
          <string>android.view.IAssetAtlas$Stub</string>
          <string>android.view.ViewDebug$FlagToString</string>
          <string>android.view.DragAndDropPermissions$1</string>
          <string>android.view.ViewRootImpl$EarlyPostImeInputStage</string>
          <string>android.view.ViewRootImpl$SyntheticJoystickHandler</string>
          <string>android.view.PointerIcon$1</string>
          <string>android.graphics.Bitmap$Config</string>
          <string>android.view.View$SendViewStateChangedAccessibilityEvent</string>
          <string>android.view.ViewStub$OnInflateListener</string>
          <string>android.view.BatchedInputEventReceiver$BatchedInputRunnable</string>
          <string>android.view.ViewPropertyAnimator$3</string>
          <string>java.lang.NoSuchFieldException</string>
          <string>android.view.AccessibilityIterators$AbstractTextSegmentIterator</string>
          <string>android.view.View$OnSystemUiVisibilityChangeListener</string>
          <string>android.view.ViewPropertyAnimator$1</string>
          <string>android.view.ViewPropertyAnimator$2</string>
          <string>android.graphics.Shader</string>
          <string>android.view.WindowManagerGlobal$1</string>
          <string>android.view.WindowManagerGlobal$2</string>
          <string>android.view.ViewGroup$ChildListForAccessibility</string>
          <string>android.view.ViewRootImpl$SystemUiVisibilityInfo</string>
          <string>android.view.WindowId$1</string>
          <string>android.view.DragEvent</string>
          <string>android.view.Surface</string>
          <string>android.view.PixelCopy</string>
          <string>android.view.GraphicBuffer</string>
          <string>android.view.FocusFinder</string>
          <string>android.view.InputQueue$FinishedInputEventCallback</string>
          <string>android.view.View$OnGenericMotionListener</string>
          <string>android.view.ViewRootImpl</string>
          <string>android.view.ViewRootImpl$SendWindowContentChangedAccessibilityEvent</string>
          <string>com.android.internal.view.BaseSurfaceHolder</string>
          <string>android.content.res.CompatibilityInfo$Translator</string>
          <string>android.view.ViewOutlineProvider$1</string>
          <string>android.view.LayoutInflater$FactoryMerger</string>
          <string>android.view.ViewOutlineProvider$2</string>
          <string>android.view.accessibility.AccessibilityManager$AccessibilityStateChangeListener</string>
          <string>android.view.ViewOutlineProvider$3</string>
          <string>android.graphics.Canvas$EdgeType</string>
          <string>android.view.MotionEvent$1</string>
          <string>android.view.InflateException</string>
          <string>android.transition.Rotate</string>
          <string>android.view.ThreadedRenderer</string>
          <string>android.view.PixelCopy$1</string>
          <string>android.view.ViewRootImpl$ViewRootHandler</string>
          <string>android.view.RenderNodeAnimator</string>
          <string>android.view.ViewTreeObserver$CopyOnWriteArray</string>
          <string>android.view.ViewPropertyAnimatorRT</string>
          <string>android.graphics.SurfaceTexture$OnFrameAvailableListener</string>
          <string>com.android.internal.util.VirtualRefBasePtr</string>
          <string>java.io.ByteArrayOutputStream</string>
          <string>android.view.GestureDetector$GestureHandler</string>
          <string>android.view.Choreographer$CallbackQueue</string>
          <string>android.view.ViewRootImpl$ViewPreImeInputStage</string>
          <string>android.view.AppTransitionAnimationSpec$1</string>
          <string>android.view.InputQueue$ActiveInputEvent</string>
          <string>android.widget.ScrollBarDrawable</string>
          <string>android.view.Choreographer$FrameDisplayEventReceiver</string>
          <string>android.view.ViewRootImpl$AccessibilityInteractionConnection</string>
          <string>android.view.ViewGroup$HoverTarget</string>
          <string>android.view.IGraphicsStats</string>
          <string>android.view.AccessibilityIterators$CharacterTextSegmentIterator</string>
          <string>android.view.InputEventReceiver</string>
          <string>android.view.InputDevice</string>
          <string>android.view.MenuInflater</string>
          <string>android.view.InputFilter</string>
          <string>android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher</string>
          <string>android.view.LayoutInflater$BlinkLayout$1</string>
          <string>android.view.NotificationHeaderView$HeaderTouchListener</string>
          <string>android.view.ViewGroup$ViewLocationHolder</string>
          <string>android.view.InputEventConsistencyVerifier$KeyState</string>
          <string>android.view.KeyboardShortcutInfo$1</string>
          <string>android.graphics.LinearGradient</string>
          <string>android.view.FrameStats</string>
          <string>android.view.ViewDebug</string>
          <string>android.view.HandlerActionQueue</string>
          <string>android.view.WindowId</string>
          <string>android.view.InputDevice$1</string>
          <string>android.view.ViewRootImpl$SyntheticInputStage</string>
          <string>android.view.TextureView$1</string>
          <string>com.android.internal.view.IDragAndDropPermissions</string>
          <string>android.view.ViewRootImpl$AccessibilityInteractionConnectionManager</string>
          <string>android.view.WindowInfo$1</string>
          <string>android.view.Choreographer$1</string>
          <string>android.util.LongSparseLongArray</string>
          <string>android.view.Choreographer$2</string>
          <string>android.view.View$OnCreateContextMenuListener</string>
          <string>android.view.IWindowSession$Stub</string>
          <string>android.view.View$BaseSavedState</string>
          <string>android.view.ViewRootImpl$SyntheticKeyboardHandler</string>
          <string>android.view.ViewDebug$RecyclerTraceType</string>
          <string>android.view.ViewRootImpl$NativePreImeInputStage</string>
          <string>android.view.OrientationEventListener$SensorEventListenerImpl</string>
          <string>android.view.ViewRootImpl$TraversalRunnable</string>
          <string>android.view.ViewRootImpl$SyntheticTrackballHandler</string>
          <string>android.view.AbsSavedState$1</string>
          <string>android.util.FloatProperty</string>
          <string>android.view.IWindowFocusObserver$Stub</string>
          <string>android.view.ViewRootImpl$CalledFromWrongThreadException</string>
          <string>android.view.PointerIcon</string>
          <string>android.view.WindowManagerGlobal</string>
          <string>android.view.ViewRootImpl$WindowInputEventReceiver</string>
          <string>android.view.View$MatchIdPredicate</string>
          <string>android.view.View$OnLongClickListener</string>
          <string>android.view.ViewRootImpl$InvalidateOnAnimationRunnable</string>
          <string>android.view.WindowAnimationFrameStats$1</string>
          <string>android.view.Surface$1</string>
          <string>android.view.InputEvent</string>
          <string>android.view.InputChannel$1</string>
          <string>android.view.AccessibilityInteractionController</string>
          <string>android.view.AccessibilityIterators$ParagraphTextSegmentIterator</string>
          <string>android.view.Window$OnWindowDismissedCallback</string>
          <string>android.view.AccessibilityInteractionController$PrivateHandler</string>
          <string>android.view.AbsSavedState$2</string>
          <string>android.view.MagnificationSpec</string>
          <string>android.view.AppTransitionAnimationSpec</string>
          <string>android.view.DisplayInfo</string>
          <string>android.view.ViewRootImpl$ConsumeBatchedInputImmediatelyRunnable</string>
          <string>com.android.internal.view.RootViewSurfaceTaker</string>
          <string>android.view.WindowManager$KeyboardShortcutsReceiver</string>
          <string>android.view.ViewTreeObserver$CopyOnWriteArray$Access</string>
          <string>java.text.Normalizer$Form</string>
          <string>android.view.WindowInsets</string>
          <string>android.view.ViewRootImpl$InputStage</string>
          <string>android.view.GestureDetector$OnGestureListener</string>
          <string>android.view.NotificationHeaderView</string>
          <string>android.view.MenuInflater$InflatedOnMenuItemClickListener</string>
          <string>android.view.LayoutInflater$Factory2</string>
          <string>android.view.ViewTreeObserver$OnDrawListener</string>
          <string>android.view.Window</string>
          <string>com.android.internal.view.IDragAndDropPermissions$Stub</string>
          <string>android.view.OrientationListener</string>
          <string>android.os.NullVibrator</string>
          <string>android.view.HardwareLayer</string>
          <string>android.view.IWindowSession</string>
          <string>android.view.LayoutInflater$BlinkLayout</string>
          <string>android.view.GestureDetector$OnDoubleTapListener</string>
          <string>android.view.IAssetAtlas</string>
          <string>android.view.ViewRootImpl$ConsumeBatchedInputRunnable</string>
          <string>android.view.MagnificationSpec$1</string>
          <string>android.view.GestureDetector$SimpleOnGestureListener</string>
          <string>android.view.ViewPropertyAnimator$NameValuesHolder</string>
          <string>android.view.AccessibilityInteractionController$AddNodeInfosForViewId</string>
          <string>android.view.ViewRootImpl$NativePostImeInputStage</string>
          <string>android.view.IGraphicsStats$Stub$Proxy</string>
          <string>android.view.View$SendViewScrolledAccessibilityEvent</string>
          <string>android.view.ViewDebug$HierarchyHandler</string>
          <string>android.view.InputFilter$H</string>
          <string>android.view.ViewTreeObserver$OnWindowAttachListener</string>
          <string>android.view.LayoutInflater</string>
          <string>android.view.animation.LayoutAnimationController$AnimationParameters</string>
          <string>android.view.WindowInfo</string>
          <string>android.view.InputDevice$MotionRange</string>
          <string>android.view.Choreographer</string>
          <string>android.view.IAssetAtlas$Stub$Proxy</string>
          <string>android.view.TextureView</string>
          <string>android.view.PixelCopy$OnPixelCopyFinishedListener</string>
          <string>android.view.View$OnApplyWindowInsetsListener</string>
          <string>android.view.ViewPropertyAnimator$PropertyBundle</string>
          <string>android.util.Pools$SynchronizedPool</string>
          <string>android.view.SoundEffectConstants</string>
          <string>android.animation.RevealAnimator</string>
          <string>android.view.OrientationListener$OrientationEventListenerInternal</string>
          <string>android.view.KeyCharacterMap</string>
          <string>android.view.ViewTreeObserver</string>
          <string>android.view.View$UnsetPressedState</string>
          <string>android.view.Window$OnRestrictedCaptionAreaChangedListener</string>
          <string>android.graphics.Interpolator$Result</string>
          <string>android.view.View$OnHoverListener</string>
          <string>android.view.View$AttachInfo</string>
          <string>android.view.View$OnDragListener</string>
          <string>android.view.ScaleGestureDetector$1</string>
          <string>android.view.DragEvent$1</string>
          <string>android.view.ViewRootImpl$TrackballAxis</string>
          <string>java.lang.Float</string>
          <string>android.view.ThreadedRenderer$HardwareDrawCallbacks</string>
          <string>android.view.WindowId$FocusObserver</string>
          <string>android.view.ViewGroup$4</string>
          <string>android.view.ViewRootImpl$ImeInputStage</string>
          <string>android.view.FallbackEventHandler</string>
          <string>android.view.AccessibilityIterators</string>
          <string>android.view.KeyboardShortcutInfo</string>
          <string>android.view.KeyEvent$1</string>
          <string>android.view.ViewGroup$1</string>
          <string>android.view.KeyCharacterMap$KeyData</string>
          <string>android.view.ViewGroup$3</string>
          <string>android.view.ViewGroup$2</string>
          <string>android.view.ViewRootImpl$ViewPostImeInputStage</string>
          <string>android.view.ScaleGestureDetector</string>
          <string>java.lang.reflect.InvocationTargetException</string>
          <string>android.graphics.Outline</string>
          <string>android.view.animation.LayoutAnimationController</string>
          <string>android.view.ViewRootImpl$2</string>
          <string>android.view.ViewRootImpl$1</string>
          <string>android.view.ThreadedRenderer$ProcessInitializer</string>
          <string>android.view.View$AttachInfo$InvalidateInfo</string>
          <string>android.view.accessibility.AccessibilityEventSource</string>
          <string>android.view.IGraphicsStats$Stub</string>
          <string>android.graphics.Shader$TileMode</string>
          <string>android.view.GestureDetector</string>
          <string>android.view.ViewParent</string>
          <string>android.view.View$AttachInfo$Callbacks</string>
          <string>android.view.ViewRootImpl$4</string>
          <string>android.view.WindowAnimationFrameStats</string>
          <string>android.view.ViewRootImpl$3</string>
          <string>android.view.DragAndDropPermissions</string>
          <string>android.view.View$ScrollabilityCache</string>
          <string>android.view.View$CheckForLongPress</string>
          <string>android.view.DisplayInfo$1</string>
          <string>android.view.WindowManagerImpl$1</string>
          <string>android.view.Window$OnFrameMetricsAvailableListener</string>
          <string>android.view.View$TransformationInfo</string>
          <string>android.view.WindowLeaked</string>
          <string>android.view.ViewRootImpl$TakenSurfaceHolder</string>
          <string>android.view.ViewDebug$8</string>
          <string>android.view.ViewDebug$9</string>
          <string>java.io.BufferedWriter</string>
          <string>android.view.IWindowSession$Stub$Proxy</string>
          <string>android.view.WindowContentFrameStats</string>
          <string>android.view.ViewDebug$4</string>
          <string>android.view.ViewDebug$5</string>
          <string>android.view.ViewDebug$6</string>
          <string>android.view.View$DeclaredOnClickListener</string>
          <string>android.view.ViewDebug$7</string>
          <string>android.view.ViewDebug$1</string>
          <string>android.view.ViewRootImpl$W</string>
          <string>android.view.ViewDebug$2</string>
          <string>android.view.ViewDebug$3</string>
          <string>android.view.View$3</string>
          <string>com.android.internal.policy.PhoneFallbackEventHandler</string>
          <string>android.view.View$4</string>
          <string>android.view.View$1</string>
          <string>android.view.View$2</string>
          <string>android.view.GraphicBuffer$1</string>
          <string>android.view.InputQueue</string>
          <string>android.view.MenuInflater$MenuState</string>
          <string>android.view.Surface$HwuiContext</string>
          <string>android.view.View$BaseSavedState$1</string>
          <string>android.view.SurfaceView</string>
          <string>android.view.NotificationHeaderView$1</string>
          <string>android.view.ViewPropertyAnimator$AnimatorEventListener</string>
          <string>android.view.NotificationHeaderView$2</string>
          <string>android.view.View$9</string>
          <string>android.view.View$7</string>
          <string>android.view.View$8</string>
          <string>android.view.View$5</string>
          <string>android.view.View$6</string>
          <string>android.view.Choreographer$FrameHandler</string>
          <string>android.view.KeyCharacterMap$UnavailableException</string>
          <string>android.view.accessibility.AccessibilityManager$HighTextContrastChangeListener</string>
          <string>android.view.ViewConfiguration</string>
          <string>android.view.KeyboardShortcutGroup</string>
          <string>android.view.ViewRootImpl$SyntheticTouchNavigationHandler$1</string>
          <string>android.view.View</string>
          <string>android.view.WindowId$FocusObserver$1</string>
          <string>android.view.Choreographer$CallbackRecord</string>
          <string>android.view.ViewRootImpl$HighContrastTextManager</string>
          <string>android.view.View$OnScrollChangeListener</string>
          <string>android.view.SurfaceView$MyWindow</string>
          <string>android.view.ViewDebug$10</string>
          <string>android.view.ViewAnimationUtils</string>
          <string>android.view.KeyboardShortcutGroup$1</string>
          <string>android.view.View$TintInfo</string>
          <string>android.view.WindowContentFrameStats$1</string>
          <string>android.view.ViewHierarchyEncoder</string>
          <string>android.view.ViewGroup</string>
          <string>android.view.ViewRootImpl$QueuedInputEvent</string>
          <string>android.view.View$CheckForTap</string>
          <string>android.view.WindowId$FocusObserver$H</string>
          <string>android.view.View$ListenerInfo</string>
          <string>android.view.InputChannel</string>
          <string>android.view.InputEvent$1</string>
          <string>android.view.ViewPropertyAnimator</string>
          <string>android.view.OrientationEventListener</string>
          <string>android.view.FrameMetrics</string>
          <string>android.view.FocusFinder$SequentialFocusComparator</string>
          <string>android.view.FrameInfo</string>
          <string>android.view.FrameMetricsObserver</string>
          <string>android.view.ContextMenu</string>
          <string>android.view.ViewTreeObserver$OnWindowFocusChangeListener</string>
          <string>android.view.KeyEvent</string>
          <string>android.view.LayoutInflater$Factory</string>
          <string>android.view.SurfaceView$4</string>
          <string>android.view.FocusFinder$1</string>
          <string>android.view.SurfaceView$3</string>
          <string>android.view.ViewOutlineProvider</string>
          <string>android.view.SurfaceView$2</string>
          <string>android.view.SurfaceView$1</string>
          <string>android.view.ViewRootImpl$SyntheticTouchNavigationHandler</string>
          <string>com.android.internal.view.IDragAndDropPermissions$Stub$Proxy</string>
          <string>android.graphics.PixelFormat</string>
          <string>com.android.internal.view.animation.FallbackLUTInterpolator</string>
          <string>android.view.ViewDebug$ViewOperation</string>
          <string>android.view.BatchedInputEventReceiver</string>
          <string>android.util.SuperNotCalledException</string>
          <string>android.view.MotionEvent</string>
          <string>android.view.View$ForegroundInfo</string>
          <string>android.view.ViewDebug$CapturedViewProperty</string>
          <string>java.lang.NoClassDefFoundError</string>
          <string>android.view.WindowManagerImpl</string>
          <string>android.view.ViewDebug$HierarchyTraceType</string>
          <string>android.view.ViewStub</string>
          <string>android.view.ViewGroup$TouchTarget</string>
          <string>android.view.ViewRootImpl$AsyncInputStage</string>
          <string>android.view.View$OnKeyListener</string>
          <string>java.lang.reflect.AccessibleObject</string>
          <string>java.util.concurrent.locks.ReentrantLock</string>
          <string>android.view.AbsSavedState</string>
          <string>android.view.View$MatchLabelForPredicate</string>
          <string>java.text.Normalizer</string>
          <string>android.view.View$PerformClick</string>
          <string>android.view.KeyCharacterMap$1</string>
          <string>android.view.RenderNodeAnimator$DelayedAnimationHelper</string>
          <string>android.view.View$OnContextClickListener</string>
          <string>android.view.View$DragShadowBuilder</string>
          <string>android.view.AccessibilityIterators$WordTextSegmentIterator</string>
          <string>java.text.BreakIterator</string>
          <string>android.view.View$12</string>
          <string>android.view.View$OnFocusChangeListener</string>
          <string>android.view.Surface$CompatibleCanvas</string>
          <string>android.view.View$13</string>
          <string>android.view.InputEventConsistencyVerifier</string>
          <string>android.view.RenderNodeAnimator$1</string>
          <string>android.view.View$10</string>
          <string>android.view.View$11</string>
          <string>android.view.ContextMenu$ContextMenuInfo</string>
          <string>android.view.HandlerActionQueue$HandlerAction</string>
          <string>com.android.internal.widget.ScrollBarUtils</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.internal.telecom.ss</name>
        <entities>
          <string>com.android.internal.telecom.ICallScreeningService$Stub</string>
          <string>com.android.internal.telecom.IInCallService$Stub</string>
          <string>com.android.internal.telecom.ICallScreeningAdapter$Stub$Proxy</string>
          <string>com.android.internal.telecom.ICallScreeningAdapter</string>
          <string>com.android.internal.telecom.IInCallAdapter$Stub$Proxy</string>
          <string>com.android.internal.telecom.ICallScreeningService$Stub$Proxy</string>
          <string>com.android.internal.telecom.ICallScreeningService</string>
          <string>com.android.internal.telecom.IInCallAdapter</string>
          <string>com.android.internal.telecom.IInCallService</string>
          <string>com.android.internal.telecom.IInCallService$Stub$Proxy</string>
          <string>com.android.internal.telecom.IInCallAdapter$Stub</string>
          <string>com.android.internal.telecom.ICallScreeningAdapter$Stub</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.content.res.ss</name>
        <entities>
          <string>android.content.res.AssetFileDescriptor</string>
          <string>android.content.res.ColorStateList$ColorStateListFactory</string>
          <string>android.content.res.CompatibilityInfo</string>
          <string>android.content.res.ColorStateList$1</string>
          <string>android.content.res.ConstantState</string>
          <string>android.os.ParcelFileDescriptor$AutoCloseOutputStream</string>
          <string>android.content.res.Resources$ThemeKey</string>
          <string>android.content.res.ColorStateList</string>
          <string>android.graphics.Movie</string>
          <string>android.content.res.Configuration$1</string>
          <string>android.content.res.ObbInfo</string>
          <string>android.content.res.ResourcesImpl$ThemeImpl</string>
          <string>android.content.res.AssetFileDescriptor$AutoCloseInputStream</string>
          <string>android.icu.text.PluralRules</string>
          <string>android.content.res.AssetFileDescriptor$AutoCloseOutputStream</string>
          <string>android.content.res.ResourcesImpl</string>
          <string>android.content.res.StringBlock$Height</string>
          <string>android.content.res.ComplexColor</string>
          <string>android.content.res.DrawableCache</string>
          <string>android.content.res.StringBlock$StyleIDs</string>
          <string>android.content.res.ThemedResourceCache</string>
          <string>android.content.res.GradientColor$GradientColorFactory</string>
          <string>android.content.res.StringBlock</string>
          <string>android.content.res.ObbInfo$1</string>
          <string>android.content.res.CompatibilityInfo$1</string>
          <string>android.content.res.CompatibilityInfo$2</string>
          <string>android.content.res.ConfigurationBoundResourceCache</string>
          <string>android.content.res.GradientColor</string>
          <string>android.content.res.Configuration</string>
          <string>android.content.res.AssetFileDescriptor$1</string>
          <string>android.os.ParcelFileDescriptor$AutoCloseInputStream</string>
          <string>android.content.res.Resources</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.tv.ss</name>
        <entities>
          <string>android.media.tv.ITvRemoteProvider</string>
          <string>com.android.server.tv.TvInputHardwareManager$TvInputHardwareImpl$1</string>
          <string>android.media.tv.ITvInputServiceCallback</string>
          <string>com.android.server.tv.TvRemoteProviderWatcher</string>
          <string>android.media.tv.ITvRemoteProvider$Stub</string>
          <string>com.android.server.tv.TvInputHardwareManager$Listener</string>
          <string>com.android.server.tv.TvRemoteProviderProxy$ProviderMethods</string>
          <string>com.android.server.tv.TvRemoteProviderProxy$Connection</string>
          <string>com.android.server.tv.TvInputManagerService$2</string>
          <string>android.media.tv.ITvInputService$Stub</string>
          <string>com.android.server.tv.TvInputManagerService$1</string>
          <string>java.util.Map</string>
          <string>android.media.tv.ITvInputSession</string>
          <string>java.lang.SecurityException</string>
          <string>android.media.tv.ITvInputSession$Stub$Proxy</string>
          <string>android.media.tv.ITvInputSessionCallback</string>
          <string>com.android.server.tv.TvInputManagerService$SessionState</string>
          <string>com.android.server.tv.TvRemoteProviderWatcher$ProviderMethods</string>
          <string>com.android.server.tv.TvInputHal$Callback</string>
          <string>com.android.server.tv.TvInputHardwareManager$2</string>
          <string>com.android.server.tv.TvInputManagerService$SessionNotFoundException</string>
          <string>com.android.server.tv.TvRemoteProviderProxy</string>
          <string>java.util.Set</string>
          <string>com.android.server.tv.UinputBridge</string>
          <string>com.android.server.tv.TvInputHardwareManager</string>
          <string>com.android.server.tv.TvInputHardwareManager$1</string>
          <string>com.android.server.tv.TvInputManagerService</string>
          <string>com.android.server.tv.PersistentDataStore</string>
          <string>com.android.server.tv.TvInputManagerService$ServiceCallback</string>
          <string>android.media.tv.ITvInputSession$Stub</string>
          <string>com.android.server.tv.TvInputHardwareManager$ListenerHandler</string>
          <string>com.android.server.tv.TvRemoteService$UserProvider</string>
          <string>com.android.server.tv.TvInputManagerService$HardwareListener</string>
          <string>android.media.tv.TvContract$Channels</string>
          <string>com.android.server.tv.TvInputManagerService$ServiceState</string>
          <string>com.android.server.tv.TvInputManagerService$WatchLogHandler</string>
          <string>com.android.server.tv.TvInputManagerService$TvInputState</string>
          <string>com.android.server.tv.TvInputManagerService$SessionCallback</string>
          <string>android.media.tv.ITvInputServiceCallback$Stub</string>
          <string>android.media.tv.ITvRemoteProvider$Stub$Proxy</string>
          <string>android.media.tv.ITvRemoteServiceInput$Stub</string>
          <string>com.android.server.tv.TvInputHardwareManager$HdmiHotplugEventListener</string>
          <string>com.android.server.tv.TvInputHal</string>
          <string>android.media.tv.TvInputInfo$Builder</string>
          <string>com.android.server.tv.TvRemoteProviderProxy$Connection$1</string>
          <string>com.android.server.tv.TvInputHardwareManager$Connection</string>
          <string>android.media.tv.TvContract$WatchedPrograms</string>
          <string>com.android.server.tv.TvInputHardwareManager$HdmiDeviceEventListener</string>
          <string>com.android.server.tv.TvRemoteProviderProxy$RemoteServiceInputProvider</string>
          <string>android.media.tv.ITvRemoteServiceInput$Stub$Proxy</string>
          <string>com.android.server.tv.TvRemoteService$UserHandler</string>
          <string>android.media.tv.ITvRemoteServiceInput</string>
          <string>android.media.tv.ITvInputServiceCallback$Stub$Proxy</string>
          <string>com.android.server.tv.PersistentDataStore$1</string>
          <string>com.android.server.tv.TvRemoteProviderProxy$Connection$2</string>
          <string>android.content.ContentProviderOperation$Builder</string>
          <string>android.media.tv.TvContract$Channels$Logo</string>
          <string>android.media.tv.ITvInputHardwareCallback</string>
          <string>com.android.server.tv.TvInputHardwareManager$TvInputHardwareImpl</string>
          <string>android.media.tv.ITvInputSessionCallback$Stub</string>
          <string>com.android.server.tv.TvInputHardwareManager$HdmiSystemAudioModeChangeListener</string>
          <string>android.media.tv.ITvInputSessionCallback$Stub$Proxy</string>
          <string>com.android.server.tv.TvInputManagerService$UserState</string>
          <string>com.android.server.tv.TvInputManagerService$InputServiceConnection</string>
          <string>com.android.server.tv.TvInputManagerService$ClientState</string>
          <string>com.android.server.tv.TvRemoteProviderWatcher$1</string>
          <string>android.media.tv.ITvInputService</string>
          <string>com.android.server.tv.TvRemoteService</string>
          <string>com.android.server.tv.TvRemoteProviderWatcher$2</string>
          <string>android.media.tv.ITvInputManagerCallback</string>
          <string>android.media.tv.ITvInputService$Stub$Proxy</string>
          <string>com.android.server.tv.TvInputManagerService$BinderService</string>
          <string>android.media.tv.ITvInputClient</string>
          <string>com.android.server.tv.TvInputManagerService$BinderService$1</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.internal.telephony.ss</name>
        <entities>
          <string>android.content.AsyncQueryHandler</string>
          <string>com.android.internal.telephony.GsmAlphabet$LanguagePairCount</string>
          <string>com.android.internal.telephony.DctConstants</string>
          <string>com.android.internal.telephony.CellNetworkScanResult$1</string>
          <string>com.android.internal.telephony.CallerInfoAsyncQuery$QueryPoolException</string>
          <string>com.android.i18n.phonenumbers.PhoneNumberUtil</string>
          <string>android.content.AsyncQueryHandler$WorkerArgs</string>
          <string>com.android.internal.telephony.DctConstants$Activity</string>
          <string>com.android.internal.telephony.DcParamObject</string>
          <string>com.android.i18n.phonenumbers.NumberParseException</string>
          <string>com.android.internal.telephony.PhoneConstants</string>
          <string>com.android.internal.telephony.GsmAlphabet</string>
          <string>com.android.internal.telephony.DctConstants$State</string>
          <string>com.android.internal.telephony.ISms</string>
          <string>com.android.i18n.phonenumbers.geocoding.PhoneNumberOfflineGeocoder</string>
          <string>com.android.internal.telephony.IWapPushManager$Stub$Proxy</string>
          <string>com.android.internal.telephony.CallerInfoAsyncQuery$CookieWrapper</string>
          <string>com.android.internal.telephony.CallerInfoAsyncQuery$CallerInfoAsyncQueryHandler$CallerInfoWorkerHandler</string>
          <string>com.android.internal.telephony.GsmAlphabet$TextEncodingDetails</string>
          <string>com.android.internal.telephony.CellNetworkScanResult</string>
          <string>com.android.internal.telephony.IccCardConstants$State</string>
          <string>com.android.internal.telephony.PhoneConstants$CardUnavailableReason</string>
          <string>com.android.internal.telephony.CallerInfoAsyncQuery$CallerInfoAsyncQueryHandler</string>
          <string>com.android.i18n.phonenumbers.Phonenumber$PhoneNumber</string>
          <string>com.android.internal.telephony.OperatorInfo$1</string>
          <string>com.android.internal.telephony.SmsRawData</string>
          <string>com.android.internal.telephony.CallInfo</string>
          <string>com.android.internal.telephony.IWapPushManager$Stub</string>
          <string>com.android.internal.telephony.SmsConstants$MessageClass</string>
          <string>android.content.AsyncQueryHandler$WorkerHandler</string>
          <string>com.android.internal.telephony.ISms$Stub$Proxy</string>
          <string>com.android.internal.telephony.DcParamObject$1</string>
          <string>com.android.internal.telephony.CallerInfoAsyncQuery</string>
          <string>com.android.internal.telephony.CallerInfo</string>
          <string>com.android.internal.telephony.ISms$Stub</string>
          <string>java.io.Serializable</string>
          <string>com.android.internal.telephony.IccCardConstants</string>
          <string>com.android.internal.telephony.CallInfo$1</string>
          <string>com.android.internal.telephony.EncodeException</string>
          <string>com.android.internal.telephony.SmsConstants</string>
          <string>com.android.internal.telephony.SmsRawData$1</string>
          <string>com.android.internal.telephony.CallerInfoAsyncQuery$OnQueryCompleteListener</string>
          <string>com.android.internal.telephony.IWapPushManager</string>
          <string>com.android.internal.telephony.OperatorInfo$State</string>
          <string>com.android.internal.telephony.OperatorInfo</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.internal.inputmethod.ss</name>
        <entities>
          <string>com.android.internal.inputmethod.InputMethodSubtypeSwitchingController$StaticRotationList</string>
          <string>com.android.internal.inputmethod.InputMethodSubtypeSwitchingController$ControllerImpl</string>
          <string>com.android.internal.inputmethod.InputMethodSubtypeSwitchingController$InputMethodAndSubtypeList</string>
          <string>com.android.internal.inputmethod.LocaleUtils$LocaleExtractor</string>
          <string>com.android.internal.inputmethod.InputMethodSubtypeSwitchingController</string>
          <string>com.android.internal.inputmethod.InputMethodSubtypeSwitchingController$ImeSubtypeListItem</string>
          <string>com.android.internal.inputmethod.InputMethodUtils</string>
          <string>com.android.internal.inputmethod.InputMethodUtils$InputMethodListBuilder</string>
          <string>com.android.internal.inputmethod.InputMethodUtils$1</string>
          <string>com.android.internal.inputmethod.LocaleUtils$ScoreEntry</string>
          <string>com.android.internal.inputmethod.LocaleUtils</string>
          <string>com.android.internal.inputmethod.InputMethodSubtypeSwitchingController$InputMethodAndSubtypeList$1</string>
          <string>android.util.Printer</string>
          <string>com.android.internal.inputmethod.InputMethodSubtypeSwitchingController$DynamicRotationList</string>
          <string>java.util.LinkedHashSet</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.internal.view.menu.ss</name>
        <entities>
          <string>com.android.internal.view.menu.CascadingMenuPopup</string>
          <string>com.android.internal.view.menu.IconMenuPresenter$SubMenuPresenterCallback</string>
          <string>com.android.internal.view.menu.MenuPopupHelper</string>
          <string>com.android.internal.view.menu.MenuHelper</string>
          <string>com.android.internal.view.menu.IconMenuView$1</string>
          <string>com.android.internal.view.menu.MenuItemImpl</string>
          <string>com.android.internal.view.menu.IconMenuView</string>
          <string>com.android.internal.view.menu.IconMenuView$SavedState</string>
          <string>android.widget.MenuItemHoverListener</string>
          <string>com.android.internal.view.menu.MenuItemImpl$1</string>
          <string>com.android.internal.view.menu.StandardMenuPopup</string>
          <string>com.android.internal.view.menu.IconMenuView$SavedState$1</string>
          <string>android.widget.PopupWindow$OnDismissListener</string>
          <string>android.view.ActionProvider$VisibilityListener</string>
          <string>com.android.internal.view.menu.MenuPopupHelper$1</string>
          <string>com.android.internal.view.menu.IconMenuView$LayoutParams</string>
          <string>com.android.internal.view.menu.ListMenuPresenter$MenuAdapter</string>
          <string>com.android.internal.view.menu.ShowableListMenu</string>
          <string>com.android.internal.view.menu.CascadingMenuPopup$3</string>
          <string>com.android.internal.view.menu.ExpandedMenuView</string>
          <string>com.android.internal.view.menu.CascadingMenuPopup$1</string>
          <string>com.android.internal.view.menu.CascadingMenuPopup$2</string>
          <string>com.android.internal.view.menu.IconMenuPresenter</string>
          <string>com.android.internal.view.menu.ActionMenuItemView</string>
          <string>com.android.internal.view.menu.CascadingMenuPopup$CascadingMenuInfo</string>
          <string>com.android.internal.view.menu.IconMenuItemView</string>
          <string>android.widget.ActionMenuView$ActionMenuChildView</string>
          <string>com.android.internal.view.menu.ActionMenuItemView$PopupCallback</string>
          <string>com.android.internal.view.menu.CascadingMenuPopup$3$1</string>
          <string>com.android.internal.view.menu.StandardMenuPopup$2</string>
          <string>com.android.internal.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener</string>
          <string>com.android.internal.view.menu.StandardMenuPopup$1</string>
          <string>com.android.internal.view.menu.ListMenuPresenter</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.internal.app.ss</name>
        <entities>
          <string>android.media.MediaRouter$Static$Client</string>
          <string>com.android.internal.app.MediaRouteControllerDialogFragment</string>
          <string>com.android.internal.app.AlertActivity</string>
          <string>com.android.internal.app.AlertController$ButtonHandler</string>
          <string>com.android.internal.app.NavItemSelectedListener</string>
          <string>com.android.internal.app.AlertController</string>
          <string>android.service.chooser.IChooserTargetResult$Stub</string>
          <string>com.android.internal.app.MediaRouteControllerDialog$MediaRouterCallback</string>
          <string>com.android.internal.app.ResolverTargetActionsDialogFragment</string>
          <string>android.media.MediaRouter$RouteGroup</string>
          <string>com.android.internal.app.ResolverActivity$PickTargetOptionRequest</string>
          <string>com.android.internal.app.ResolverComparator</string>
          <string>com.android.internal.app.ChooserActivity</string>
          <string>com.android.internal.app.DumpHeapActivity</string>
          <string>com.android.internal.app.NetInitiatedActivity</string>
          <string>com.android.internal.app.ChooserActivity$ChooserRowAdapter</string>
          <string>com.android.internal.app.ResolverActivity$ItemClickListener</string>
          <string>com.android.internal.app.ChooserActivity$RowScale</string>
          <string>com.android.internal.app.LocalePicker$LocaleSelectionListener</string>
          <string>com.android.internal.app.MediaRouteChooserDialog</string>
          <string>com.android.internal.app.MediaRouteChooserDialog$MediaRouterCallback</string>
          <string>com.android.internal.app.ResolverActivity$DisplayResolveInfo</string>
          <string>com.android.internal.app.ToolbarActionBar$ActionMenuPresenterCallback</string>
          <string>com.android.internal.app.ChooserActivity$BaseChooserTargetComparator</string>
          <string>android.media.MediaRouter$RouteCategory</string>
          <string>android.view.View$OnClickListener</string>
          <string>android.media.MediaRouter$VolumeChangeReceiver</string>
          <string>com.android.internal.app.WindowDecorActionBar$TabImpl</string>
          <string>android.app.FragmentTransaction</string>
          <string>com.android.internal.app.PlatLogoActivity$2</string>
          <string>com.android.internal.app.PlatLogoActivity$1</string>
          <string>com.android.internal.app.ToolbarActionBar$MenuBuilderCallback</string>
          <string>com.android.internal.app.AlertController$1</string>
          <string>com.android.internal.app.ResolverActivity$TargetInfo</string>
          <string>com.android.internal.app.LocaleHelper$LocaleInfoComparator</string>
          <string>android.media.MediaRouter$RouteInfo$1$1</string>
          <string>com.android.internal.app.MediaRouteControllerDialog$1</string>
          <string>com.android.internal.app.MediaRouteControllerDialog$2</string>
          <string>android.service.chooser.IChooserTargetResult$Stub$Proxy</string>
          <string>com.android.internal.app.NetInitiatedActivity$2</string>
          <string>com.android.internal.app.NetInitiatedActivity$1</string>
          <string>android.app.ActionBar$OnMenuVisibilityListener</string>
          <string>android.app.DialogFragment</string>
          <string>com.android.internal.app.MediaRouteControllerDialog$1$1</string>
          <string>com.android.internal.app.EphemeralResolverService$ServiceHandler</string>
          <string>com.android.internal.app.ResolverActivity$ResolvedComponentInfo</string>
          <string>com.android.internal.app.ResolverActivity$ResolveListAdapter</string>
          <string>android.app.ActionBar$OnNavigationListener</string>
          <string>com.android.internal.app.LocalePicker</string>
          <string>com.android.internal.app.ToolbarActionBar$1</string>
          <string>com.android.internal.app.ToolbarActionBar$2</string>
          <string>android.view.Window$Callback</string>
          <string>java.util.IllformedLocaleException</string>
          <string>com.android.internal.app.LocaleStore</string>
          <string>android.content.SharedPreferences</string>
          <string>android.media.MediaRouter$RouteInfo$1</string>
          <string>com.android.internal.app.WindowDecorActionBar$2</string>
          <string>android.view.WindowCallbackWrapper</string>
          <string>com.android.internal.app.WindowDecorActionBar$3</string>
          <string>com.android.internal.app.ChooserActivity$RefinementResultReceiver</string>
          <string>android.service.chooser.IChooserTargetService</string>
          <string>com.android.internal.app.WindowDecorActionBar$1</string>
          <string>com.android.internal.app.LocaleStore$LocaleInfo</string>
          <string>com.android.internal.app.MediaRouteChooserDialog$RouteComparator</string>
          <string>com.android.internal.app.ResolverActivity$LoadIconTask</string>
          <string>com.android.internal.app.ToolbarActionBar</string>
          <string>com.android.internal.app.ChooserActivity$ChooserTargetInfo</string>
          <string>com.android.internal.app.ChooserActivity$RowViewHolder</string>
          <string>com.android.internal.app.ChooserActivity$ChooserListAdapter</string>
          <string>android.service.chooser.IChooserTargetService$Stub$Proxy</string>
          <string>com.android.internal.app.ResolverActivity$ActionTitle</string>
          <string>com.android.internal.app.ChooserActivity$ChooserTargetServiceConnection$1</string>
          <string>android.widget.Button</string>
          <string>com.android.internal.app.PlatLogoActivity</string>
          <string>android.media.MediaRouter$Static$Client$1</string>
          <string>com.android.internal.app.MediaRouteChooserDialogFragment</string>
          <string>android.database.DataSetObserver</string>
          <string>android.icu.text.ListFormatter</string>
          <string>com.android.internal.widget.ResolverDrawerLayout$OnDismissedListener</string>
          <string>com.android.internal.widget.DecorToolbar</string>
          <string>android.service.chooser.IChooserTargetResult</string>
          <string>com.android.internal.app.ResolverActivity$ViewHolder</string>
          <string>com.android.internal.app.ChooserActivity$RowScale$1</string>
          <string>com.android.internal.app.ChooserActivity$ChooserRowAdapter$1</string>
          <string>com.android.internal.app.LocaleHelper</string>
          <string>com.android.internal.app.ChooserActivity$ChooserRowAdapter$3</string>
          <string>com.android.internal.app.MediaRouteControllerDialog</string>
          <string>com.android.internal.app.ChooserActivity$ChooserRowAdapter$2</string>
          <string>android.media.MediaRouter$RouteInfo</string>
          <string>com.android.internal.app.ResolverActivity$LoadAdapterIconTask</string>
          <string>android.media.MediaRouter$Static</string>
          <string>android.media.MediaRouter$Static$1</string>
          <string>com.android.internal.app.HeavyWeightSwitcherActivity</string>
          <string>com.android.internal.app.WindowDecorActionBar</string>
          <string>com.android.internal.app.DumpHeapActivity$2</string>
          <string>com.android.internal.app.DumpHeapActivity$1</string>
          <string>android.widget.Filterable</string>
          <string>com.android.internal.app.LocalePicker$1</string>
          <string>com.android.internal.app.EphemeralResolverService$1</string>
          <string>android.content.SharedPreferences$Editor</string>
          <string>android.service.chooser.IChooserTargetService$Stub</string>
          <string>com.android.internal.app.ResolverActivity$3</string>
          <string>libcore.icu.ICU</string>
          <string>com.android.internal.app.ChooserActivity$ServiceResultInfo</string>
          <string>com.android.internal.app.ResolverActivity$2</string>
          <string>com.android.internal.app.ResolverActivity$1</string>
          <string>com.android.internal.app.WindowDecorActionBar$ActionModeImpl</string>
          <string>com.android.internal.app.LocalePickerWithRegion$LocaleSelectedListener</string>
          <string>com.android.internal.app.ToolbarActionBar$ToolbarCallbackWrapper</string>
          <string>com.android.internal.app.MediaRouteChooserDialog$RouteAdapter</string>
          <string>com.android.internal.app.SuggestedLocaleAdapter$FilterByNativeAndUiNames</string>
          <string>android.app.ActionBar$TabListener</string>
          <string>com.android.internal.app.LocalePickerWithRegion</string>
          <string>com.android.internal.app.PlatLogoActivity$1$1$1</string>
          <string>com.android.internal.app.ChooserActivity$ChooserTargetServiceConnection</string>
          <string>com.android.internal.app.MediaRouteDialogPresenter</string>
          <string>android.media.MediaRouter$Static$1$1</string>
          <string>com.android.internal.app.ShutdownActivity$1</string>
          <string>android.inputmethodservice.ExtractButton</string>
          <string>com.android.internal.app.ShutdownActivity</string>
          <string>com.android.internal.app.ChooserActivity$OffsetDataSetObserver</string>
          <string>com.android.internal.app.PlatLogoActivity$1$1</string>
          <string>android.media.MediaRouter$WifiDisplayStatusChangedReceiver</string>
          <string>com.android.internal.app.ResolverComparator$ScoredTarget</string>
          <string>com.android.internal.app.HeavyWeightSwitcherActivity$2</string>
          <string>com.android.internal.app.SuggestedLocaleAdapter</string>
          <string>com.android.internal.app.ResolverActivity$LoadIconIntoViewTask</string>
          <string>com.android.internal.app.HeavyWeightSwitcherActivity$1</string>
          <string>com.android.internal.app.EphemeralResolverService</string>
          <string>com.android.internal.app.LocalePicker$LocaleInfo</string>
          <string>com.android.internal.app.HeavyWeightSwitcherActivity$3</string>
          <string>com.android.internal.app.ResolverActivity</string>
          <string>com.android.internal.app.ChooserActivity$1</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.nfc.ss</name>
        <entities>
          <string>android.app.Application$ActivityLifecycleCallbacks</string>
          <string>android.nfc.Tag</string>
          <string>android.nfc.NdefMessage$1</string>
          <string>android.nfc.tech.Ndef</string>
          <string>android.nfc.TagLostException</string>
          <string>android.nfc.tech.NfcBarcode</string>
          <string>android.nfc.tech.MifareUltralight</string>
          <string>android.nfc.INfcTag$Stub</string>
          <string>android.nfc.BeamShareData</string>
          <string>android.nfc.tech.NfcV</string>
          <string>android.nfc.tech.NdefFormatable</string>
          <string>android.nfc.NfcActivityManager$NfcActivityState</string>
          <string>android.nfc.NfcAdapter$OnNdefPushCompleteCallback</string>
          <string>android.nfc.NdefRecord$1</string>
          <string>android.nfc.INfcTag</string>
          <string>android.nfc.TechListParcel</string>
          <string>android.nfc.NfcEvent</string>
          <string>android.nfc.NfcAdapter$NfcUnlockHandler</string>
          <string>android.nfc.tech.IsoDep</string>
          <string>android.nfc.NfcActivityManager$NfcApplicationState</string>
          <string>android.nfc.FormatException</string>
          <string>android.nfc.NdefRecord</string>
          <string>android.nfc.NdefMessage</string>
          <string>android.nfc.NfcAdapter$2$1</string>
          <string>android.nfc.NfcAdapter$CreateNdefMessageCallback</string>
          <string>android.nfc.TransceiveResult</string>
          <string>android.nfc.tech.NfcA</string>
          <string>android.nfc.tech.NfcB</string>
          <string>android.nfc.TechListParcel$1</string>
          <string>android.nfc.TransceiveResult$1</string>
          <string>android.nfc.tech.MifareClassic</string>
          <string>android.nfc.IAppCallback$Stub$Proxy</string>
          <string>android.nfc.Tag$1</string>
          <string>android.nfc.NfcAdapter$ReaderCallback</string>
          <string>android.app.OnActivityPausedListener</string>
          <string>android.nfc.NfcAdapter$CreateBeamUrisCallback</string>
          <string>android.nfc.BeamShareData$1</string>
          <string>android.nfc.NfcAdapter$OnTagRemovedListener</string>
          <string>android.nfc.NfcAdapter$2</string>
          <string>android.nfc.NfcAdapter$3</string>
          <string>android.nfc.NfcAdapter$1</string>
          <string>android.nfc.ApduList</string>
          <string>android.nfc.NfcActivityManager</string>
          <string>android.nfc.ApduList$1</string>
          <string>android.nfc.NfcAdapter</string>
          <string>android.nfc.INfcTag$Stub$Proxy</string>
          <string>android.nfc.tech.NfcF</string>
          <string>android.nfc.IAppCallback$Stub</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.firewall.ss</name>
        <entities>
          <string>com.android.server.firewall.StringFilter</string>
          <string>com.android.server.firewall.StringFilter$ValueProvider</string>
          <string>com.android.server.firewall.IntentFirewall$FirewallHandler</string>
          <string>com.android.server.firewall.IntentFirewall$RuleObserver</string>
          <string>com.android.server.firewall.StringFilter$ContainsFilter</string>
          <string>com.android.server.firewall.NotFilter$1</string>
          <string>com.android.server.firewall.SenderFilter$5</string>
          <string>com.android.server.firewall.SenderFilter$4</string>
          <string>com.android.server.firewall.SenderFilter$3</string>
          <string>com.android.server.firewall.StringFilter$EqualsFilter</string>
          <string>com.android.server.firewall.NotFilter</string>
          <string>com.android.server.firewall.SenderFilter</string>
          <string>com.android.server.firewall.SenderFilter$2</string>
          <string>com.android.server.firewall.SenderFilter$1</string>
          <string>com.android.server.firewall.SenderPackageFilter$1</string>
          <string>com.android.server.firewall.StringFilter$RegexFilter</string>
          <string>com.android.server.firewall.IntentFirewall$FirewallIntentResolver</string>
          <string>com.android.server.firewall.Filter</string>
          <string>com.android.server.firewall.StringFilter$PatternStringFilter</string>
          <string>com.android.server.firewall.AndFilter$1</string>
          <string>com.android.server.firewall.FilterList</string>
          <string>com.android.server.firewall.CategoryFilter$1</string>
          <string>com.android.server.firewall.PortFilter$1</string>
          <string>com.android.server.firewall.SenderPackageFilter</string>
          <string>com.android.server.firewall.CategoryFilter</string>
          <string>com.android.server.firewall.FilterFactory</string>
          <string>com.android.server.firewall.OrFilter</string>
          <string>com.android.server.firewall.StringFilter$StartsWithFilter</string>
          <string>com.android.server.firewall.StringFilter$IsNullFilter</string>
          <string>com.android.server.firewall.IntentFirewall$FirewallIntentFilter</string>
          <string>com.android.server.firewall.SenderPermissionFilter</string>
          <string>com.android.server.firewall.PortFilter</string>
          <string>com.android.server.firewall.StringFilter$3</string>
          <string>com.android.server.firewall.StringFilter$2</string>
          <string>com.android.server.firewall.StringFilter$1</string>
          <string>com.android.server.firewall.AndFilter</string>
          <string>com.android.server.firewall.OrFilter$1</string>
          <string>com.android.server.firewall.IntentFirewall$Rule</string>
          <string>com.android.server.firewall.StringFilter$10</string>
          <string>com.android.server.firewall.SenderPermissionFilter$1</string>
          <string>com.android.server.firewall.StringFilter$9</string>
          <string>com.android.server.firewall.StringFilter$8</string>
          <string>com.android.server.firewall.StringFilter$7</string>
          <string>com.android.server.firewall.IntentFirewall</string>
          <string>com.android.server.firewall.StringFilter$6</string>
          <string>com.android.server.firewall.StringFilter$5</string>
          <string>com.android.server.firewall.StringFilter$4</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.net.metrics.ss</name>
        <entities>
          <string>android.net.metrics.ValidationProbeEvent</string>
          <string>android.net.metrics.DhcpClientEvent</string>
          <string>android.net.metrics.DnsEvent</string>
          <string>android.net.metrics.IDnsEventListener$Stub$Proxy</string>
          <string>android.net.ConnectivityMetricsLogger</string>
          <string>android.net.metrics.DhcpClientEvent$1</string>
          <string>android.net.metrics.IpConnectivityEvent</string>
          <string>android.net.metrics.NetworkEvent</string>
          <string>android.net.metrics.DhcpErrorEvent$1</string>
          <string>android.net.metrics.DhcpErrorEvent</string>
          <string>android.net.metrics.IpManagerEvent</string>
          <string>android.net.metrics.NetworkEvent$Decoder</string>
          <string>android.net.metrics.IDnsEventListener</string>
          <string>android.net.metrics.IpManagerEvent$1</string>
          <string>android.net.metrics.IpReachabilityEvent$Decoder</string>
          <string>android.net.metrics.ValidationProbeEvent$Decoder</string>
          <string>android.net.metrics.NetworkEvent$1</string>
          <string>android.net.metrics.ValidationProbeEvent$1</string>
          <string>android.net.IConnectivityMetricsLogger$Stub</string>
          <string>android.net.metrics.DefaultNetworkEvent</string>
          <string>android.net.IConnectivityMetricsLogger</string>
          <string>android.net.metrics.IpReachabilityEvent</string>
          <string>android.net.metrics.IpManagerEvent$Decoder</string>
          <string>android.net.metrics.DnsEvent$1</string>
          <string>android.net.metrics.IpReachabilityEvent$1</string>
          <string>android.net.metrics.DefaultNetworkEvent$1</string>
          <string>android.net.IConnectivityMetricsLogger$Stub$Proxy</string>
          <string>android.net.metrics.IDnsEventListener$Stub</string>
          <string>android.net.metrics.DhcpErrorEvent$Decoder</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.hdmi.ss</name>
        <entities>
          <string>com.android.server.hdmi.HdmiCecController</string>
          <string>com.android.server.hdmi.HdmiCecLocalDevicePlayback$ActiveWakeLock</string>
          <string>com.android.server.hdmi.HdmiControlService$BinderService$8</string>
          <string>com.android.server.hdmi.HdmiControlService$BinderService$9</string>
          <string>com.android.server.hdmi.HdmiAnnotations$ServiceThreadOnly</string>
          <string>com.android.server.hdmi.HdmiControlService$BinderService$6</string>
          <string>com.android.server.hdmi.HdmiControlService$BinderService$7</string>
          <string>com.android.server.hdmi.HdmiCecController$AllocateAddressCallback</string>
          <string>com.android.server.hdmi.RequestArcTerminationAction</string>
          <string>com.android.server.hdmi.HdmiControlService$SendMessageCallback</string>
          <string>com.android.server.hdmi.HdmiControlService$DeviceEventListenerRecord</string>
          <string>com.android.server.hdmi.HdmiCecController$7$1</string>
          <string>com.android.server.hdmi.HdmiControlService$BinderService$10</string>
          <string>android.hardware.hdmi.IHdmiHotplugEventListener</string>
          <string>com.android.server.hdmi.HdmiControlService$BinderService$12</string>
          <string>com.android.server.hdmi.HdmiControlService$BinderService$11</string>
          <string>com.android.server.hdmi.HdmiCecMessageValidator$SystemAudioModeRequestValidator</string>
          <string>com.android.server.hdmi.NewDeviceAction</string>
          <string>com.android.server.hdmi.HdmiCecLocalDevicePlayback</string>
          <string>com.android.server.hdmi.TimerRecordingAction</string>
          <string>com.android.server.hdmi.HdmiControlService$BinderService$14</string>
          <string>com.android.server.hdmi.HdmiControlService$BinderService$13</string>
          <string>com.android.server.hdmi.RequestArcInitiationAction</string>
          <string>com.android.server.hdmi.HdmiControlService$BinderService$16</string>
          <string>com.android.server.hdmi.PowerStatusMonitorAction</string>
          <string>com.android.server.hdmi.HdmiControlService$BinderService$15</string>
          <string>android.hardware.hdmi.IHdmiRecordListener$Stub</string>
          <string>com.android.server.hdmi.HdmiControlService$HdmiMhlVendorCommandListenerRecord</string>
          <string>com.android.server.hdmi.SelectRequestBuffer$DeviceSelectRequest</string>
          <string>android.hardware.hdmi.IHdmiControlCallback$Stub</string>
          <string>com.android.server.hdmi.SelectRequestBuffer</string>
          <string>com.android.server.hdmi.SystemAudioAutoInitiationAction$1</string>
          <string>android.hardware.hdmi.IHdmiMhlVendorCommandListener$Stub</string>
          <string>com.android.server.hdmi.UnmodifiableSparseIntArray</string>
          <string>com.android.server.hdmi.HdmiControlService$SystemAudioModeChangeListenerRecord</string>
          <string>com.android.server.hdmi.HdmiControlService$HdmiControlBroadcastReceiver</string>
          <string>com.android.server.hdmi.HdmiCecLocalDeviceTv$1</string>
          <string>com.android.server.hdmi.HdmiCecLocalDeviceTv$2</string>
          <string>com.android.server.hdmi.HdmiCecLocalDevice</string>
          <string>com.android.server.hdmi.HdmiCecMessageValidator$FixedLengthValidator</string>
          <string>com.android.server.hdmi.DeviceDiscoveryAction$DeviceDiscoveryCallback</string>
          <string>com.android.server.hdmi.HdmiControlService$CecMessageBuffer</string>
          <string>android.hardware.hdmi.IHdmiControlCallback</string>
          <string>com.android.server.hdmi.SendKeyAction</string>
          <string>com.android.server.hdmi.SystemAudioActionFromAvr</string>
          <string>com.android.server.hdmi.RequestArcTerminationAction$1</string>
          <string>com.android.server.hdmi.DeviceDiscoveryAction$1</string>
          <string>com.android.server.hdmi.HdmiCecFeatureAction</string>
          <string>com.android.server.hdmi.HdmiControlService$VendorCommandListenerRecord</string>
          <string>com.android.server.hdmi.DeviceSelectAction</string>
          <string>com.android.server.hdmi.HdmiControlService$HdmiRecordListenerRecord</string>
          <string>com.android.server.hdmi.HdmiMhlControllerStub</string>
          <string>com.android.server.hdmi.HdmiCecMessageValidator$VariableLengthValidator</string>
          <string>com.android.server.hdmi.SystemAudioAction$2</string>
          <string>com.android.server.hdmi.OneTouchRecordAction</string>
          <string>com.android.server.hdmi.SystemAudioAction$1</string>
          <string>com.android.server.hdmi.SetArcTransmissionStateAction</string>
          <string>com.android.server.hdmi.SelectRequestBuffer$1</string>
          <string>com.android.server.hdmi.RequestArcAction</string>
          <string>com.android.server.hdmi.VolumeControlAction</string>
          <string>com.android.server.hdmi.DeviceSelectAction$1</string>
          <string>com.android.server.hdmi.HdmiUtils</string>
          <string>com.android.server.hdmi.SystemAudioStatusAction</string>
          <string>com.android.server.hdmi.HdmiCecMessageValidator$ParameterValidator</string>
          <string>com.android.server.hdmi.DevicePowerStatusAction</string>
          <string>com.android.server.hdmi.HdmiControlService$6</string>
          <string>android.hardware.hdmi.IHdmiVendorCommandListener</string>
          <string>com.android.server.hdmi.HdmiControlService$5</string>
          <string>android.hardware.hdmi.IHdmiControlCallback$Stub$Proxy</string>
          <string>com.android.server.hdmi.HdmiCecStandbyModeHandler$Aborter</string>
          <string>android.hardware.hdmi.IHdmiMhlVendorCommandListener$Stub$Proxy</string>
          <string>com.android.server.hdmi.HdmiControlService$4</string>
          <string>com.android.server.hdmi.HdmiCecMessageValidator$ReportPhysicalAddressValidator</string>
          <string>com.android.server.hdmi.HdmiControlService$3</string>
          <string>com.android.server.hdmi.HdmiCecLocalDevicePlayback$SystemWakeLock</string>
          <string>com.android.server.hdmi.HdmiControlService$2</string>
          <string>com.android.server.hdmi.HdmiControlService$1</string>
          <string>com.android.server.hdmi.HdmiControlService$SettingsObserver</string>
          <string>android.os.IBinder$DeathRecipient</string>
          <string>com.android.server.hdmi.HdmiControlService</string>
          <string>com.android.server.hdmi.HdmiControlService$DevicePollingCallback</string>
          <string>com.android.server.hdmi.HdmiCecMessageBuilder</string>
          <string>com.android.server.hdmi.HdmiControlService$InputChangeListenerRecord</string>
          <string>com.android.server.hdmi.HdmiCecLocalDevice$PendingActionClearedCallback</string>
          <string>java.lang.Runnable</string>
          <string>com.android.server.hdmi.HdmiAnnotations$IoThreadOnly</string>
          <string>com.android.server.hdmi.DelayedMessageBuffer</string>
          <string>android.hardware.hdmi.IHdmiRecordListener</string>
          <string>com.android.server.hdmi.HdmiCecLocalDevicePlayback$1</string>
          <string>com.android.server.hdmi.HdmiControlService$CecMessageBuffer$1</string>
          <string>com.android.server.hdmi.SystemAudioAutoInitiationAction</string>
          <string>com.android.server.hdmi.HdmiCecMessageCache</string>
          <string>com.android.server.hdmi.HdmiCecController$5$1</string>
          <string>com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource</string>
          <string>com.android.server.hdmi.HotplugDetectionAction</string>
          <string>com.android.server.hdmi.UnmodifiableSparseArray</string>
          <string>android.hardware.hdmi.IHdmiRecordListener$Stub$Proxy</string>
          <string>com.android.server.hdmi.HdmiAnnotations</string>
          <string>com.android.server.hdmi.HdmiMhlLocalDeviceStub</string>
          <string>com.android.server.hdmi.OneTouchRecordAction$1</string>
          <string>com.android.server.hdmi.RoutingControlAction$1</string>
          <string>com.android.server.hdmi.SystemAudioActionFromTv</string>
          <string>com.android.server.hdmi.HdmiCecMessage</string>
          <string>com.android.server.hdmi.HdmiCecStandbyModeHandler$CecMessageHandler</string>
          <string>com.android.server.hdmi.HdmiCecStandbyModeHandler$AutoOnHandler</string>
          <string>com.android.server.hdmi.HdmiCecController$2</string>
          <string>android.hardware.hdmi.IHdmiMhlVendorCommandListener</string>
          <string>com.android.server.hdmi.HdmiCecController$3</string>
          <string>com.android.server.hdmi.HdmiCecController$4</string>
          <string>com.android.server.hdmi.HdmiCecLocalDeviceTv$3</string>
          <string>com.android.server.hdmi.HdmiCecController$5</string>
          <string>com.android.server.hdmi.OneTouchPlayAction</string>
          <string>com.android.server.hdmi.HdmiCecFeatureAction$ActionTimerHandler</string>
          <string>java.io.UnsupportedEncodingException</string>
          <string>com.android.server.hdmi.HdmiCecStandbyModeHandler</string>
          <string>com.android.server.hdmi.HdmiCecStandbyModeHandler$Bystander</string>
          <string>com.android.server.hdmi.SetArcTransmissionStateAction$1</string>
          <string>com.android.server.hdmi.HdmiCecController$1</string>
          <string>com.android.server.hdmi.TimerRecordingAction$1</string>
          <string>com.android.server.hdmi.HdmiCecMessageValidator$PhysicalAddressValidator</string>
          <string>com.android.server.hdmi.HdmiCecController$6</string>
          <string>com.android.server.hdmi.HdmiCecController$7</string>
          <string>com.android.server.hdmi.HdmiCecLocalDevice$1</string>
          <string>com.android.server.hdmi.HdmiControlService$HotplugEventListenerRecord</string>
          <string>com.android.server.hdmi.HdmiCecLocalDevice$2</string>
          <string>com.android.server.hdmi.HdmiCecStandbyModeHandler$Bypasser</string>
          <string>com.android.server.hdmi.HdmiCecMessageValidator$ValidationInfo</string>
          <string>com.android.server.hdmi.DeviceDiscoveryAction</string>
          <string>com.android.server.hdmi.RoutingControlAction</string>
          <string>com.android.server.hdmi.SystemAudioAction</string>
          <string>com.android.server.hdmi.HdmiCecStandbyModeHandler$UserControlProcessedHandler</string>
          <string>com.android.server.hdmi.SelectRequestBuffer$PortSelectRequest</string>
          <string>com.android.server.hdmi.SelectRequestBuffer$SelectRequest</string>
          <string>com.android.server.hdmi.HdmiLogger</string>
          <string>com.android.server.hdmi.HdmiCecKeycode$KeycodeEntry</string>
          <string>com.android.server.hdmi.HdmiCecKeycode</string>
          <string>com.android.server.hdmi.HotplugDetectionAction$1</string>
          <string>com.android.server.hdmi.HotplugDetectionAction$2</string>
          <string>com.android.server.hdmi.HdmiCecMessageValidator</string>
          <string>com.android.server.hdmi.HdmiControlService$5$1</string>
          <string>com.android.server.hdmi.HdmiCecLocalDeviceTv</string>
          <string>com.android.server.hdmi.SystemAudioStatusAction$1</string>
          <string>com.android.server.hdmi.HdmiControlService$BinderService</string>
          <string>com.android.server.hdmi.HdmiControlService$BinderService$4</string>
          <string>com.android.server.hdmi.HdmiControlService$BinderService$5</string>
          <string>com.android.server.hdmi.HdmiControlService$BinderService$2</string>
          <string>com.android.server.hdmi.DeviceDiscoveryAction$DeviceInfo</string>
          <string>com.android.server.hdmi.HdmiControlService$BinderService$3</string>
          <string>com.android.server.hdmi.RequestArcInitiationAction$1</string>
          <string>com.android.server.hdmi.ActiveSourceHandler</string>
          <string>com.android.server.hdmi.HdmiControlService$BinderService$1</string>
          <string>com.android.server.hdmi.HdmiCecMessageValidator$RoutingChangeValidator</string>
          <string>com.android.server.hdmi.PowerStatusMonitorAction$1</string>
          <string>com.android.server.hdmi.HdmiCecFeatureAction$ActionTimer</string>
          <string>android.hardware.hdmi.IHdmiInputChangeListener</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.net.http.ss</name>
        <entities>
          <string>com.android.okhttp.AndroidShimResponseCache</string>
          <string>android.net.http.X509TrustManagerExtensions</string>
          <string>android.net.http.HttpResponseCache</string>
          <string>java.net.CacheResponse</string>
          <string>java.net.CacheRequest</string>
          <string>com.android.okhttp.OkCacheContainer</string>
          <string>java.net.ResponseCache</string>
          <string>com.android.okhttp.Cache</string>
          <string>android.net.http.SslCertificate$DName</string>
          <string>java.lang.ReflectiveOperationException</string>
          <string>android.net.http.SslCertificate</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.printservice.recommendation.ss</name>
        <entities>
          <string>android.printservice.recommendation.RecommendationInfo$1</string>
          <string>android.printservice.recommendation.RecommendationService$MyHandler</string>
          <string>android.printservice.recommendation.RecommendationService</string>
          <string>android.printservice.recommendation.RecommendationInfo</string>
          <string>android.printservice.recommendation.RecommendationService$1</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.content.pm.ss</name>
        <entities>
          <string>android.content.pm.EphemeralResolveInfo$1</string>
          <string>android.content.pm.VerifierInfo$1</string>
          <string>android.content.pm.PermissionInfo</string>
          <string>android.content.pm.FeatureGroupInfo$1</string>
          <string>android.content.pm.ConfigurationInfo</string>
          <string>android.content.pm.ApplicationInfo$DisplayNameComparator</string>
          <string>android.content.pm.PackageInstaller$SessionCallbackDelegate</string>
          <string>android.content.pm.FeatureInfo$1</string>
          <string>android.content.pm.PermissionInfo$1</string>
          <string>android.content.pm.ResolveInfo$1</string>
          <string>android.content.pm.ShortcutInfo$Builder</string>
          <string>android.content.pm.ProviderInfo</string>
          <string>android.content.pm.VerifierDeviceIdentity</string>
          <string>android.content.pm.IPackageInstallObserver</string>
          <string>android.content.pm.IntentFilterVerificationInfo$1</string>
          <string>android.content.pm.ActivityInfo</string>
          <string>android.content.pm.InstrumentationInfo</string>
          <string>android.content.pm.LabeledIntent</string>
          <string>android.content.pm.IPackageInstallObserver$Stub$Proxy</string>
          <string>android.content.pm.ILauncherApps$Stub$Proxy</string>
          <string>android.content.pm.PackageCleanItem$1</string>
          <string>android.content.pm.KeySet</string>
          <string>android.content.pm.ResolveInfo$DisplayNameComparator</string>
          <string>android.content.pm.PermissionGroupInfo</string>
          <string>android.content.pm.IOnAppsChangedListener$Stub$Proxy</string>
          <string>android.content.pm.VerifierDeviceIdentity$1</string>
          <string>android.content.pm.PermissionGroupInfo$1</string>
          <string>android.content.pm.ParceledListSlice$1</string>
          <string>android.content.pm.Signature$1</string>
          <string>android.content.pm.ApplicationInfo$1</string>
          <string>android.content.pm.ParceledListSlice$2</string>
          <string>android.content.pm.ProviderInfo$1</string>
          <string>android.content.pm.KeySet$1</string>
          <string>android.content.pm.LauncherApps</string>
          <string>android.content.pm.EphemeralApplicationInfo$1</string>
          <string>android.content.pm.PackageInstaller</string>
          <string>android.content.pm.FeatureInfo</string>
          <string>android.content.pm.RegisteredServicesCache$1</string>
          <string>android.content.pm.PathPermission</string>
          <string>android.content.pm.RegisteredServicesCache$2</string>
          <string>android.content.pm.IPackageInstallObserver$Stub</string>
          <string>android.content.pm.PackageItemInfo$DisplayNameComparator</string>
          <string>android.content.pm.RegisteredServicesCache$3</string>
          <string>android.content.pm.RegisteredServicesCache$4</string>
          <string>android.content.pm.LauncherActivityInfo</string>
          <string>android.content.pm.EphemeralApplicationInfo</string>
          <string>android.content.pm.EphemeralResolveInfo</string>
          <string>android.content.pm.ApplicationInfo</string>
          <string>android.content.pm.PackageParser$SplitNameComparator</string>
          <string>android.content.pm.Signature</string>
          <string>android.content.pm.RegisteredServicesCache</string>
          <string>android.content.pm.ShortcutInfo$1</string>
          <string>android.content.pm.LabeledIntent$1</string>
          <string>android.content.pm.PackageInfo$1</string>
          <string>android.content.pm.ActivityInfo$1</string>
          <string>android.content.pm.PackageInfo</string>
          <string>android.content.pm.IntentFilterVerificationInfo</string>
          <string>android.content.pm.IOnAppsChangedListener$Stub</string>
          <string>android.content.pm.RegisteredServicesCache$UserServices</string>
          <string>android.content.pm.ILauncherApps$Stub</string>
          <string>android.content.pm.InstrumentationInfo$1</string>
          <string>android.content.pm.LauncherApps$ShortcutQuery</string>
          <string>android.content.pm.ILauncherApps</string>
          <string>android.content.pm.UserInfo</string>
          <string>java.lang.ref.SoftReference</string>
          <string>android.content.pm.ConfigurationInfo$1</string>
          <string>android.content.pm.VerifierInfo</string>
          <string>android.content.pm.LauncherApps$CallbackMessageHandler$CallbackInfo</string>
          <string>android.content.pm.VerificationParams$1</string>
          <string>android.content.pm.PackageStats</string>
          <string>android.content.pm.UserInfo$1</string>
          <string>android.content.pm.LauncherApps$1</string>
          <string>android.content.pm.PathPermission$1</string>
          <string>android.content.pm.LauncherApps$CallbackMessageHandler</string>
          <string>android.content.pm.PackageCleanItem</string>
          <string>android.content.pm.ParceledListSlice</string>
          <string>android.content.pm.ShortcutInfo</string>
          <string>android.content.pm.PackageInstaller$SessionCallback</string>
          <string>android.content.pm.PackageStats$1</string>
          <string>android.content.pm.PackageParser$SplitPermissionInfo</string>
          <string>android.content.pm.PackageParser</string>
          <string>android.content.pm.FeatureGroupInfo</string>
          <string>android.content.pm.PackageItemInfo</string>
          <string>android.content.pm.ResolveInfo</string>
          <string>android.content.pm.LauncherApps$Callback</string>
          <string>android.content.pm.IOnAppsChangedListener</string>
          <string>android.content.pm.ServiceInfo$1</string>
          <string>android.content.pm.PackageInfoLite</string>
          <string>android.content.pm.VerificationParams</string>
          <string>android.content.pm.PackageInfoLite$1</string>
          <string>android.content.pm.ServiceInfo</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.utils.ss</name>
        <entities>
          <string>com.android.server.utils.ManagedApplicationService$1</string>
          <string>com.android.server.utils.ManagedApplicationService</string>
          <string>com.android.server.utils.ManagedApplicationService$2</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.bluetooth.ss</name>
        <entities>
          <string>android.bluetooth.IBluetoothA2dp$Stub$Proxy</string>
          <string>android.bluetooth.BluetoothA2dpSink</string>
          <string>android.bluetooth.BluetoothHeadset$2</string>
          <string>android.bluetooth.BluetoothPbapClient$1</string>
          <string>android.bluetooth.BluetoothSap$1</string>
          <string>android.bluetooth.BluetoothHeadset$1</string>
          <string>android.bluetooth.BluetoothPbapClient$2</string>
          <string>android.bluetooth.BluetoothSap$2</string>
          <string>android.bluetooth.BluetoothActivityEnergyInfo$1</string>
          <string>android.bluetooth.BluetoothHeadset$3</string>
          <string>android.bluetooth.IBluetoothA2dpSink$Stub</string>
          <string>android.bluetooth.BluetoothAdapter$LeScanCallback</string>
          <string>android.bluetooth.SdpOppOpsRecord</string>
          <string>android.bluetooth.IBluetoothInputDevice$Stub$Proxy</string>
          <string>android.bluetooth.BluetoothPbapClient</string>
          <string>android.bluetooth.BluetoothMasInstance$MessageType</string>
          <string>android.bluetooth.SdpMasRecord$1</string>
          <string>android.bluetooth.IBluetoothPbap</string>
          <string>android.bluetooth.IBluetoothSap$Stub</string>
          <string>android.bluetooth.IBluetoothHeadset$Stub$Proxy</string>
          <string>android.bluetooth.IBluetoothSap$Stub$Proxy</string>
          <string>android.bluetooth.BluetoothGattService$1</string>
          <string>android.bluetooth.BluetoothGatt</string>
          <string>android.bluetooth.BluetoothMap</string>
          <string>android.bluetooth.BluetoothMasInstance$1</string>
          <string>android.bluetooth.IBluetoothPbap$Stub$Proxy</string>
          <string>android.bluetooth.IBluetoothMap$Stub</string>
          <string>android.bluetooth.SdpOppOpsRecord$1</string>
          <string>android.bluetooth.BluetoothGattIncludedService$1</string>
          <string>android.bluetooth.BluetoothClass$Service</string>
          <string>android.bluetooth.IBluetoothPbapClient</string>
          <string>android.bluetooth.BluetoothHeadsetClientCall</string>
          <string>android.bluetooth.OobData$1</string>
          <string>android.bluetooth.BluetoothAvrcpPlayerSettings$1</string>
          <string>android.bluetooth.BluetoothGatt$1</string>
          <string>android.bluetooth.BluetoothAdapter$BluetoothStateChangeCallback</string>
          <string>android.bluetooth.BluetoothGattIncludedService</string>
          <string>android.bluetooth.BluetoothAdapter$1</string>
          <string>android.bluetooth.BluetoothAdapter$StateChangeCallbackWrapper</string>
          <string>android.bluetooth.BluetoothAdapter$2</string>
          <string>android.bluetooth.BluetoothGattCharacteristic</string>
          <string>android.bluetooth.BluetoothGattServer$1</string>
          <string>android.bluetooth.IBluetoothHealthCallback$Stub</string>
          <string>android.bluetooth.SdpRecord</string>
          <string>android.bluetooth.IBluetoothHeadsetPhone$Stub</string>
          <string>android.bluetooth.BluetoothClass$Device</string>
          <string>android.bluetooth.IBluetoothHealth</string>
          <string>android.bluetooth.BluetoothAudioConfig$1</string>
          <string>android.bluetooth.BluetoothServerSocket</string>
          <string>android.bluetooth.IBluetoothPan$Stub</string>
          <string>android.bluetooth.IBluetoothHeadset</string>
          <string>android.bluetooth.BluetoothMap$2</string>
          <string>android.bluetooth.SdpMasRecord$MessageType</string>
          <string>android.bluetooth.BluetoothMap$1</string>
          <string>android.bluetooth.BluetoothAudioConfig</string>
          <string>android.bluetooth.IBluetoothPbapClient$Stub$Proxy</string>
          <string>android.bluetooth.SdpSapsRecord$1</string>
          <string>android.bluetooth.BluetoothProfile</string>
          <string>android.bluetooth.BluetoothGattServerCallback</string>
          <string>android.bluetooth.BluetoothPan$1</string>
          <string>android.bluetooth.BluetoothPan$2</string>
          <string>android.bluetooth.BluetoothDevice$2</string>
          <string>android.bluetooth.BluetoothHealth$BluetoothHealthCallbackWrapper</string>
          <string>android.bluetooth.BluetoothGattCallback</string>
          <string>android.bluetooth.BluetoothDevice$1</string>
          <string>android.bluetooth.BluetoothPbap</string>
          <string>android.bluetooth.IBluetoothHealthCallback$Stub$Proxy</string>
          <string>android.bluetooth.BluetoothClass</string>
          <string>android.bluetooth.BluetoothGattDescriptor</string>
          <string>android.bluetooth.IBluetoothMap</string>
          <string>android.bluetooth.IBluetoothInputDevice$Stub</string>
          <string>android.bluetooth.BluetoothPan</string>
          <string>android.bluetooth.IBluetoothHeadsetPhone</string>
          <string>android.bluetooth.BluetoothHealthAppConfiguration</string>
          <string>android.bluetooth.BluetoothGattDescriptor$1</string>
          <string>android.bluetooth.BluetoothProfile$ServiceListener</string>
          <string>android.bluetooth.SdpSapsRecord</string>
          <string>android.bluetooth.IBluetoothInputDevice</string>
          <string>android.bluetooth.BluetoothHealthCallback</string>
          <string>android.bluetooth.BluetoothHealth</string>
          <string>android.bluetooth.BluetoothMasInstance</string>
          <string>android.bluetooth.BluetoothPbap$ServiceListener</string>
          <string>android.bluetooth.IBluetoothHealthCallback</string>
          <string>android.bluetooth.BluetoothPbap$1</string>
          <string>android.bluetooth.BluetoothPbap$2</string>
          <string>android.bluetooth.IBluetoothAvrcpController$Stub</string>
          <string>android.bluetooth.SdpRecord$1</string>
          <string>android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy</string>
          <string>android.bluetooth.IBluetoothHeadset$Stub</string>
          <string>android.bluetooth.BluetoothHeadsetClient</string>
          <string>android.bluetooth.SdpPseRecord$1</string>
          <string>android.bluetooth.BluetoothSocket$SocketState</string>
          <string>android.bluetooth.BluetoothClass$Device$Major</string>
          <string>android.bluetooth.IBluetoothHealth$Stub$Proxy</string>
          <string>android.bluetooth.SdpMnsRecord</string>
          <string>android.bluetooth.IBluetoothHeadsetClient</string>
          <string>android.bluetooth.BluetoothSap</string>
          <string>android.bluetooth.BluetoothOutputStream</string>
          <string>android.bluetooth.IBluetoothPan</string>
          <string>android.bluetooth.IBluetoothPbapClient$Stub</string>
          <string>android.bluetooth.BluetoothInputDevice</string>
          <string>android.bluetooth.BluetoothInputStream</string>
          <string>android.bluetooth.IBluetoothPan$Stub$Proxy</string>
          <string>android.bluetooth.BluetoothHeadsetClient$2</string>
          <string>android.bluetooth.BluetoothGattServer</string>
          <string>android.bluetooth.IBluetoothHeadsetPhone$Stub$Proxy</string>
          <string>android.bluetooth.BluetoothA2dpSink$1</string>
          <string>android.bluetooth.BluetoothA2dpSink$2</string>
          <string>android.bluetooth.IBluetoothA2dp</string>
          <string>android.bluetooth.BluetoothHeadsetClient$1</string>
          <string>android.bluetooth.BluetoothHealthAppConfiguration$1</string>
          <string>android.bluetooth.UidTraffic$1</string>
          <string>android.bluetooth.BluetoothSocket</string>
          <string>android.bluetooth.BluetoothDevice</string>
          <string>android.bluetooth.BluetoothAvrcpController</string>
          <string>android.bluetooth.BluetoothHealth$1</string>
          <string>android.bluetooth.IBluetoothHeadsetClient$Stub</string>
          <string>android.bluetooth.BluetoothHealth$2</string>
          <string>android.bluetooth.IBluetoothPbap$Stub</string>
          <string>android.bluetooth.SdpMasRecord</string>
          <string>android.bluetooth.UidTraffic</string>
          <string>android.bluetooth.IBluetoothA2dp$Stub</string>
          <string>android.bluetooth.BluetoothHeadset</string>
          <string>android.bluetooth.SdpPseRecord</string>
          <string>android.bluetooth.IBluetoothAvrcpController</string>
          <string>android.bluetooth.BluetoothInputDevice$1</string>
          <string>android.bluetooth.IBluetoothA2dpSink$Stub$Proxy</string>
          <string>android.bluetooth.BluetoothInputDevice$2</string>
          <string>android.bluetooth.BluetoothA2dp</string>
          <string>android.bluetooth.BluetoothGattCharacteristic$1</string>
          <string>android.bluetooth.BluetoothAvrcpController$1</string>
          <string>android.bluetooth.IBluetoothMap$Stub$Proxy</string>
          <string>android.bluetooth.BluetoothAvrcpController$2</string>
          <string>android.bluetooth.BluetoothGattService</string>
          <string>android.bluetooth.IBluetoothA2dpSink</string>
          <string>android.bluetooth.BluetoothAdapter</string>
          <string>android.bluetooth.OobData</string>
          <string>android.bluetooth.BluetoothHeadsetClientCall$1</string>
          <string>android.bluetooth.BluetoothA2dp$1</string>
          <string>android.bluetooth.BluetoothA2dp$2</string>
          <string>android.bluetooth.BluetoothClass$1</string>
          <string>android.bluetooth.SdpMnsRecord$1</string>
          <string>android.bluetooth.BluetoothAvrcpPlayerSettings</string>
          <string>android.bluetooth.IBluetoothHealth$Stub</string>
          <string>android.bluetooth.IBluetoothSap</string>
          <string>android.bluetooth.IBluetoothAvrcpController$Stub$Proxy</string>
          <string>android.bluetooth.BluetoothActivityEnergyInfo</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.accessibilityservice.ss</name>
        <entities>
          <string>android.accessibilityservice.GestureDescription</string>
          <string>android.accessibilityservice.AccessibilityService$SoftKeyboardController$OnShowModeChangedListener</string>
          <string>android.accessibilityservice.GestureDescription$MotionEventGenerator</string>
          <string>android.accessibilityservice.IAccessibilityServiceConnection</string>
          <string>android.accessibilityservice.AccessibilityService$1</string>
          <string>android.accessibilityservice.AccessibilityService$MagnificationController$1</string>
          <string>android.accessibilityservice.GestureDescription$Builder</string>
          <string>android.accessibilityservice.AccessibilityService$2</string>
          <string>android.accessibilityservice.IAccessibilityServiceConnection$Stub</string>
          <string>android.accessibilityservice.AccessibilityServiceInfo</string>
          <string>android.accessibilityservice.GestureDescription$TouchPoint</string>
          <string>android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub$Proxy</string>
          <string>android.accessibilityservice.IAccessibilityServiceConnection$Stub$Proxy</string>
          <string>android.accessibilityservice.AccessibilityService$GestureResultCallbackInfo</string>
          <string>android.accessibilityservice.AccessibilityService$SoftKeyboardController</string>
          <string>android.accessibilityservice.AccessibilityService$SoftKeyboardController$1</string>
          <string>android.accessibilityservice.AccessibilityService$GestureResultCallback</string>
          <string>android.view.accessibility.IAccessibilityInteractionConnectionCallback</string>
          <string>android.accessibilityservice.AccessibilityServiceInfo$CapabilityInfo</string>
          <string>android.accessibilityservice.AccessibilityService</string>
          <string>android.accessibilityservice.AccessibilityService$MagnificationController$OnMagnificationChangedListener</string>
          <string>android.accessibilityservice.GestureDescription$StrokeDescription</string>
          <string>android.accessibilityservice.AccessibilityService$MagnificationController</string>
          <string>android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub</string>
          <string>android.accessibilityservice.AccessibilityServiceInfo$1</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.media.audiopolicy.ss</name>
        <entities>
          <string>android.media.audiopolicy.AudioPolicy$AudioPolicyFocusListener</string>
          <string>android.media.audiopolicy.AudioPolicy$AudioPolicyStatusListener</string>
          <string>android.media.audiopolicy.AudioPolicyConfig$1</string>
          <string>android.media.audiopolicy.AudioMix$Builder</string>
          <string>android.media.audiopolicy.AudioMixingRule</string>
          <string>android.media.audiopolicy.AudioMixingRule$Builder</string>
          <string>android.media.audiopolicy.AudioPolicyConfig</string>
          <string>android.media.audiopolicy.AudioMixingRule$AudioMixMatchCriterion</string>
          <string>android.media.audiopolicy.AudioPolicy$EventHandler</string>
          <string>android.media.audiopolicy.AudioPolicy$1</string>
          <string>android.media.audiopolicy.AudioMix</string>
          <string>android.media.audiopolicy.AudioPolicy$Builder</string>
          <string>android.media.audiopolicy.AudioPolicy</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.content.ss</name>
        <entities>
          <string>android.content.ContentProviderOperation</string>
          <string>android.annotation.RequiresPermission$Read</string>
          <string>android.content.SyncContext</string>
          <string>android.content.ISyncStatusObserver$Stub</string>
          <string>android.content.IContentService</string>
          <string>android.content.Entity$NamedContentValues</string>
          <string>android.content.ContentProviderOperation$1</string>
          <string>android.content.UndoManager</string>
          <string>android.content.SyncResult$1</string>
          <string>android.content.IContentService$Stub$Proxy</string>
          <string>android.content.ContentQueryMap</string>
          <string>android.content.ClipData$1</string>
          <string>android.database.AbstractCursor$SelfContentObserver</string>
          <string>android.content.SyncStatusObserver</string>
          <string>android.content.ClipboardManager</string>
          <string>android.content.ContentResolver$OpenResourceIdResult</string>
          <string>android.content.SyncAdaptersCache</string>
          <string>android.content.ISyncStatusObserver$Stub$Proxy</string>
          <string>android.content.ISyncContext$Stub$Proxy</string>
          <string>android.content.IOnPrimaryClipChangedListener</string>
          <string>android.content.IntentFilter</string>
          <string>android.annotation.RequiresPermission$Write</string>
          <string>android.content.IClipboard</string>
          <string>android.content.ContentProvider$PipeDataWriter</string>
          <string>android.content.IntentSender$1</string>
          <string>android.content.ISyncServiceAdapter$Stub</string>
          <string>android.content.ContentProviderResult$1</string>
          <string>android.content.PeriodicSync$1</string>
          <string>android.content.ISyncContext$Stub</string>
          <string>android.content.RestrictionEntry</string>
          <string>android.content.IntentSender$OnFinished</string>
          <string>android.content.ContentInsertHandler</string>
          <string>android.content.AbstractThreadedSyncAdapter</string>
          <string>android.content.UndoOwner</string>
          <string>android.content.ContentProvider$Transport</string>
          <string>android.content.UndoManager$UndoState</string>
          <string>android.content.Entity</string>
          <string>android.content.IntentSender</string>
          <string>android.content.SearchRecentSuggestionsProvider</string>
          <string>android.content.SyncStatusInfo</string>
          <string>android.content.AbstractThreadedSyncAdapter$SyncThread</string>
          <string>android.content.AsyncTaskLoader$LoadTask</string>
          <string>android.content.ComponentName$1</string>
          <string>android.database.BulkCursorToCursorAdaptor</string>
          <string>android.content.AsyncTaskLoader</string>
          <string>android.content.SyncInfo$1</string>
          <string>android.content.ClipboardManager$OnPrimaryClipChangedListener</string>
          <string>android.content.ComponentName</string>
          <string>android.content.SyncInfo</string>
          <string>android.content.IContentProvider</string>
          <string>android.content.Intent$ShortcutIconResource$1</string>
          <string>android.content.PeriodicSync</string>
          <string>android.os.ICancellationSignal</string>
          <string>android.content.OperationApplicationException</string>
          <string>android.content.Intent$1</string>
          <string>android.content.UriPermission$1</string>
          <string>oadTask</string>
          <string>android.content.IClipboard$Stub</string>
          <string>android.content.AbstractThreadedSyncAdapter$ISyncAdapterImpl</string>
          <string>android.content.IClipboard$Stub$Proxy</string>
          <string>android.content.SyncRequest</string>
          <string>android.content.ClipDescription$1</string>
          <string>android.content.UndoOperation</string>
          <string>android.content.ClipboardManager$1</string>
          <string>android.content.ClipboardManager$2</string>
          <string>android.content.SyncStats</string>
          <string>android.content.SyncStats$1</string>
          <string>android.content.SyncAdapterType$1</string>
          <string>android.content.SyncStatusInfo$1</string>
          <string>android.content.ContentResolver</string>
          <string>android.content.ContentQueryMap$1</string>
          <string>android.content.ContentProviderResult</string>
          <string>android.content.SyncResult</string>
          <string>android.content.ContentProvider$1</string>
          <string>android.content.ContentProviderNative</string>
          <string>android.content.IContentService$Stub</string>
          <string>android.content.IntentSender$FinishedDispatcher</string>
          <string>android.content.IOnPrimaryClipChangedListener$Stub</string>
          <string>android.content.IOnPrimaryClipChangedListener$Stub$Proxy</string>
          <string>android.content.SearchRecentSuggestionsProvider$DatabaseHelper</string>
          <string>org.xml.sax.SAXException</string>
          <string>android.os.ICancellationSignal$Stub$Proxy</string>
          <string>android.content.ContentProviderClient</string>
          <string>android.content.ContentResolver$ParcelFileDescriptorInner</string>
          <string>android.content.ContentValues</string>
          <string>android.content.RestrictionEntry$1</string>
          <string>android.content.ContentProviderClient$NotRespondingRunnable</string>
          <string>android.content.UriPermission</string>
          <string>android.content.SyncAdapterType</string>
          <string>android.content.Intent$ShortcutIconResource</string>
          <string>android.content.ContentProviderProxy</string>
          <string>android.content.SyncAdaptersCache$MySerializer</string>
          <string>android.content.ContentProviderClient$CursorWrapperInner</string>
          <string>android.content.Intent</string>
          <string>android.content.ContentResolver$1</string>
          <string>android.content.IntentFilter$1</string>
          <string>android.content.UriMatcher</string>
          <string>android.content.ClipData</string>
          <string>android.annotation.RequiresPermission</string>
          <string>android.content.ContentValues$1</string>
          <string>android.content.ISyncServiceAdapter</string>
          <string>android.content.SyncRequest$1</string>
          <string>android.content.ContentResolver$CursorWrapperInner</string>
          <string>android.content.ISyncServiceAdapter$Stub$Proxy</string>
          <string>android.content.ISyncContext</string>
          <string>android.os.ICancellationSignal$Stub</string>
          <string>android.content.DefaultDataHandler</string>
          <string>android.content.ContentProvider</string>
          <string>android.content.ISyncStatusObserver</string>
          <string>android.content.ClipDescription</string>
          <string>android.content.SyncRequest$Builder</string>
          <string>java.util.Observable</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.hardware.radio.ss</name>
        <entities>
          <string>android.hardware.radio.RadioMetadata$1</string>
          <string>android.hardware.radio.RadioTuner</string>
          <string>android.hardware.radio.RadioMetadata$Clock$1</string>
          <string>android.hardware.radio.RadioManager$BandDescriptor</string>
          <string>android.hardware.radio.RadioManager$ModuleProperties</string>
          <string>android.hardware.radio.RadioManager$AmBandConfig$1</string>
          <string>android.hardware.radio.RadioManager$FmBandConfig$Builder</string>
          <string>android.hardware.radio.RadioManager$FmBandDescriptor</string>
          <string>android.hardware.radio.RadioManager$FmBandDescriptor$1</string>
          <string>android.hardware.radio.RadioManager</string>
          <string>android.hardware.radio.RadioManager$BandConfig</string>
          <string>android.hardware.radio.RadioManager$AmBandDescriptor</string>
          <string>android.hardware.radio.RadioMetadata</string>
          <string>android.hardware.radio.RadioMetadata$Builder</string>
          <string>android.hardware.radio.RadioManager$BandConfig$1</string>
          <string>android.hardware.radio.RadioManager$AmBandConfig$Builder</string>
          <string>android.hardware.radio.RadioManager$BandDescriptor$1</string>
          <string>android.hardware.radio.RadioTuner$Callback</string>
          <string>android.hardware.radio.RadioManager$ProgramInfo$1</string>
          <string>android.hardware.radio.RadioManager$FmBandConfig</string>
          <string>android.hardware.radio.RadioManager$ProgramInfo</string>
          <string>android.hardware.radio.RadioMetadata$Clock</string>
          <string>android.hardware.radio.RadioModule</string>
          <string>android.hardware.radio.RadioModule$NativeEventHandlerDelegate$1</string>
          <string>android.hardware.radio.RadioManager$AmBandDescriptor$1</string>
          <string>android.hardware.radio.RadioManager$ModuleProperties$1</string>
          <string>android.hardware.radio.RadioManager$FmBandConfig$1</string>
          <string>android.hardware.radio.RadioManager$AmBandConfig</string>
          <string>android.hardware.radio.RadioModule$NativeEventHandlerDelegate</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.hardware.camera2.dispatch.ss</name>
        <entities>
          <string>android.hardware.camera2.dispatch.HandlerDispatcher$1</string>
          <string>android.hardware.camera2.dispatch.HandlerDispatcher</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.hardware.camera2.impl.ss</name>
        <entities>
          <string>android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks</string>
          <string>android.hardware.camera2.impl.CameraDeviceImpl</string>
          <string>android.hardware.camera2.impl.ICameraDeviceUserWrapper</string>
          <string>android.hardware.camera2.impl.GetCommand</string>
          <string>android.hardware.camera2.impl.CameraCaptureSessionImpl$IdleDrainListener</string>
          <string>android.hardware.camera2.impl.SetCommand</string>
          <string>android.hardware.camera2.params.LensShadingMap</string>
          <string>android.hardware.camera2.impl.CameraMetadataNative$6</string>
          <string>android.hardware.camera2.impl.CameraMetadataNative$5</string>
          <string>android.hardware.camera2.impl.CameraMetadataNative$4</string>
          <string>android.hardware.camera2.impl.CameraMetadataNative</string>
          <string>android.hardware.camera2.impl.CameraMetadataNative$3</string>
          <string>android.hardware.camera2.impl.CameraMetadataNative$9</string>
          <string>android.hardware.camera2.impl.CameraMetadataNative$8</string>
          <string>android.hardware.camera2.CaptureFailure</string>
          <string>android.hardware.camera2.impl.CallbackProxies$DeviceCaptureCallbackProxy</string>
          <string>android.hardware.camera2.impl.CameraMetadataNative$7</string>
          <string>android.hardware.camera2.dispatch.BroadcastDispatcher</string>
          <string>android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks$3</string>
          <string>android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks$2</string>
          <string>android.hardware.camera2.impl.CallbackProxies$DeviceStateCallbackProxy</string>
          <string>android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks$1</string>
          <string>java.lang.reflect.Method</string>
          <string>android.hardware.camera2.impl.CameraMetadataNative$18</string>
          <string>android.hardware.camera2.impl.CameraMetadataNative$19</string>
          <string>android.hardware.camera2.impl.CameraMetadataNative$16</string>
          <string>android.hardware.camera2.dispatch.DuckTypingDispatcher</string>
          <string>android.hardware.camera2.dispatch.InvokeDispatcher</string>
          <string>android.hardware.camera2.impl.CameraMetadataNative$17</string>
          <string>android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks$6</string>
          <string>android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks$5</string>
          <string>android.hardware.camera2.impl.CameraDeviceImpl$CameraDeviceCallbacks$4</string>
          <string>android.hardware.camera2.CameraCaptureSession$CaptureCallback</string>
          <string>android.hardware.camera2.impl.CameraDeviceImpl$9</string>
          <string>android.hardware.camera2.impl.CameraMetadataNative$10</string>
          <string>android.hardware.camera2.impl.CameraMetadataNative$11</string>
          <string>android.hardware.camera2.impl.CameraDeviceImpl$7</string>
          <string>android.hardware.camera2.utils.UncheckedThrow</string>
          <string>android.hardware.camera2.impl.CameraDeviceImpl$8</string>
          <string>android.hardware.camera2.TotalCaptureResult</string>
          <string>android.hardware.camera2.impl.CameraDeviceImpl$5</string>
          <string>android.hardware.camera2.impl.CameraMetadataNative$14</string>
          <string>android.hardware.camera2.impl.CameraDeviceImpl$6</string>
          <string>android.hardware.camera2.impl.CameraMetadataNative$15</string>
          <string>android.hardware.camera2.dispatch.NullDispatcher</string>
          <string>android.hardware.camera2.impl.CameraDeviceImpl$3</string>
          <string>android.hardware.camera2.impl.CameraMetadataNative$12</string>
          <string>android.hardware.camera2.impl.CameraDeviceImpl$4</string>
          <string>android.hardware.camera2.impl.CameraMetadataNative$13</string>
          <string>android.hardware.camera2.impl.CameraDeviceImpl$1</string>
          <string>android.hardware.camera2.impl.CameraDeviceImpl$2</string>
          <string>android.hardware.camera2.dispatch.ArgumentReplacingDispatcher</string>
          <string>android.hardware.camera2.impl.CaptureResultExtras$1</string>
          <string>android.hardware.camera2.impl.CameraConstrainedHighSpeedCaptureSessionImpl$WrapperCallback</string>
          <string>android.hardware.camera2.impl.CameraCaptureSessionImpl$AbortDrainListener</string>
          <string>android.hardware.camera2.impl.CameraMetadataNative$Key</string>
          <string>android.hardware.camera2.CameraConstrainedHighSpeedCaptureSession</string>
          <string>android.hardware.camera2.impl.CameraCaptureSessionImpl$SequenceDrainListener</string>
          <string>android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallbackHolder</string>
          <string>android.hardware.camera2.impl.CameraDeviceImpl$FrameNumberTracker</string>
          <string>android.hardware.camera2.CaptureRequest$Builder</string>
          <string>android.hardware.camera2.CameraDevice$StateCallback</string>
          <string>android.hardware.camera2.params.Face</string>
          <string>android.hardware.camera2.dispatch.MethodNameInvoker</string>
          <string>android.hardware.camera2.utils.TaskDrainer$DrainListener</string>
          <string>android.hardware.camera2.CameraCaptureSession$StateCallback</string>
          <string>android.hardware.camera2.impl.CameraDeviceImpl$RequestLastFrameNumbersHolder</string>
          <string>android.hardware.camera2.impl.CameraDeviceImpl$StateCallbackKK</string>
          <string>android.hardware.camera2.impl.CallbackProxies$SessionStateCallbackProxy</string>
          <string>android.hardware.camera2.impl.CallbackProxies</string>
          <string>android.hardware.camera2.dispatch.Dispatchable</string>
          <string>android.hardware.camera2.impl.CameraDeviceImpl$10</string>
          <string>android.hardware.camera2.impl.CameraDeviceImpl$11</string>
          <string>android.hardware.camera2.impl.CameraMetadataNative$2</string>
          <string>android.hardware.camera2.params.InputConfiguration</string>
          <string>android.hardware.camera2.impl.CameraMetadataNative$1</string>
          <string>android.hardware.camera2.utils.TaskSingleDrainer</string>
          <string>android.hardware.camera2.impl.CameraCaptureSessionImpl$1</string>
          <string>android.hardware.camera2.impl.CameraCaptureSessionImpl$2</string>
          <string>java.util.AbstractMap$SimpleEntry</string>
          <string>android.hardware.camera2.impl.CameraDeviceImpl$CaptureCallback</string>
          <string>android.hardware.camera2.impl.CaptureResultExtras</string>
          <string>android.hardware.camera2.CameraAccessException</string>
          <string>android.hardware.camera2.impl.CameraCaptureSessionCore</string>
          <string>android.hardware.camera2.params.TonemapCurve</string>
          <string>android.hardware.camera2.impl.CameraCaptureSessionImpl</string>
          <string>android.hardware.camera2.impl.CameraConstrainedHighSpeedCaptureSessionImpl</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.location.ss</name>
        <entities>
          <string>java.net.HttpURLConnection</string>
          <string>android.hardware.location.IFusedLocationHardware$Stub</string>
          <string>com.android.server.location.GnssStatusListenerHelper</string>
          <string>com.android.server.location.LocationBasedCountryDetector$1</string>
          <string>com.android.server.location.LocationBasedCountryDetector$3</string>
          <string>android.location.IGeofenceProvider$Stub$Proxy</string>
          <string>com.android.server.location.LocationBasedCountryDetector$2</string>
          <string>com.android.server.location.FusedLocationHardwareSecure</string>
          <string>com.android.server.location.ActivityRecognitionProxy</string>
          <string>com.android.server.location.CountryDetectorBase</string>
          <string>android.location.IGnssStatusProvider</string>
          <string>java.util.TimerTask</string>
          <string>android.location.IGpsGeofenceHardware$Stub</string>
          <string>com.android.server.location.GnssMeasurementsProvider$1</string>
          <string>android.hardware.location.IFusedLocationHardwareSink</string>
          <string>android.location.ILocationManager</string>
          <string>com.android.server.location.GnssLocationProvider$GnssSystemInfoProvider</string>
          <string>com.android.internal.location.ILocationProvider$Stub$Proxy</string>
          <string>android.location.Geocoder</string>
          <string>com.android.server.location.GnssLocationProvider</string>
          <string>android.location.IGnssStatusProvider$Stub</string>
          <string>com.android.server.location.LocationProviderProxy$1</string>
          <string>android.hardware.location.IGeofenceHardware$Stub$Proxy</string>
          <string>android.telephony.SubscriptionManager$OnSubscriptionsChangedListener$1</string>
          <string>android.location.IGeofenceProvider$Stub</string>
          <string>com.android.server.location.LocationProviderProxy</string>
          <string>com.android.server.location.ActivityRecognitionProxy$1</string>
          <string>android.telephony.SubscriptionManager$OnSubscriptionsChangedListener$2</string>
          <string>com.android.server.location.FlpHardwareProvider</string>
          <string>com.android.server.location.LocationFudger$1</string>
          <string>android.telephony.SmsMessage</string>
          <string>com.android.server.location.LocationFudger</string>
          <string>android.location.IGeofenceProvider</string>
          <string>android.location.INetInitiatedListener$Stub</string>
          <string>android.hardware.location.IActivityRecognitionHardwareClient</string>
          <string>com.android.server.location.GeofenceProxy$3</string>
          <string>android.location.IGpsGeofenceHardware$Stub$Proxy</string>
          <string>com.android.server.location.GeofenceProxy$2</string>
          <string>com.android.server.location.GeofenceProxy$1</string>
          <string>com.android.server.location.GnssNavigationMessageProvider</string>
          <string>com.android.internal.location.ILocationProvider$Stub</string>
          <string>com.android.server.location.GeofenceState</string>
          <string>java.net.URLConnection</string>
          <string>android.location.IGnssMeasurementsListener</string>
          <string>android.telephony.SubscriptionManager$OnSubscriptionsChangedListener</string>
          <string>java.util.Properties</string>
          <string>com.android.server.location.RemoteListenerHelper$LinkedListener</string>
          <string>com.android.internal.telephony.SmsMessageBase</string>
          <string>android.hardware.location.IActivityRecognitionHardwareWatcher$Stub$Proxy</string>
          <string>com.android.server.location.FlpHardwareProvider$2</string>
          <string>com.android.server.location.FlpHardwareProvider$1</string>
          <string>com.android.internal.location.ILocationProvider</string>
          <string>java.io.StringReader</string>
          <string>android.location.IFusedProvider$Stub</string>
          <string>com.android.server.location.FusedProxy</string>
          <string>com.android.server.location.GnssStatusListenerHelper$Operation</string>
          <string>android.provider.Telephony$Carriers</string>
          <string>android.location.IGnssNavigationMessageListener</string>
          <string>com.android.server.location.ComprehensiveCountryDetector$3</string>
          <string>com.android.server.location.GnssLocationProvider$11</string>
          <string>android.telephony.gsm.GsmCellLocation</string>
          <string>com.android.server.location.GpsXtraDownloader</string>
          <string>com.android.server.location.ComprehensiveCountryDetector$2</string>
          <string>com.android.server.location.GnssLocationProvider$10</string>
          <string>com.android.server.location.GnssLocationProvider$ProviderHandler</string>
          <string>com.android.server.location.GnssLocationProvider$13</string>
          <string>com.android.server.location.ComprehensiveCountryDetector$4</string>
          <string>android.net.ConnectivityManager$NetworkCallback</string>
          <string>com.android.server.location.GnssLocationProvider$12</string>
          <string>com.android.server.location.GnssLocationProvider$NetworkLocationListener</string>
          <string>android.util.NtpTrustedTime</string>
          <string>java.util.Timer</string>
          <string>com.android.server.location.GnssMeasurementsProvider$StatusChangedOperation</string>
          <string>com.android.server.location.RemoteListenerHelper$HandlerRunnable</string>
          <string>com.android.server.location.LocationBasedCountryDetector</string>
          <string>android.hardware.location.IFusedLocationHardware</string>
          <string>android.hardware.location.IFusedLocationHardwareSink$Stub</string>
          <string>com.android.server.location.ComprehensiveCountryDetector$1</string>
          <string>android.net.NetworkRequest$Builder</string>
          <string>android.hardware.location.IFusedLocationHardware$Stub$Proxy</string>
          <string>android.location.FusedBatchOptions$SourceTechnologies</string>
          <string>com.android.server.location.GeofenceProxy</string>
          <string>com.android.server.location.GnssLocationProvider$BackOff</string>
          <string>com.android.server.location.ComprehensiveCountryDetector</string>
          <string>com.android.server.location.GeofenceManager$GeofenceHandler</string>
          <string>inkedListener</string>
          <string>android.hardware.location.IActivityRecognitionHardwareClient$Stub$Proxy</string>
          <string>android.hardware.location.IActivityRecognitionHardwareWatcher$Stub</string>
          <string>android.location.IGnssStatusProvider$Stub$Proxy</string>
          <string>com.android.server.location.GnssNavigationMessageProvider$1</string>
          <string>com.android.server.location.RemoteListenerHelper</string>
          <string>android.location.IFusedGeofenceHardware</string>
          <string>android.location.IFusedGeofenceHardware$Stub$Proxy</string>
          <string>android.location.IFusedProvider</string>
          <string>android.location.IGnssStatusListener</string>
          <string>android.hardware.location.IGeofenceHardware</string>
          <string>android.location.IFusedProvider$Stub$Proxy</string>
          <string>java.util.concurrent.ConcurrentLinkedQueue</string>
          <string>android.location.INetInitiatedListener$Stub$Proxy</string>
          <string>android.hardware.location.IFusedLocationHardwareSink$Stub$Proxy</string>
          <string>com.android.server.location.GnssMeasurementsProvider</string>
          <string>com.android.server.location.GnssNavigationMessageProvider$StatusChangedOperation</string>
          <string>com.android.server.location.GnssLocationProvider$8</string>
          <string>com.android.server.location.GnssLocationProvider$7</string>
          <string>android.provider.Telephony$Sms$Intents</string>
          <string>com.android.server.location.GnssLocationProvider$6</string>
          <string>com.android.server.location.FusedProxy$1</string>
          <string>com.android.server.location.GnssLocationProvider$5</string>
          <string>android.hardware.location.IActivityRecognitionHardwareClient$Stub</string>
          <string>com.android.server.location.GnssLocationProvider$9</string>
          <string>com.android.server.location.GnssStatusListenerHelper$2</string>
          <string>com.android.server.location.GnssStatusListenerHelper$1</string>
          <string>com.android.server.location.GnssLocationProvider$4</string>
          <string>com.android.server.location.GnssStatusListenerHelper$5</string>
          <string>com.android.server.location.GnssLocationProvider$3</string>
          <string>com.android.server.location.GnssStatusListenerHelper$4</string>
          <string>com.android.server.location.GnssLocationProvider$2</string>
          <string>com.android.server.location.GnssStatusListenerHelper$3</string>
          <string>com.android.server.location.GnssLocationProvider$1</string>
          <string>com.android.server.location.GnssLocationProvider$GpsRequest</string>
          <string>android.hardware.location.IActivityRecognitionHardwareWatcher</string>
          <string>com.android.server.location.FlpHardwareProvider$NetworkLocationListener</string>
          <string>com.android.server.location.RemoteListenerHelper$ListenerOperation</string>
          <string>android.hardware.location.IGeofenceHardware$Stub</string>
          <string>com.android.server.location.GeofenceManager</string>
          <string>android.location.IGpsGeofenceHardware</string>
          <string>android.location.IFusedGeofenceHardware$Stub</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.widget.ss</name>
        <entities>
          <string>com.android.internal.widget.ButtonBarLayout</string>
          <string>android.widget.DatePickerCalendarDelegate</string>
          <string>android.view.View$AccessibilityDelegate</string>
          <string>android.widget.RelativeLayout$TopToBottomLeftToRightComparator</string>
          <string>android.widget.RemoteViewsService</string>
          <string>android.widget.Editor$CorrectionHighlighter</string>
          <string>android.widget.ActionMenuPresenter$OpenOverflowRunnable</string>
          <string>android.widget.RemoteViews$TextViewDrawableAction</string>
          <string>java.lang.CharSequence</string>
          <string>com.android.internal.widget.IRemoteViewsFactory$Stub$Proxy</string>
          <string>android.widget.DropDownListView$ResolveHoverRunnable</string>
          <string>android.widget.CalendarViewLegacyDelegate$WeeksAdapter$CalendarGestureListener</string>
          <string>android.widget.ActivityChooserModel$DataModelPackageMonitor</string>
          <string>android.widget.NumberPicker$BeginSoftInputOnLongPressCommand</string>
          <string>android.widget.AdapterViewAnimator$1</string>
          <string>android.widget.AutoCompleteTextView$PopupDataSetObserver$1</string>
          <string>android.widget.AdapterViewAnimator$2</string>
          <string>android.widget.ListView$FixedViewInfo</string>
          <string>android.widget.AbsListView$RecycleBin</string>
          <string>android.widget.AbsListView$CheckForTap</string>
          <string>android.widget.ActivityChooserModel$OnChooseActivityListener</string>
          <string>android.widget.AppSecurityPermissions</string>
          <string>android.widget.NumberPicker$InputTextFilter</string>
          <string>android.widget.AdapterViewAnimator$SavedState$1</string>
          <string>android.widget.ShareActionProvider$OnShareTargetSelectedListener</string>
          <string>android.widget.TimePicker$AbstractTimePickerDelegate</string>
          <string>android.widget.Spinner$DropdownPopup$1</string>
          <string>android.widget.Spinner$DropdownPopup$2</string>
          <string>android.widget.Spinner$DropdownPopup$3</string>
          <string>android.text.SpanSet</string>
          <string>android.widget.PopupMenu$OnDismissListener</string>
          <string>android.widget.RemoteViewsAdapter$RemoteViewsFrameLayout</string>
          <string>android.widget.ActionMenuPresenter$PopupPresenterCallback</string>
          <string>android.widget.TableRow</string>
          <string>android.widget.RadialTimePickerView$OnValueSelectedListener</string>
          <string>android.view.accessibility.AccessibilityNodeInfo$CollectionInfo</string>
          <string>android.widget.ListPopupWindow$1</string>
          <string>android.widget.ListPopupWindow$2</string>
          <string>android.widget.ListPopupWindow$3</string>
          <string>java.lang.reflect.Array</string>
          <string>com.android.framework.protobuf.nano.android.ParcelableExtendableMessageNano</string>
          <string>android.widget.SpellChecker</string>
          <string>android.widget.TabHost$OnTabChangeListener</string>
          <string>android.widget.ListPopupWindow$ListSelectorHider</string>
          <string>android.widget.CheckedTextView$SavedState$1</string>
          <string>android.view.RenderNode</string>
          <string>android.widget.AbsListView$1</string>
          <string>android.widget.RemoteViews$OnViewAppliedListener</string>
          <string>android.widget.SpellChecker$SpellParser</string>
          <string>android.graphics.drawable.shapes.PathShape</string>
          <string>android.view.AccessibilityIterators$TextSegmentIterator</string>
          <string>android.widget.ActionMenuPresenter$ActionButtonSubmenu</string>
          <string>android.widget.AdapterView</string>
          <string>android.widget.AbsListView$3</string>
          <string>android.widget.AbsListView$2</string>
          <string>android.widget.ResourceCursorAdapter</string>
          <string>android.widget.AbsListView$4</string>
          <string>android.widget.ViewSwitcher</string>
          <string>android.widget.AbsListView$InputConnectionWrapper</string>
          <string>android.widget.DatePickerController</string>
          <string>android.widget.Toast$TN</string>
          <string>android.widget.CalendarViewLegacyDelegate</string>
          <string>android.widget.NumberPicker$TwoDigitFormatter</string>
          <string>android.view.accessibility.AccessibilityRecord</string>
          <string>android.widget.ListView</string>
          <string>android.widget.CalendarView</string>
          <string>android.widget.FastScroller$3</string>
          <string>android.widget.FastScroller$4</string>
          <string>android.widget.SearchView$SearchAutoComplete</string>
          <string>android.widget.FastScroller$5</string>
          <string>android.widget.FastScroller$6</string>
          <string>android.widget.DatePickerSpinnerDelegate</string>
          <string>android.widget.Filter$RequestHandler</string>
          <string>android.widget.ActivityChooserModel$PersistHistoryAsyncTask</string>
          <string>android.text.InputFilter$AllCaps</string>
          <string>android.widget.ForwardingListener$TriggerLongPress</string>
          <string>android.widget.RemoteViews$SetRemoteViewsAdapterList</string>
          <string>android.widget.ActivityChooserView$1</string>
          <string>android.widget.Editor$SuggestionHelper</string>
          <string>android.widget.OverScroller$SplineOverScroller</string>
          <string>android.widget.ActivityChooserView$4</string>
          <string>android.widget.AbsoluteLayout</string>
          <string>android.widget.ActivityChooserView$5</string>
          <string>android.widget.ActivityChooserView$2</string>
          <string>android.widget.ActivityChooserView$3</string>
          <string>android.widget.TableLayout$PassThroughHierarchyChangeListener</string>
          <string>java.lang.ref.WeakReference</string>
          <string>android.widget.FastScroller$1</string>
          <string>android.widget.FastScroller$2</string>
          <string>android.widget.GridLayout$Interval</string>
          <string>android.widget.Gallery$FlingRunnable</string>
          <string>android.widget.RemoteViews$ActionException</string>
          <string>android.widget.StackView$1</string>
          <string>android.widget.ProgressBar$SavedState</string>
          <string>android.widget.Advanceable</string>
          <string>android.widget.CalendarViewMaterialDelegate</string>
          <string>android.util.IntProperty</string>
          <string>com.android.internal.widget.IRemoteViewsFactory</string>
          <string>android.widget.TextSwitcher</string>
          <string>java.lang.Class</string>
          <string>android.renderscript.RSSurfaceView</string>
          <string>android.widget.DigitalClock$FormatChangeObserver</string>
          <string>android.text.TextLine</string>
          <string>android.widget.MediaController$8</string>
          <string>android.widget.MediaController$7</string>
          <string>com.android.internal.view.menu.MenuBuilder$Callback</string>
          <string>android.widget.PopupMenu</string>
          <string>android.widget.MediaController$4</string>
          <string>android.widget.MediaController$3</string>
          <string>com.android.internal.util.FastMath</string>
          <string>android.widget.MediaController$6</string>
          <string>android.widget.NumberPicker$AccessibilityNodeProviderImpl</string>
          <string>android.widget.AdapterView$AdapterContextMenuInfo</string>
          <string>android.widget.MediaController$5</string>
          <string>android.widget.MediaController$2</string>
          <string>android.widget.MediaController$1</string>
          <string>android.widget.AnalogClock$1</string>
          <string>android.widget.RemoteViews$SetPendingIntentTemplate$1</string>
          <string>android.text.format.DateFormat</string>
          <string>android.text.style.SpellCheckSpan</string>
          <string>android.graphics.drawable.shapes.RectShape</string>
          <string>android.widget.Chronometer$1</string>
          <string>android.widget.WrapperListAdapter</string>
          <string>android.text.TextWatcher</string>
          <string>android.widget.RemoteViewsAdapter$FixedSizeRemoteViewsCache</string>
          <string>com.android.internal.widget.PreferenceImageView</string>
          <string>android.text.Layout$TabStops</string>
          <string>android.widget.SimpleCursorAdapter</string>
          <string>android.widget.SpellChecker$1</string>
          <string>android.widget.Editor$EditOperation$1</string>
          <string>java.text.NumberFormat</string>
          <string>android.widget.DayPickerView$1</string>
          <string>android.widget.DayPickerView$2</string>
          <string>android.text.Spannable$Factory</string>
          <string>android.widget.DayPickerView$3</string>
          <string>android.text.SpanWatcher</string>
          <string>android.widget.RemoteViewsAdapter$RemoteViewsCacheKey</string>
          <string>com.android.framework.protobuf.nano.android.ParcelableMessageNano</string>
          <string>android.view.ViewGroup$OnHierarchyChangeListener</string>
          <string>android.text.SpannableString</string>
          <string>android.widget.Editor$InsertionPointCursorController</string>
          <string>android.widget.CalendarViewLegacyDelegate$2</string>
          <string>android.widget.TabHost</string>
          <string>android.widget.CalendarViewLegacyDelegate$1</string>
          <string>android.widget.PopupWindow$PopupDecorView$2$1</string>
          <string>android.widget.AutoCompleteTextView$DropDownItemClickListener</string>
          <string>android.widget.SlidingDrawer$DrawerToggler</string>
          <string>android.widget.CursorTreeAdapter</string>
          <string>android.widget.SectionIndexer</string>
          <string>android.widget.ShareActionProvider$ShareActivityChooserModelPolicy</string>
          <string>android.widget.NumberPicker$PressedStateHelper</string>
          <string>android.widget.TabHost$LabelIndicatorStrategy</string>
          <string>android.widget.ActionMenuPresenter$MenuItemLayoutInfo</string>
          <string>android.widget.ZoomButtonsController$OnZoomListener</string>
          <string>android.widget.VideoView$3</string>
          <string>android.widget.VideoView$4</string>
          <string>android.widget.VideoView$5</string>
          <string>android.widget.VideoView$6</string>
          <string>android.widget.VideoView$1</string>
          <string>android.widget.VideoView$2</string>
          <string>android.graphics.drawable.shapes.ArcShape</string>
          <string>android.widget.AppSecurityPermissions$MyPermissionGroupInfo</string>
          <string>android.widget.VideoView$7</string>
          <string>android.view.ViewDebug$IntToString</string>
          <string>android.widget.VideoView$8</string>
          <string>com.android.internal.view.menu.BaseMenuPresenter</string>
          <string>android.widget.ExpandableListView$SavedState</string>
          <string>android.widget.DayPickerPagerAdapter$1</string>
          <string>android.widget.CursorTreeAdapter$MyCursorHelper$MyContentObserver</string>
          <string>android.widget.HorizontalScrollView$SavedState$1</string>
          <string>android.view.ActionProvider$SubUiVisibilityListener</string>
          <string>android.graphics.drawable.shapes.OvalShape</string>
          <string>android.widget.RelativeLayout</string>
          <string>android.widget.TimePickerClockDelegate$1</string>
          <string>android.widget.TimePickerClockDelegate$2</string>
          <string>android.widget.TimePickerClockDelegate$3</string>
          <string>android.widget.TimePickerClockDelegate$4</string>
          <string>android.widget.GridLayout$Alignment</string>
          <string>android.widget.TimePickerClockDelegate$5</string>
          <string>android.widget.TimePickerClockDelegate$6</string>
          <string>android.widget.Toolbar$SavedState$1</string>
          <string>android.widget.AdapterView$SelectionNotifier</string>
          <string>android.widget.RemoteViews$SetOnClickFillInIntent$1</string>
          <string>android.widget.TimePicker$AbstractTimePickerDelegate$SavedState$1</string>
          <string>android.widget.ViewSwitcher$ViewFactory</string>
          <string>android.widget.Toast$TN$2</string>
          <string>android.widget.RemoteViews$SetOnClickFillInIntent</string>
          <string>android.widget.OnDateChangedListener</string>
          <string>android.graphics.Paint$Style</string>
          <string>android.view.VelocityTracker</string>
          <string>android.widget.Toast$TN$1</string>
          <string>android.widget.TextClock</string>
          <string>android.widget.Toolbar$ExpandedActionViewMenuPresenter</string>
          <string>android.widget.TextView$CharWrapper</string>
          <string>android.widget.RadioGroup$OnCheckedChangeListener</string>
          <string>android.widget.YearPickerView</string>
          <string>android.icu.text.DisplayContext</string>
          <string>android.widget.TimePickerSpinnerDelegate$4</string>
          <string>android.widget.CompoundButton</string>
          <string>android.widget.AbsListView</string>
          <string>android.widget.TimePickerSpinnerDelegate$3</string>
          <string>android.widget.RadialTimePickerView</string>
          <string>android.widget.TimePickerSpinnerDelegate$2</string>
          <string>android.widget.ActivityChooserModel$ActivityChooserModelClient</string>
          <string>android.widget.TimePickerSpinnerDelegate$1</string>
          <string>android.graphics.drawable.shapes.RoundRectShape</string>
          <string>android.widget.ActionMenuView</string>
          <string>android.widget.DigitalClock</string>
          <string>android.icu.text.SimpleDateFormat</string>
          <string>android.widget.DateTimeView$ReceiverInfo$1</string>
          <string>android.widget.DateTimeView$ReceiverInfo$2</string>
          <string>android.widget.ViewFlipper</string>
          <string>android.widget.RemoteViewsAdapter$RemoteViewsMetaData</string>
          <string>android.widget.RemoteViews$LayoutParamAction</string>
          <string>android.view.TouchDelegate</string>
          <string>android.graphics.Paint$Align</string>
          <string>android.widget.DatePicker</string>
          <string>java.lang.CloneNotSupportedException</string>
          <string>android.widget.HorizontalScrollView</string>
          <string>android.widget.PopupWindow$PopupBackgroundView</string>
          <string>android.widget.AbsListView$PositionScroller$2</string>
          <string>android.widget.HeaderViewListAdapter</string>
          <string>android.widget.AbsListView$PositionScroller$1</string>
          <string>android.widget.AbsListView$PositionScroller$3</string>
          <string>android.widget.ActionMenuView$MenuBuilderCallback</string>
          <string>android.widget.ProgressBar$ProgressTintInfo</string>
          <string>android.widget.NumberPicker$OnValueChangeListener</string>
          <string>android.transition.Transition$TransitionListener</string>
          <string>android.widget.RemoteViews$SetRemoteInputsAction</string>
          <string>com.android.internal.view.menu.MenuPresenter$Callback</string>
          <string>android.widget.Editor$TextActionModeCallback</string>
          <string>android.widget.ZoomButtonsController$3</string>
          <string>android.widget.ZoomButtonsController$4</string>
          <string>android.widget.ZoomButtonsController$1</string>
          <string>android.widget.ZoomButtonsController$2</string>
          <string>android.widget.Editor$ErrorPopup</string>
          <string>android.widget.Editor$TextRenderNode</string>
          <string>android.widget.ZoomButtonsController$5</string>
          <string>android.widget.ExpandableListView$SavedState$1</string>
          <string>android.widget.ActivityChooserModel$DefaultSorter</string>
          <string>android.media.MediaPlayer$OnCompletionListener</string>
          <string>android.view.SurfaceHolder$BadSurfaceTypeException</string>
          <string>android.widget.AutoCompleteTextView$OnDismissListener</string>
          <string>android.widget.Editor$InsertionHandleView</string>
          <string>android.widget.Toast</string>
          <string>android.widget.RtlSpacingHelper</string>
          <string>android.widget.AdapterView$OnItemClickListener</string>
          <string>android.widget.AccessibilityIterators$LineTextSegmentIterator</string>
          <string>android.text.method.ArrowKeyMovementMethod</string>
          <string>android.widget.RemoteViews$SetOnClickPendingIntent$1</string>
          <string>android.widget.ExpandableListView$OnChildClickListener</string>
          <string>android.widget.Editor$SuggestionSpanInfo</string>
          <string>android.widget.RadioGroup$PassThroughHierarchyChangeListener</string>
          <string>android.widget.RemoteViews$ViewPaddingAction</string>
          <string>android.widget.CursorFilter</string>
          <string>com.android.internal.widget.MediaNotificationView</string>
          <string>android.text.GraphicsOperations</string>
          <string>android.widget.AutoCompleteTextView$MyWatcher</string>
          <string>android.widget.TabHost$2</string>
          <string>android.text.BoringLayout$Metrics</string>
          <string>android.widget.ActionMenuPresenter$OverflowMenuButton</string>
          <string>android.widget.DialerFilter</string>
          <string>android.text.style.ParagraphStyle</string>
          <string>android.widget.TabHost$1</string>
          <string>android.widget.CursorTreeAdapter$MyCursorHelper$MyDataSetObserver</string>
          <string>com.android.framework.protobuf.nano.android.ParcelableMessageNanoCreator</string>
          <string>android.widget.AbsoluteLayout$LayoutParams</string>
          <string>android.text.method.MetaKeyKeyListener</string>
          <string>android.widget.RemoteViews$SetDrawableParameters</string>
          <string>android.widget.Filter$Delayer</string>
          <string>java.lang.Short</string>
          <string>android.widget.AdapterViewAnimator</string>
          <string>android.widget.RemoteViews</string>
          <string>android.widget.TableLayout</string>
          <string>android.widget.TimePickerClockDelegate$NearestTouchDelegate</string>
          <string>com.android.internal.view.menu.MenuPresenter</string>
          <string>android.widget.Toolbar$LayoutParams</string>
          <string>com.android.internal.view.menu.MenuBuilder$ItemInvoker</string>
          <string>android.util.DisplayMetrics</string>
          <string>android.app.AlertDialog$Builder</string>
          <string>android.text.method.DigitsKeyListener</string>
          <string>android.widget.ProgressBar$AccessibilityEventSender</string>
          <string>android.widget.Editor$SuggestionHelper$SuggestionSpanComparator</string>
          <string>android.widget.ActivityChooserView</string>
          <string>android.widget.Editor$TextViewPositionListener</string>
          <string>android.widget.AbsListView$RecyclerListener</string>
          <string>android.icu.util.TimeZone</string>
          <string>android.widget.ActionMenuView$LayoutParams</string>
          <string>android.widget.TimePickerSpinnerDelegate</string>
          <string>android.media.WebVttRenderer</string>
          <string>android.widget.Editor$UndoInputFilter</string>
          <string>android.widget.CalendarView$AbstractCalendarViewDelegate</string>
          <string>android.widget.ResourceCursorTreeAdapter</string>
          <string>android.widget.Editor$4</string>
          <string>android.widget.SlidingDrawer$OnDrawerOpenListener</string>
          <string>android.widget.CalendarViewMaterialDelegate$1</string>
          <string>android.widget.FastScroller</string>
          <string>android.widget.CheckedTextView$SavedState</string>
          <string>android.widget.ActionMenuPresenter</string>
          <string>android.widget.Editor$1</string>
          <string>android.widget.TextView$SavedState$1</string>
          <string>android.view.Choreographer$FrameCallback</string>
          <string>android.widget.Editor$3</string>
          <string>android.widget.ListPopupWindow$PopupTouchInterceptor</string>
          <string>android.widget.Editor$2</string>
          <string>android.widget.RemoteViews$4</string>
          <string>android.widget.RemoteViews$3</string>
          <string>android.widget.AbsListView$WindowRunnnable</string>
          <string>android.widget.RemoteViews$2</string>
          <string>android.widget.RemoteViews$1</string>
          <string>android.text.method.DateKeyListener</string>
          <string>android.widget.AdapterViewFlipper$2</string>
          <string>android.widget.AdapterViewFlipper$1</string>
          <string>android.widget.AdapterViewAnimator$ViewAndMetaData</string>
          <string>android.view.DisplayListCanvas</string>
          <string>android.widget.RadioButton</string>
          <string>android.widget.ImageView</string>
          <string>com.android.internal.view.menu.MenuView</string>
          <string>android.widget.RemoteViews$SetOnClickPendingIntent</string>
          <string>android.widget.TimePickerClockDelegate$ClickActionDelegate</string>
          <string>android.widget.AppSecurityPermissions$PermissionItemView</string>
          <string>android.widget.SearchView$10</string>
          <string>android.widget.DoubleDigitManager$1</string>
          <string>android.widget.SearchView$11</string>
          <string>android.widget.RemoteViewsAdapter$RemoteViewsAdapterServiceConnection</string>
          <string>com.android.internal.view.menu.MenuPopup</string>
          <string>com.android.internal.widget.IRemoteViewsFactory$Stub</string>
          <string>android.widget.Editor$EasyEditPopupWindow</string>
          <string>android.widget.TabWidget$TabClickListener</string>
          <string>android.widget.ScrollView$SavedState$1</string>
          <string>android.widget.Editor$InsertionHandleView$2</string>
          <string>android.media.Metadata</string>
          <string>android.widget.Editor$InsertionHandleView$1</string>
          <string>android.widget.RemoteViews$AsyncApplyTask</string>
          <string>android.graphics.PorterDuffColorFilter</string>
          <string>android.widget.NumberPicker$SetSelectionCommand</string>
          <string>android.text.InputFilter</string>
          <string>android.widget.GridLayout$3</string>
          <string>android.widget.MediaController</string>
          <string>android.widget.GridLayout$4</string>
          <string>android.widget.Spinner$2</string>
          <string>android.widget.GridLayout$1</string>
          <string>android.widget.GridLayout$2</string>
          <string>android.widget.GridLayout$7</string>
          <string>android.widget.RadioGroup</string>
          <string>android.widget.Spinner$1</string>
          <string>android.widget.GridLayout$8</string>
          <string>android.widget.ListView$ArrowScrollFocusResult</string>
          <string>android.widget.GridLayout$5</string>
          <string>android.widget.GridLayout$6</string>
          <string>android.widget.GridLayout$Axis$1</string>
          <string>android.widget.RatingBar</string>
          <string>com.android.internal.widget.DialogTitle</string>
          <string>android.widget.GridLayout$Bounds</string>
          <string>android.widget.SearchView</string>
          <string>android.media.MediaPlayer$OnPreparedListener</string>
          <string>android.widget.ExpandableListConnector$MyDataSetObserver</string>
          <string>android.widget.DatePicker$AbstractDatePickerDelegate$SavedState</string>
          <string>android.widget.DatePicker$OnDateChangedListener</string>
          <string>android.widget.RemoteViewsAdapter</string>
          <string>android.widget.StackView$HolographicHelper</string>
          <string>android.widget.DatePicker$DatePickerDelegate</string>
          <string>android.widget.AbsListView$FlingRunnable</string>
          <string>android.widget.TabHost$TabSpec</string>
          <string>android.widget.DoubleDigitManager</string>
          <string>libcore.icu.LocaleData</string>
          <string>android.widget.SlidingDrawer$OnDrawerCloseListener</string>
          <string>android.widget.GridLayout$Arc</string>
          <string>android.widget.ZoomButtonsController</string>
          <string>java.text.ParseException</string>
          <string>android.widget.ProgressBar$SavedState$1</string>
          <string>android.text.method.DateTimeKeyListener</string>
          <string>android.inputmethodservice.CompactExtractEditLayout</string>
          <string>android.widget.RelativeLayout$DependencyGraph</string>
          <string>android.content.ClipData$Item</string>
          <string>android.widget.SearchView$8</string>
          <string>android.widget.SearchView$9</string>
          <string>android.widget.AbsSpinner</string>
          <string>android.widget.SearchView$4</string>
          <string>android.widget.ListAdapter</string>
          <string>android.widget.SearchView$5</string>
          <string>android.widget.SearchView$6</string>
          <string>android.widget.SearchView$7</string>
          <string>android.widget.AppSecurityPermissions$PermissionItemView$1</string>
          <string>android.widget.SearchView$1</string>
          <string>android.widget.SearchView$2</string>
          <string>android.widget.SearchView$3</string>
          <string>android.widget.ListView$FocusSelector</string>
          <string>android.widget.PopupWindow$PopupDecorView</string>
          <string>android.widget.TextView$OnEditorActionListener</string>
          <string>android.widget.AdapterViewAnimator$1$1</string>
          <string>android.widget.YearPickerView$2</string>
          <string>android.widget.YearPickerView$1</string>
          <string>android.app.ExpandableListActivity</string>
          <string>android.widget.VideoView</string>
          <string>android.widget.GridLayout$PackedMap</string>
          <string>android.widget.Editor$InputMethodState</string>
          <string>android.widget.YearPickerView$OnYearSelectedListener</string>
          <string>android.widget.CursorAdapter$ChangeObserver</string>
          <string>android.widget.ActionMenuPresenter$OverflowPopup</string>
          <string>android.widget.DayPickerPagerAdapter$ViewHolder</string>
          <string>android.widget.AbsSpinner$SavedState$1</string>
          <string>android.widget.ActivityChooserModel$ActivitySorter</string>
          <string>android.widget.TabHost$ContentStrategy</string>
          <string>android.widget.Chronometer$OnChronometerTickListener</string>
          <string>android.text.style.SuggestionRangeSpan</string>
          <string>android.widget.ProgressBar</string>
          <string>android.widget.ActionMenuView$ActionMenuPresenterCallback</string>
          <string>android.widget.ExpandableListView$ExpandableListContextMenuInfo</string>
          <string>android.widget.RelativeLayout$LayoutParams</string>
          <string>android.widget.ExpandableListView$OnGroupCollapseListener</string>
          <string>android.widget.Editor$SpanController$1</string>
          <string>android.widget.CalendarView$CalendarViewDelegate</string>
          <string>android.widget.RemoteViews$OnClickHandler</string>
          <string>android.widget.QuickContactBadge$QueryHandler</string>
          <string>android.widget.DropDownListView</string>
          <string>android.widget.DayPickerView</string>
          <string>com.android.internal.view.menu.MenuView$ItemView</string>
          <string>android.widget.RemoteViews$SetPendingIntentTemplate</string>
          <string>android.widget.GridLayout$Assoc</string>
          <string>android.widget.CompoundButton$SavedState$1</string>
          <string>android.widget.ExpandableListView$OnGroupClickListener</string>
          <string>android.widget.Editor$SpanController$2</string>
          <string>android.widget.Editor$SuggestionsPopupWindow$2</string>
          <string>android.widget.Editor$SuggestionsPopupWindow$1</string>
          <string>android.text.BoringLayout</string>
          <string>android.widget.SimpleCursorTreeAdapter</string>
          <string>android.widget.SuggestionsAdapter$ChildViewCache</string>
          <string>android.widget.ActivityChooserView$Callbacks</string>
          <string>android.widget.Toolbar$2</string>
          <string>android.widget.RemoteViewsAdapter$RemoteViewsAdapterServiceConnection$1</string>
          <string>android.widget.Toolbar$3</string>
          <string>android.widget.Toolbar$1</string>
          <string>android.media.SubtitleTrack$RenderingWidget</string>
          <string>android.widget.RemoteViewsAdapter$RemoteViewsAdapterServiceConnection$2</string>
          <string>android.widget.AdapterView$OnItemSelectedListener</string>
          <string>android.widget.RemoteViews$MemoryUsageCounter</string>
          <string>android.R$styleable</string>
          <string>android.widget.TimePickerClockDelegate</string>
          <string>android.widget.PopupWindow$2</string>
          <string>android.widget.PopupWindow$1</string>
          <string>android.widget.ExpandableListAdapter</string>
          <string>android.widget.TextView$SavedState</string>
          <string>android.widget.ZoomButton$1</string>
          <string>android.widget.TabHost$TabContentFactory</string>
          <string>android.widget.Editor$PinnedPopupWindow</string>
          <string>android.widget.TabHost$FactoryContentStrategy</string>
          <string>android.transition.Transition$EpicenterCallback</string>
          <string>android.widget.Spinner$SpinnerPopup</string>
          <string>android.media.MediaPlayer$OnVideoSizeChangedListener</string>
          <string>android.widget.RemoteViews$ReflectionAction</string>
          <string>java.text.Collator</string>
          <string>android.widget.ExpandableListConnector$GroupMetadata$1</string>
          <string>android.widget.QuickContactBadge</string>
          <string>android.widget.DigitalClock$1</string>
          <string>android.widget.Spinner$DropdownPopup</string>
          <string>android.widget.TextView$Marquee</string>
          <string>android.widget.RemoteViews$BitmapReflectionAction</string>
          <string>android.widget.ArrayAdapter</string>
          <string>android.widget.SimpleMonthView$MonthViewTouchHelper</string>
          <string>android.widget.ProgressBar$1</string>
          <string>android.widget.PopupWindow$4</string>
          <string>android.widget.PopupWindow$3</string>
          <string>android.widget.ZoomButtonsController$Container</string>
          <string>android.widget.Filter$RequestArguments</string>
          <string>android.widget.ForwardingListener$DisallowIntercept</string>
          <string>android.text.style.ClickableSpan</string>
          <string>android.widget.BaseExpandableListAdapter</string>
          <string>android.widget.Editor$EditOperation</string>
          <string>android.widget.RemoteViews$RunnableAction</string>
          <string>android.widget.TimePicker$AbstractTimePickerDelegate$SavedState</string>
          <string>android.widget.GridLayout</string>
          <string>android.media.SubtitleController$Renderer</string>
          <string>android.widget.SearchView$SavedState</string>
          <string>android.widget.Checkable</string>
          <string>android.widget.RemoteViews$ViewGroupAction$1</string>
          <string>android.widget.Editor$SpanController</string>
          <string>android.widget.ActivityChooserModel</string>
          <string>android.icu.util.Calendar</string>
          <string>android.widget.CursorTreeAdapter$MyCursorHelper</string>
          <string>android.widget.NumberPicker</string>
          <string>android.widget.AbsListView$SavedState$1</string>
          <string>android.widget.CalendarView$OnDateChangeListener</string>
          <string>android.widget.AutoCompleteTextView$PassThroughClickListener</string>
          <string>android.widget.Filter$FilterListener</string>
          <string>android.widget.RemoteViews$ViewGroupAction</string>
          <string>android.text.GetChars</string>
          <string>android.widget.RelativeLayout$DependencyGraph$Node</string>
          <string>android.widget.Toolbar</string>
          <string>android.view.SurfaceHolder$Callback</string>
          <string>android.widget.TextView$2</string>
          <string>android.widget.TextView$1</string>
          <string>android.text.SpannableStringInternal</string>
          <string>android.widget.TextView$3</string>
          <string>android.widget.MediaController$MediaPlayerControl</string>
          <string>android.widget.Editor$PositionListener</string>
          <string>android.widget.Scroller</string>
          <string>android.widget.RemoteViewsAdapter$RemoteViewsAdapterServiceConnection$1$1</string>
          <string>android.widget.RadioGroup$LayoutParams</string>
          <string>android.widget.ActionMenuPresenter$SavedState$1</string>
          <string>android.widget.ActivityChooserModel$HistoricalRecord</string>
          <string>android.widget.GridLayout$MutableInt</string>
          <string>android.widget.SlidingDrawer$1</string>
          <string>android.widget.TextView$Drawables</string>
          <string>android.graphics.Color</string>
          <string>android.widget.StackView</string>
          <string>android.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener</string>
          <string>android.widget.AnalogClock</string>
          <string>android.widget.Editor$SuggestionsPopupWindow$SuggestionAdapter</string>
          <string>android.widget.Spinner$DialogPopup</string>
          <string>android.widget.AbsSpinner$SavedState</string>
          <string>android.widget.MultiAutoCompleteTextView</string>
          <string>java.math.BigDecimal</string>
          <string>com.android.internal.view.menu.MenuAdapter</string>
          <string>android.widget.SearchView$SavedState$1</string>
          <string>com.android.internal.view.menu.SubMenuBuilder</string>
          <string>android.widget.AccessibilityIterators</string>
          <string>android.widget.TextView$BufferType</string>
          <string>android.widget.SimpleCursorAdapter$ViewBinder</string>
          <string>android.widget.RemoteViewsService$RemoteViewsFactoryAdapter</string>
          <string>android.view.ActionProvider</string>
          <string>android.view.ViewTreeObserver$OnGlobalLayoutListener</string>
          <string>android.widget.SuggestionsAdapter$1</string>
          <string>android.widget.Spinner$DropDownAdapter</string>
          <string>android.widget.SuggestionsAdapter</string>
          <string>android.widget.ActionMenuPresenter$ItemAnimationInfo</string>
          <string>android.widget.AbsListView$CheckForKeyLongPress</string>
          <string>android.provider.ContactsContract$QuickContact</string>
          <string>android.widget.StackView$StackSlider</string>
          <string>android.widget.HeterogeneousExpandableList</string>
          <string>android.widget.RadialTimePickerView$RadialPickerTouchHelper</string>
          <string>android.widget.TabHost$LabelAndIconIndicatorStrategy</string>
          <string>android.widget.Space</string>
          <string>android.widget.Filter$ResultsHandler</string>
          <string>android.widget.Gallery$LayoutParams</string>
          <string>android.widget.ExpandableListConnector$GroupMetadata</string>
          <string>android.widget.DatePickerSpinnerDelegate$1</string>
          <string>android.widget.DatePickerSpinnerDelegate$2</string>
          <string>android.transition.Transition$TransitionListenerAdapter</string>
          <string>android.text.method.AllCapsTransformationMethod</string>
          <string>android.widget.AbsListView$OnScrollListener</string>
          <string>android.widget.RadioGroup$CheckedStateTracker</string>
          <string>android.widget.ScrollView</string>
          <string>android.widget.CheckedTextView</string>
          <string>com.android.internal.view.menu.MenuBuilder</string>
          <string>android.widget.RemoteViews$Action</string>
          <string>android.widget.Editor$HandleView</string>
          <string>android.widget.Editor$SuggestionsPopupWindow$CustomPopupWindow</string>
          <string>android.widget.CursorAdapter$MyDataSetObserver</string>
          <string>android.text.Spannable</string>
          <string>android.widget.AppSecurityPermissions$MyPermissionInfo</string>
          <string>android.widget.AbsSpinner$RecycleBin</string>
          <string>android.widget.TableLayout$LayoutParams</string>
          <string>android.widget.ShareActionProvider</string>
          <string>android.widget.RemoteViews$RuntimeAction</string>
          <string>android.widget.TextClock$1</string>
          <string>java.lang.Math</string>
          <string>android.widget.Toolbar$SavedState</string>
          <string>android.widget.Editor$Blink</string>
          <string>android.widget.TextClock$2</string>
          <string>android.text.method.TransformationMethod2</string>
          <string>android.view.ViewGroup$LayoutParams</string>
          <string>android.widget.RemoteViewsAdapter$2</string>
          <string>android.widget.RemoteViewsAdapter$3</string>
          <string>android.widget.RemoteViewsAdapter$4</string>
          <string>android.widget.RemoteViewsAdapter$5</string>
          <string>android.widget.RemoteViewsAdapter$6</string>
          <string>android.widget.GridLayout$LayoutParams</string>
          <string>android.util.StateSet</string>
          <string>android.widget.Editor$CursorAnchorInfoNotifier</string>
          <string>android.widget.DayPickerPagerAdapter</string>
          <string>android.widget.Editor</string>
          <string>android.widget.CursorAdapter</string>
          <string>android.widget.MenuPopupWindow</string>
          <string>android.widget.TimePicker</string>
          <string>android.widget.Editor$DragLocalState</string>
          <string>android.widget.AutoCompleteTextView$PopupDataSetObserver</string>
          <string>android.widget.TimePicker$OnTimeChangedListener</string>
          <string>android.widget.RemoteViews$TextViewDrawableColorFilterAction</string>
          <string>android.widget.Adapter</string>
          <string>android.widget.ActionMenuPresenter$SavedState</string>
          <string>android.widget.Filter</string>
          <string>android.widget.TabHost$ViewIdContentStrategy</string>
          <string>com.android.internal.widget.NumericTextView</string>
          <string>android.widget.ListPopupWindow$PopupScrollListener</string>
          <string>android.widget.DatePicker$AbstractDatePickerDelegate</string>
          <string>android.widget.YearPickerView$YearAdapter</string>
          <string>android.widget.Scroller$ViscousFluidInterpolator</string>
          <string>android.widget.Spinner$SavedState$1</string>
          <string>android.widget.RemoteViewsAdapter$1</string>
          <string>android.widget.AbsListView$AdapterDataSetObserver</string>
          <string>android.widget.SlidingDrawer</string>
          <string>android.widget.ActionMenuView$OnMenuItemClickListener</string>
          <string>android.widget.AdapterViewAnimator$CheckForTap</string>
          <string>android.widget.ExpandableListPosition</string>
          <string>android.widget.AbsListView$PositionScroller</string>
          <string>android.widget.Filter$FilterResults</string>
          <string>android.widget.RemoteViews$TextViewSizeAction</string>
          <string>android.widget.Chronometer</string>
          <string>android.widget.Editor$EasyEditDeleteListener</string>
          <string>libcore.icu.DateUtilsBridge</string>
          <string>android.widget.Spinner</string>
          <string>java.text.DateFormatSymbols</string>
          <string>android.widget.CursorFilter$CursorFilterClient</string>
          <string>android.widget.NumberPicker$Formatter</string>
          <string>android.widget.DatePickerCalendarDelegate$1</string>
          <string>android.widget.AppSecurityPermissions$PermissionInfoComparator</string>
          <string>android.widget.ExpandableListConnector$PositionMetadata</string>
          <string>android.widget.RemoteViewsAdapter$RemoteViewsIndexMetaData</string>
          <string>android.widget.RemoteViews$MutablePair</string>
          <string>android.widget.DatePickerCalendarDelegate$3</string>
          <string>android.widget.DatePickerCalendarDelegate$2</string>
          <string>android.text.InputFilter$LengthFilter</string>
          <string>android.widget.DatePickerCalendarDelegate$4</string>
          <string>android.text.method.NumberKeyListener</string>
          <string>android.widget.AbsListView$CheckForLongPress</string>
          <string>android.widget.EdgeEffect</string>
          <string>android.widget.RatingBar$OnRatingBarChangeListener</string>
          <string>android.widget.MultiAutoCompleteTextView$Tokenizer</string>
          <string>android.widget.NumberPicker$ChangeCurrentByOneFromLongPressCommand</string>
          <string>android.widget.Editor$SelectionHandleView</string>
          <string>android.widget.VideoView$5$1</string>
          <string>android.widget.NumberPicker$OnScrollListener</string>
          <string>android.widget.NumberPicker$CustomEditText</string>
          <string>android.widget.AbsListView$SavedState</string>
          <string>android.widget.Editor$SelectionModifierCursorController</string>
          <string>android.widget.TabHost$IndicatorStrategy</string>
          <string>android.view.View$OnAttachStateChangeListener</string>
          <string>android.widget.AbsListView$LayoutParams</string>
          <string>android.util.LongSparseArray</string>
          <string>android.widget.Editor$SuggestionsPopupWindow</string>
          <string>android.text.method.DialerKeyListener</string>
          <string>android.widget.MenuPopupWindow$MenuDropDownListView</string>
          <string>android.widget.AbsListView$FlingRunnable$1</string>
          <string>android.widget.RemoteViewsService$RemoteViewsFactory</string>
          <string>com.android.internal.view.menu.ListMenuItemView</string>
          <string>android.widget.DayPickerView$OnDaySelectedListener</string>
          <string>android.widget.ThemedSpinnerAdapter</string>
          <string>android.widget.SimpleAdapter$SimpleFilter</string>
          <string>android.widget.AbsListView$MultiChoiceModeListener</string>
          <string>android.widget.GridLayout$Axis</string>
          <string>android.widget.AdapterViewFlipper</string>
          <string>android.widget.CalendarViewLegacyDelegate$ScrollStateRunnable</string>
          <string>android.text.style.URLSpan</string>
          <string>android.widget.TableRow$ChildrenTracker</string>
          <string>android.widget.AbsListView$SelectionBoundsAdjuster</string>
          <string>com.android.internal.widget.DrawingSpace</string>
          <string>java.lang.IncompatibleClassChangeError</string>
          <string>android.view.ViewGroupOverlay</string>
          <string>android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo</string>
          <string>android.text.method.TimeKeyListener</string>
          <string>android.widget.SlidingDrawer$OnDrawerScrollListener</string>
          <string>android.widget.AutoCompleteTextView</string>
          <string>android.graphics.PorterDuff$Mode</string>
          <string>android.widget.ActionMenuPresenter$ActionMenuPopupCallback</string>
          <string>android.widget.DayPickerPagerAdapter$OnDaySelectedListener</string>
          <string>android.widget.ViewAnimator</string>
          <string>android.widget.PopupMenu$OnMenuItemClickListener</string>
          <string>android.widget.TabHost$ViewIndicatorStrategy</string>
          <string>android.widget.EditText</string>
          <string>android.widget.AutoCompleteTextView$Validator</string>
          <string>android.widget.CalendarViewLegacyDelegate$WeekView</string>
          <string>android.widget.TabHost$IntentContentStrategy</string>
          <string>android.content.Intent$FilterComparison</string>
          <string>android.widget.DatePicker$AbstractDatePickerDelegate$SavedState$1</string>
          <string>android.widget.GridLayout$6$1</string>
          <string>android.widget.RemoteViewsAdapter$RemoteAdapterConnectionCallback</string>
          <string>android.widget.DoubleDigitManager$CallBack</string>
          <string>android.widget.ExpandableListView$OnGroupExpandListener</string>
          <string>android.widget.AbsListView$MultiChoiceModeWrapper</string>
          <string>android.widget.TextClock$FormatChangeObserver</string>
          <string>android.widget.OverScroller</string>
          <string>android.widget.TabWidget$OnTabSelectionChanged</string>
          <string>android.widget.GridLayout$Spec</string>
          <string>android.widget.TabWidget</string>
          <string>android.widget.AlphabetIndexer</string>
          <string>android.widget.PopupWindow$PopupDecorView$2</string>
          <string>android.widget.PopupWindow$PopupDecorView$1</string>
          <string>android.widget.ActionMenuPresenter$4</string>
          <string>android.widget.ActionMenuPresenter$5</string>
          <string>android.widget.ActivityChooserView$ActivityChooserViewAdapter</string>
          <string>android.text.Spanned</string>
          <string>android.widget.RemoteViews$SetEmptyView</string>
          <string>android.widget.ActionMenuPresenter$1</string>
          <string>android.widget.ActionMenuPresenter$2</string>
          <string>android.widget.ActionMenuPresenter$3</string>
          <string>android.widget.Gallery$1</string>
          <string>android.widget.Toolbar$OnMenuItemClickListener</string>
          <string>android.widget.ArrayAdapter$ArrayFilter</string>
          <string>android.widget.Gallery$2</string>
          <string>android.widget.TableRow$LayoutParams</string>
          <string>android.widget.PopupMenu$3</string>
          <string>android.widget.Gallery</string>
          <string>android.widget.PopupMenu$2</string>
          <string>android.widget.DateTimeView$ReceiverInfo</string>
          <string>android.widget.PopupMenu$1</string>
          <string>android.widget.ActivityChooserModel$ActivityResolveInfo</string>
          <string>android.widget.HorizontalScrollView$SavedState</string>
          <string>android.text.method.SingleLineTransformationMethod</string>
          <string>android.text.Editable$Factory</string>
          <string>android.widget.ZoomControls</string>
          <string>android.widget.FrameLayout</string>
          <string>android.view.ViewTreeObserver$OnScrollChangedListener</string>
          <string>android.widget.SimpleMonthView$OnDayClickListener</string>
          <string>android.widget.RemoteViews$ViewTree</string>
          <string>android.widget.AbsListView$ListItemAccessibilityDelegate</string>
          <string>android.text.method.TransformationMethod</string>
          <string>android.widget.ScrollView$SavedState</string>
          <string>android.widget.ListPopupWindow$PopupDataSetObserver</string>
          <string>com.android.internal.widget.EditableInputConnection</string>
          <string>android.widget.SimpleAdapter$ViewBinder</string>
          <string>android.view.accessibility.AccessibilityNodeInfo$RangeInfo</string>
          <string>android.view.inputmethod.CursorAnchorInfo$Builder</string>
          <string>android.widget.ForwardingListener</string>
          <string>android.widget.RemoteViews$SetRemoteViewsAdapterIntent</string>
          <string>android.widget.RadialTimePickerView$1</string>
          <string>android.app.SearchableInfo$ActionKeyInfo</string>
          <string>android.widget.ListPopupWindow$ResizePopupRunnable</string>
          <string>android.widget.SimpleCursorTreeAdapter$ViewBinder</string>
          <string>android.widget.MultiAutoCompleteTextView$CommaTokenizer</string>
          <string>android.widget.RemoteViews$BitmapCache</string>
          <string>android.widget.AppSecurityPermissions$PermissionGroupInfoComparator</string>
          <string>android.widget.CalendarViewLegacyDelegate$WeeksAdapter</string>
          <string>android.widget.PopupWindow$PopupDecorView$3</string>
          <string>android.widget.FilterQueryProvider</string>
          <string>android.widget.AutoCompleteTextView$1</string>
          <string>android.widget.Switch$1</string>
          <string>android.widget.Editor$SuggestionInfo</string>
          <string>android.text.Editable</string>
          <string>android.widget.AdapterViewAnimator$SavedState</string>
          <string>android.widget.StackView$LayoutParams</string>
          <string>android.widget.NumberPicker$3</string>
          <string>android.widget.SpinnerAdapter</string>
          <string>android.widget.NumberPicker$2</string>
          <string>android.view.KeyEvent$Callback</string>
          <string>android.widget.ActionMenuPresenter$OverflowMenuButton$1</string>
          <string>com.android.internal.widget.NumericTextView$OnValueChangedListener</string>
          <string>android.widget.ExpandableListConnector</string>
          <string>android.widget.Editor$CursorController</string>
          <string>android.widget.TextView$ChangeWatcher</string>
          <string>android.widget.ImageView$ImageDrawableCallback</string>
          <string>android.widget.NumberPicker$1</string>
          <string>android.widget.ViewFlipper$1</string>
          <string>android.widget.SearchView$UpdatableTouchDelegate</string>
          <string>android.widget.AbsListView$PerformClick</string>
          <string>android.widget.Switch</string>
          <string>android.widget.ViewFlipper$2</string>
          <string>android.widget.AccessibilityIterators$PageTextSegmentIterator</string>
          <string>android.widget.RemoteViewsListAdapter</string>
          <string>android.widget.RemoteViewsAdapter$RemoteViewsFrameLayoutRefSet</string>
          <string>android.widget.ListPopupWindow</string>
          <string>java.util.IllegalFormatException</string>
          <string>android.widget.Spinner$SavedState</string>
          <string>android.widget.Editor$InputContentType</string>
          <string>android.view.SurfaceHolder</string>
          <string>android.widget.ProgressBar$RefreshProgressRunnable</string>
          <string>android.widget.RemoteViews$ReflectionActionWithoutParams</string>
          <string>android.widget.TimePicker$TimePickerDelegate</string>
          <string>android.widget.TextView</string>
          <string>android.widget.SimpleAdapter</string>
          <string>android.widget.StackView$StackFrame</string>
          <string>android.widget.SimpleCursorAdapter$CursorToStringConverter</string>
          <string>android.widget.ProgressBar$RefreshData</string>
          <string>android.widget.DateTimeView</string>
          <string>android.widget.SimpleMonthView</string>
          <string>android.widget.TextView$Marquee$2</string>
          <string>android.widget.TextView$Marquee$1</string>
          <string>android.media.SubtitleTrack$RenderingWidget$OnChangedListener</string>
          <string>android.widget.TextView$Marquee$3</string>
          <string>java.util.WeakHashMap</string>
          <string>android.widget.ZoomButton</string>
          <string>android.widget.CompoundButton$SavedState</string>
          <string>android.widget.AbsListView$AbsPositionScroller</string>
          <string>android.widget.AdapterView$AdapterDataSetObserver</string>
          <string>android.widget.PopupWindow</string>
          <string>android.widget.Editor$ProcessTextIntentActionsHandler</string>
          <string>android.text.style.EasyEditSpan</string>
          <string>android.widget.ExpandableListView</string>
          <string>android.view.View$OnTouchListener</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.hardware.input.ss</name>
        <entities>
          <string>android.hardware.input.KeyboardLayout</string>
          <string>android.hardware.input.InputManager$InputDevicesChangedListener</string>
          <string>android.hardware.input.ITabletModeChangedListener$Stub$Proxy</string>
          <string>android.hardware.input.InputManager$OnTabletModeChangedListener</string>
          <string>android.hardware.input.InputManager$InputDeviceListenerDelegate</string>
          <string>android.hardware.input.InputDeviceIdentifier</string>
          <string>android.hardware.input.InputManager$InputDeviceListener</string>
          <string>android.hardware.input.IInputManager$Stub</string>
          <string>android.hardware.input.TouchCalibration</string>
          <string>android.hardware.input.KeyboardLayout$1</string>
          <string>android.hardware.input.ITabletModeChangedListener$Stub</string>
          <string>android.hardware.input.TouchCalibration$1</string>
          <string>android.hardware.input.IInputManager$Stub$Proxy</string>
          <string>android.hardware.input.InputDeviceIdentifier$1</string>
          <string>android.hardware.input.InputManager$OnTabletModeChangedListenerDelegate</string>
          <string>android.hardware.input.InputManager</string>
          <string>android.hardware.input.ITabletModeChangedListener</string>
          <string>android.hardware.input.InputManager$TabletModeChangedListener</string>
          <string>android.hardware.input.IInputManager</string>
          <string>android.hardware.input.InputManager$InputDeviceVibrator</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.media.projection.ss</name>
        <entities>
          <string>android.media.projection.MediaProjectionManager$Callback</string>
          <string>android.media.projection.MediaProjectionManager$CallbackDelegate$1</string>
          <string>android.media.projection.MediaProjectionManager$CallbackDelegate</string>
          <string>android.media.projection.MediaProjectionManager$CallbackDelegate$2</string>
          <string>android.media.projection.MediaProjection</string>
          <string>android.media.projection.MediaProjectionManager</string>
          <string>android.media.projection.MediaProjection$Callback</string>
          <string>android.media.projection.MediaProjectionInfo$1</string>
          <string>android.media.projection.MediaProjection$MediaProjectionCallback</string>
          <string>android.media.projection.MediaProjectionInfo</string>
          <string>android.media.projection.MediaProjection$CallbackRecord</string>
          <string>android.media.projection.MediaProjection$CallbackRecord$1</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.sax.ss</name>
        <entities>
          <string>android.sax.Element</string>
          <string>android.sax.StartElementListener</string>
          <string>android.sax.RootElement</string>
          <string>android.sax.Children</string>
          <string>android.sax.ElementListener</string>
          <string>android.sax.EndTextElementListener</string>
          <string>android.sax.RootElement$Handler</string>
          <string>android.sax.BadXmlException</string>
          <string>org.xml.sax.helpers.DefaultHandler</string>
          <string>android.sax.EndElementListener</string>
          <string>android.sax.Children$Child</string>
          <string>org.xml.sax.SAXParseException</string>
          <string>android.sax.TextElementListener</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.appwidget.ss</name>
        <entities>
          <string>android.appwidget.AppWidgetHostView$1</string>
          <string>android.view.LayoutInflater$Filter</string>
          <string>android.appwidget.AppWidgetHost</string>
          <string>android.appwidget.AppWidgetHostView</string>
          <string>android.appwidget.AppWidgetHostView$ParcelableSparseArray$1</string>
          <string>android.appwidget.AppWidgetHost$Callbacks</string>
          <string>android.appwidget.AppWidgetHostView$ParcelableSparseArray</string>
          <string>android.appwidget.AppWidgetHostView$ViewApplyListener</string>
          <string>android.appwidget.AppWidgetProviderInfo</string>
          <string>android.appwidget.AppWidgetProviderInfo$1</string>
          <string>android.appwidget.AppWidgetHost$UpdateHandler</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.storage.ss</name>
        <entities>
          <string>com.android.server.storage.DeviceStorageMonitorService</string>
          <string>com.android.server.storage.DeviceStorageMonitorInternal</string>
          <string>com.android.server.storage.DeviceStorageMonitorService$1</string>
          <string>com.android.server.storage.DeviceStorageMonitorService$CachePackageDataObserver</string>
          <string>com.android.server.storage.DeviceStorageMonitorService$2</string>
          <string>android.app.Notification$BigTextStyle</string>
          <string>com.android.server.storage.DeviceStorageMonitorService$3</string>
          <string>com.android.server.storage.DeviceStorageMonitorService$CacheFileDeletedObserver</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.statusbar.ss</name>
        <entities>
          <string>com.android.server.statusbar.StatusBarManagerService$DisableRecord</string>
          <string>com.android.internal.statusbar.IStatusBar</string>
          <string>com.android.server.statusbar.StatusBarManagerService</string>
          <string>com.android.server.statusbar.StatusBarManagerService$5</string>
          <string>com.android.server.statusbar.StatusBarManagerService$4</string>
          <string>com.android.server.statusbar.StatusBarManagerService$3</string>
          <string>com.android.server.statusbar.StatusBarShellCommand</string>
          <string>com.android.server.statusbar.StatusBarManagerService$2</string>
          <string>com.android.server.statusbar.StatusBarManagerService$1</string>
          <string>com.android.server.notification.NotificationDelegate</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.speech.ss</name>
        <entities>
          <string>android.speech.RecognitionService$1</string>
          <string>android.speech.RecognitionService$2</string>
          <string>android.speech.SpeechRecognizer</string>
          <string>android.speech.IRecognitionService$Stub$Proxy</string>
          <string>android.speech.SpeechRecognizer$1</string>
          <string>android.speech.RecognitionService$Callback</string>
          <string>android.speech.SpeechRecognizer$InternalListener$1</string>
          <string>android.speech.IRecognitionListener$Stub$Proxy</string>
          <string>android.speech.IRecognitionListener$Stub</string>
          <string>android.speech.IRecognitionListener</string>
          <string>android.speech.IRecognitionService</string>
          <string>android.speech.SpeechRecognizer$InternalListener</string>
          <string>android.speech.SpeechRecognizer$Connection</string>
          <string>java.util.Queue</string>
          <string>android.speech.RecognitionService</string>
          <string>android.speech.RecognitionService$RecognitionServiceBinder</string>
          <string>android.speech.RecognitionService$StartListeningArgs</string>
          <string>android.speech.IRecognitionService$Stub</string>
          <string>android.speech.RecognitionListener</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.security.keystore.ss</name>
        <entities>
          <string>android.security.keystore.AndroidKeyStoreKey</string>
          <string>java.security.interfaces.RSAKey</string>
          <string>java.security.spec.ECPublicKeySpec</string>
          <string>android.security.keystore.AndroidKeyStoreRSACipherSpi$PKCS1Padding</string>
          <string>android.security.keystore.AndroidKeyStoreRSASignatureSpi$SHA224WithPKCS1Padding</string>
          <string>android.security.keystore.AndroidKeyStoreECDSASignatureSpi$SHA384</string>
          <string>android.security.keystore.AndroidKeyStoreRSASignatureSpi$SHA512WithPKCS1Padding</string>
          <string>android.security.keystore.AndroidKeyStorePrivateKey</string>
          <string>java.security.SecureRandom</string>
          <string>com.android.org.bouncycastle.asn1.x509.V3TBSCertificateGenerator</string>
          <string>java.security.spec.KeySpec</string>
          <string>android.security.keystore.KeyStoreCryptoOperationChunkedStreamer</string>
          <string>com.android.org.bouncycastle.asn1.DERBitString</string>
          <string>java.security.KeyStore$LoadStoreParameter</string>
          <string>java.security.interfaces.RSAPublicKey</string>
          <string>android.security.keystore.AndroidKeyStoreBCWorkaroundProvider</string>
          <string>android.security.keystore.AndroidKeyStoreSpi$KeyStoreX509Certificate</string>
          <string>java.math.BigInteger</string>
          <string>android.security.keystore.AndroidKeyStoreRSASignatureSpi$SHA512WithPSSPadding</string>
          <string>android.security.keystore.AndroidKeyStoreSignatureSpiBase</string>
          <string>com.android.org.bouncycastle.asn1.x509.TBSCertificate</string>
          <string>android.security.keystore.AndroidKeyStoreRSASignatureSpi$MD5WithPKCS1Padding</string>
          <string>javax.crypto.KeyGeneratorSpi</string>
          <string>java.security.KeyStore$TrustedCertificateEntry</string>
          <string>android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi$CTR</string>
          <string>android.security.keystore.KeymasterUtils</string>
          <string>android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$AdditionalAuthenticationDataStream</string>
          <string>android.security.keystore.AndroidKeyStoreRSASignatureSpi$PSSPadding</string>
          <string>android.security.keystore.AndroidKeyStoreRSACipherSpi$OAEPWithSHA384AndMGF1Padding</string>
          <string>android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi$ECB$PKCS7Padding</string>
          <string>android.security.keystore.AndroidKeyStoreSecretKey</string>
          <string>android.security.keystore.AndroidKeyStoreECDSASignatureSpi$SHA256</string>
          <string>android.security.keystore.AndroidKeyStoreRSASignatureSpi$SHA224WithPSSPadding</string>
          <string>android.security.keystore.AndroidKeyStoreKeyGeneratorSpi$HmacSHA512</string>
          <string>android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi$CBC$PKCS7Padding</string>
          <string>android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$BufferAllOutputUntilDoFinalStreamer</string>
          <string>com.android.org.bouncycastle.asn1.pkcs.PKCSObjectIdentifiers</string>
          <string>com.android.org.bouncycastle.asn1.DERSequence</string>
          <string>android.security.keystore.KeyProperties$Purpose</string>
          <string>android.security.keystore.AndroidKeyStoreRSASignatureSpi$NONEWithPKCS1Padding</string>
          <string>javax.crypto.spec.PSource$PSpecified</string>
          <string>android.security.keystore.AndroidKeyStoreRSAPublicKey</string>
          <string>android.security.keystore.AndroidKeyStoreHmacSpi$HmacSHA224</string>
          <string>java.security.SignatureSpi</string>
          <string>java.security.KeyFactorySpi</string>
          <string>android.security.keystore.AndroidKeyStoreKeyGeneratorSpi$AES</string>
          <string>java.security.interfaces.ECKey</string>
          <string>java.security.spec.InvalidKeySpecException</string>
          <string>android.security.keystore.KeyProperties$SignaturePadding</string>
          <string>javax.crypto.SecretKeyFactorySpi</string>
          <string>android.security.keystore.AndroidKeyStorePublicKey</string>
          <string>com.android.org.bouncycastle.asn1.DERNull</string>
          <string>android.security.keystore.KeyProperties$EncryptionPadding</string>
          <string>com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier</string>
          <string>android.security.keystore.KeyStoreCryptoOperationChunkedStreamer$Stream</string>
          <string>java.security.InvalidAlgorithmParameterException</string>
          <string>com.android.org.bouncycastle.asn1.ASN1Encodable</string>
          <string>android.security.keystore.KeyStoreConnectException</string>
          <string>android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi</string>
          <string>javax.crypto.CipherSpi</string>
          <string>java.security.spec.ECGenParameterSpec</string>
          <string>javax.crypto.spec.OAEPParameterSpec</string>
          <string>android.security.keystore.AndroidKeyStoreRSASignatureSpi$SHA256WithPSSPadding</string>
          <string>android.security.keystore.AndroidKeyStoreKeyGeneratorSpi$HmacSHA384</string>
          <string>android.security.keystore.AndroidKeyStoreRSASignatureSpi$SHA256WithPKCS1Padding</string>
          <string>android.security.keystore.KeyInfo</string>
          <string>android.security.keystore.AndroidKeyStoreRSASignatureSpi</string>
          <string>android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi$CBC</string>
          <string>android.security.keystore.AndroidKeyStoreCipherSpiBase</string>
          <string>android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi</string>
          <string>android.security.keystore.KeyGenParameterSpec$Builder</string>
          <string>com.android.org.bouncycastle.asn1.DERInteger</string>
          <string>android.security.keystore.AndroidKeyStoreRSAPrivateKey</string>
          <string>android.security.keystore.AndroidKeyStoreECDSASignatureSpi$NONE</string>
          <string>android.security.KeyStoreException</string>
          <string>android.security.keystore.AndroidKeyStoreKeyFactorySpi</string>
          <string>java.security.KeyStoreSpi</string>
          <string>java.security.spec.ECParameterSpec</string>
          <string>com.android.org.bouncycastle.asn1.x509.Certificate</string>
          <string>android.security.keystore.AndroidKeyStoreRSASignatureSpi$SHA1WithPKCS1Padding</string>
          <string>android.security.keystore.AndroidKeyStoreKeyGeneratorSpi$HmacSHA256</string>
          <string>android.security.keystore.AndroidKeyStoreRSASignatureSpi$SHA384WithPKCS1Padding</string>
          <string>android.security.keystore.AndroidKeyStoreECPublicKey</string>
          <string>javax.crypto.MacSpi</string>
          <string>android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi$CBC$NoPadding</string>
          <string>java.security.spec.ECPoint</string>
          <string>com.android.org.bouncycastle.asn1.x509.Time</string>
          <string>android.security.keystore.AndroidKeyStoreHmacSpi$HmacSHA1</string>
          <string>android.security.keystore.AndroidKeyStoreHmacSpi$HmacSHA384</string>
          <string>android.security.keystore.KeyProperties$KeyAlgorithm</string>
          <string>java.security.KeyPairGeneratorSpi</string>
          <string>android.security.keystore.AndroidKeyStoreECDSASignatureSpi$SHA224</string>
          <string>android.security.keystore.AndroidKeyStoreLoadStoreParameter</string>
          <string>java.security.spec.RSAKeyGenParameterSpec</string>
          <string>android.security.keystore.AndroidKeyStoreSecretKeyFactorySpi</string>
          <string>android.security.keystore.ArrayUtils</string>
          <string>android.security.keystore.KeyGenParameterSpec</string>
          <string>android.security.keystore.AndroidKeyStoreKeyGeneratorSpi$HmacSHA1</string>
          <string>android.security.keystore.AndroidKeyStoreRSACipherSpi$OAEPWithSHA256AndMGF1Padding</string>
          <string>android.security.keystore.AndroidKeyStoreECDSASignatureSpi$SHA1</string>
          <string>java.security.spec.RSAPublicKeySpec</string>
          <string>com.android.org.bouncycastle.asn1.x509.SubjectPublicKeyInfo</string>
          <string>java.security.spec.AlgorithmParameterSpec</string>
          <string>android.security.keystore.KeyProperties$Origin</string>
          <string>android.security.keystore.AndroidKeyStoreHmacSpi$HmacSHA256</string>
          <string>com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier</string>
          <string>com.android.org.bouncycastle.asn1.ASN1Integer</string>
          <string>javax.crypto.ShortBufferException</string>
          <string>android.security.keystore.AndroidKeyStoreECDSASignatureSpi$NONE$TruncateToFieldSizeMessageStreamer</string>
          <string>javax.crypto.spec.PSource</string>
          <string>android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi$CTR$NoPadding</string>
          <string>android.security.keystore.DelegatingX509Certificate</string>
          <string>java.security.ProviderException</string>
          <string>android.security.keystore.Utils</string>
          <string>android.security.keystore.KeyStoreCryptoOperationStreamer</string>
          <string>android.security.keystore.KeyStoreCryptoOperationUtils</string>
          <string>android.security.keystore.AndroidKeyStoreRSASignatureSpi$PKCS1Padding</string>
          <string>java.security.Provider</string>
          <string>android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM$NoPadding</string>
          <string>android.security.keystore.AndroidKeyStoreRSACipherSpi$OAEPWithSHA512AndMGF1Padding</string>
          <string>android.security.keystore.AndroidKeyStoreKeyPairGeneratorSpi</string>
          <string>android.security.keystore.AndroidKeyStoreRSACipherSpi</string>
          <string>android.security.keystore.KeyProperties</string>
          <string>android.security.keystore.AndroidKeyStoreHmacSpi</string>
          <string>android.security.keystore.KeyStoreCryptoOperation</string>
          <string>android.security.keystore.AndroidKeyStoreRSACipherSpi$NoPadding</string>
          <string>java.security.interfaces.ECPublicKey</string>
          <string>android.security.keystore.AndroidKeyStoreECPrivateKey</string>
          <string>android.security.keystore.AndroidKeyStoreRSASignatureSpi$SHA384WithPSSPadding</string>
          <string>android.security.keystore.AndroidKeyStoreRSACipherSpi$OAEPWithSHA224AndMGF1Padding</string>
          <string>com.android.org.bouncycastle.asn1.ASN1InputStream</string>
          <string>com.android.org.bouncycastle.asn1.x9.X9ObjectIdentifiers</string>
          <string>com.android.org.bouncycastle.jce.X509Principal</string>
          <string>android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi$ECB</string>
          <string>android.security.keystore.AndroidKeyStoreKeyPairGeneratorSpi$EC</string>
          <string>android.security.keystore.KeyProperties$BlockMode</string>
          <string>android.security.keystore.AndroidKeyStoreKeyGeneratorSpi$HmacBase</string>
          <string>javax.crypto.AEADBadTagException</string>
          <string>android.security.keystore.AndroidKeyStoreECDSASignatureSpi</string>
          <string>android.security.keystore.KeyStoreCryptoOperationChunkedStreamer$MainDataStream</string>
          <string>android.security.keystore.AndroidKeyStoreRSASignatureSpi$SHA1WithPSSPadding</string>
          <string>android.security.keystore.AndroidKeyStoreSpi</string>
          <string>android.security.keystore.AndroidKeyStoreKeyGeneratorSpi$HmacSHA224</string>
          <string>android.security.keystore.AndroidKeyStoreKeyPairGeneratorSpi$RSA</string>
          <string>java.security.spec.InvalidParameterSpecException</string>
          <string>android.security.keystore.AndroidKeyStoreHmacSpi$HmacSHA512</string>
          <string>android.security.keystore.AndroidKeyStoreProvider</string>
          <string>java.security.spec.PKCS8EncodedKeySpec</string>
          <string>android.security.keystore.AndroidKeyStoreECDSASignatureSpi$SHA512</string>
          <string>android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi$ECB$NoPadding</string>
          <string>android.security.keystore.AndroidKeyStoreRSACipherSpi$OAEPWithSHA1AndMGF1Padding</string>
          <string>com.android.org.bouncycastle.asn1.ASN1Primitive</string>
          <string>java.security.AlgorithmParameters</string>
          <string>com.android.org.bouncycastle.asn1.ASN1EncodableVector</string>
          <string>android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi$GCM</string>
          <string>com.android.org.bouncycastle.x509.X509V3CertificateGenerator</string>
          <string>android.security.keystore.KeyProperties$Digest</string>
          <string>android.security.keystore.AndroidKeyStoreKeyGeneratorSpi</string>
          <string>com.android.org.bouncycastle.asn1.x509.X509Name</string>
          <string>java.security.KeyStore$PrivateKeyEntry</string>
          <string>com.android.org.bouncycastle.jce.provider.X509CertificateObject</string>
          <string>android.security.keystore.AndroidKeyStoreRSACipherSpi$OAEPWithMGF1Padding</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.util.jar.ss</name>
        <entities>
          <string>sun.security.jca.Providers</string>
          <string>java.io.RandomAccessFile</string>
          <string>android.util.jar.StrictJarFile$ZipInflaterInputStream</string>
          <string>android.util.jar.StrictJarVerifier</string>
          <string>android.util.jar.StrictJarFile</string>
          <string>java.util.zip.Inflater</string>
          <string>android.util.jar.StrictJarVerifier$VerifierEntry</string>
          <string>java.util.jar.Attributes</string>
          <string>java.nio.charset.StandardCharsets</string>
          <string>sun.security.pkcs.SignerInfo</string>
          <string>android.util.jar.StrictJarManifest$Chunk</string>
          <string>android.util.jar.StrictJarManifestReader</string>
          <string>java.io.FilterInputStream</string>
          <string>java.nio.charset.Charset</string>
          <string>android.util.jar.StrictJarManifest</string>
          <string>libcore.io.Base64</string>
          <string>android.util.jar.StrictJarFile$JarFileInputStream</string>
          <string>android.util.jar.StrictJarFile$EntryIterator</string>
          <string>android.util.jar.StrictJarFile$RAFStream</string>
          <string>java.util.jar.Attributes$Name</string>
          <string>sun.security.pkcs.PKCS7</string>
          <string>java.util.zip.ZipEntry</string>
          <string>libcore.io.Streams</string>
          <string>java.util.Hashtable</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.net.wifi.ss</name>
        <entities>
          <string>android.net.wifi.WifiLinkLayerStats$1</string>
          <string>android.net.wifi.WifiScanner$ScanSettings$1</string>
          <string>android.net.wifi.BatchedScanResult</string>
          <string>android.net.wifi.WifiManager$ActionListener</string>
          <string>android.net.wifi.RttManager$ParcelableRttParams</string>
          <string>android.net.wifi.RttManager$ResponderConfig$1</string>
          <string>android.net.wifi.WifiScanner$PnoSettings$1</string>
          <string>android.util.BackupUtils</string>
          <string>android.net.wifi.WifiScanner$WifiChangeSettings$1</string>
          <string>android.net.wifi.WifiConfiguration$Visibility</string>
          <string>android.net.wifi.WifiManager$WpsCallback</string>
          <string>android.net.wifi.RttManager$ParcelableRttParams$1</string>
          <string>android.net.wifi.ScanSettings</string>
          <string>android.net.wifi.WpsResult</string>
          <string>android.net.wifi.RssiPacketCountInfo</string>
          <string>android.net.wifi.WifiConfiguration</string>
          <string>android.net.wifi.WifiWakeReasonAndCounts</string>
          <string>android.net.wifi.WifiChannel</string>
          <string>java.util.EnumMap</string>
          <string>android.net.wifi.WifiConfiguration$AuthAlgorithm</string>
          <string>android.net.wifi.WifiChannel$1</string>
          <string>android.net.wifi.RttManager$ParcelableRttResults</string>
          <string>android.net.wifi.WifiConnectionStatistics</string>
          <string>java.security.PrivateKey</string>
          <string>android.net.wifi.WifiConfiguration$GroupCipher</string>
          <string>android.net.wifi.WifiScanner$WifiChangeListener</string>
          <string>android.net.wifi.RttManager$ParcelableRttResults$1</string>
          <string>android.net.wifi.WifiSsid$1</string>
          <string>android.net.wifi.RttManager$RttParams</string>
          <string>android.net.wifi.WifiScanner$ActionListener</string>
          <string>android.net.wifi.WifiNetworkConnectionStatistics</string>
          <string>android.net.wifi.WifiConnectionStatistics$1</string>
          <string>android.net.wifi.ScanResult$1</string>
          <string>android.util.BackupUtils$BadVersionException</string>
          <string>android.net.wifi.WifiScanner$PnoScanListener</string>
          <string>android.net.wifi.RttManager</string>
          <string>android.net.wifi.ScanSettings$1</string>
          <string>android.net.wifi.RttManager$ServiceHandler</string>
          <string>android.net.wifi.WifiScanner$ScanData$1</string>
          <string>android.net.wifi.WifiEnterpriseConfig$1</string>
          <string>android.net.wifi.WifiScanner$ParcelableScanResults</string>
          <string>android.net.wifi.WifiScanner$ParcelableScanData</string>
          <string>android.net.wifi.ScanResult</string>
          <string>android.os.Parcelable</string>
          <string>android.net.wifi.WifiScanner$ScanData</string>
          <string>android.net.wifi.WpsResult$Status</string>
          <string>android.net.wifi.WifiManager$WifiLock</string>
          <string>android.net.wifi.WifiManager</string>
          <string>android.net.wifi.WifiScanner$OperationResult</string>
          <string>android.net.wifi.WifiWakeReasonAndCounts$1</string>
          <string>android.net.wifi.WifiConfiguration$Protocol</string>
          <string>android.net.wifi.SupplicantState</string>
          <string>android.net.wifi.WifiActivityEnergyInfo$1</string>
          <string>android.net.wifi.RttManager$Capabilities</string>
          <string>android.net.wifi.WifiScanner$ChannelSpec</string>
          <string>android.net.wifi.WifiInfo</string>
          <string>android.net.wifi.SupplicantState$1</string>
          <string>android.net.wifi.AnqpInformationElement</string>
          <string>android.net.wifi.WifiConfiguration$NetworkSelectionStatus</string>
          <string>android.net.wifi.WifiActivityEnergyInfo</string>
          <string>android.net.wifi.WifiScanner$BssidInfo</string>
          <string>android.net.wifi.WifiManager$MulticastLock</string>
          <string>android.net.wifi.WpsInfo$1</string>
          <string>android.net.wifi.WifiInfo$1</string>
          <string>android.net.wifi.WifiScanner$BssidListener</string>
          <string>android.net.wifi.WifiScanner$ScanSettings</string>
          <string>android.net.wifi.RttManager$RttListener</string>
          <string>android.net.wifi.WifiManager$ServiceHandler</string>
          <string>android.net.wifi.WifiEnterpriseConfig$Phase2</string>
          <string>android.net.wifi.BatchedScanResult$1</string>
          <string>android.net.wifi.WifiScanner$HotlistSettings</string>
          <string>android.net.wifi.PasspointManagementObjectDefinition</string>
          <string>android.net.wifi.WifiNetworkConnectionStatistics$1</string>
          <string>android.net.wifi.WifiScanner$ScanListener</string>
          <string>android.net.wifi.WifiScanner$PnoSettings$PnoNetwork</string>
          <string>android.net.wifi.WpsInfo</string>
          <string>android.net.wifi.WpsResult$1</string>
          <string>android.net.wifi.WifiConfiguration$KeyMgmt</string>
          <string>android.os.Parcelable$Creator</string>
          <string>android.net.wifi.WifiScanner$OperationResult$1</string>
          <string>android.net.wifi.WifiSsid</string>
          <string>android.net.wifi.RttManager$ResponderConfig</string>
          <string>android.net.wifi.WifiManager$TxPacketCountListener</string>
          <string>android.net.wifi.WifiScanner$ParcelableScanResults$1</string>
          <string>android.net.wifi.WifiScanner$PnoSettings</string>
          <string>android.net.wifi.WifiConfiguration$Status</string>
          <string>android.net.wifi.WifiScanner$HotlistSettings$1</string>
          <string>android.net.wifi.PasspointManagementObjectDefinition$1</string>
          <string>android.net.wifi.WifiConfiguration$1</string>
          <string>android.net.wifi.IWifiManager</string>
          <string>android.net.wifi.WifiEnterpriseConfig$SupplicantLoader</string>
          <string>android.net.wifi.RssiPacketCountInfo$1</string>
          <string>android.net.wifi.WifiEnterpriseConfig</string>
          <string>android.net.wifi.RttManager$RttResult</string>
          <string>android.net.wifi.ScanResult$InformationElement</string>
          <string>android.net.wifi.RttManager$WifiInformationElement</string>
          <string>android.net.wifi.RttManager$ResponderCallback</string>
          <string>android.net.wifi.WifiEnterpriseConfig$Eap</string>
          <string>android.net.wifi.WifiEnterpriseConfig$SupplicantSaver</string>
          <string>android.net.wifi.WifiScanner$ParcelableScanData$1</string>
          <string>android.net.wifi.WifiLinkLayerStats</string>
          <string>android.net.wifi.WifiConfiguration$PairwiseCipher</string>
          <string>java.util.BitSet</string>
          <string>android.net.wifi.WifiScanner</string>
          <string>android.net.wifi.WifiScanner$WifiChangeSettings</string>
          <string>android.net.wifi.WifiScanner$ServiceHandler</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.net.ip.ss</name>
        <entities>
          <string>android.net.netlink.StructNlMsgErr</string>
          <string>android.system.NetlinkSocketAddress</string>
          <string>com.android.server.net.NetlinkTracker$Callback</string>
          <string>android.net.apf.ApfCapabilities</string>
          <string>android.net.LinkProperties$ProvisioningChange</string>
          <string>android.util.LocalLog</string>
          <string>android.net.ip.IpReachabilityMonitor$Callback</string>
          <string>java.io.InterruptedIOException</string>
          <string>java.nio.ByteBuffer</string>
          <string>android.net.ip.IpManager$StoppingState</string>
          <string>android.net.netlink.NetlinkConstants</string>
          <string>java.net.SocketException</string>
          <string>android.net.ip.IpManager$Callback</string>
          <string>android.net.netlink.StructNdMsg</string>
          <string>android.net.ip.IpReachabilityMonitor</string>
          <string>android.net.ip.IpManager$ProvisioningConfiguration$Builder</string>
          <string>android.net.ip.IpManager$LoggingCallbackWrapper</string>
          <string>android.net.ip.IpManager$ProvisioningConfiguration</string>
          <string>android.util.LocalLog$ReadOnlyLocalLog</string>
          <string>android.net.ip.IpManager$StoppedState</string>
          <string>android.net.ip.IpReachabilityMonitor$NetlinkSocketObserver</string>
          <string>android.net.ip.IpManager$StartedState$1</string>
          <string>android.net.ip.IpManager$WaitForProvisioningCallback</string>
          <string>android.net.netlink.NetlinkErrorMessage</string>
          <string>android.system.OsConstants</string>
          <string>java.net.NetworkInterface</string>
          <string>android.net.ip.IpManager$2</string>
          <string>android.net.ip.IpManager$1</string>
          <string>android.net.ip.IpManager</string>
          <string>android.net.netlink.StructNlMsgHdr</string>
          <string>android.net.ip.IpManager$StartedState</string>
          <string>java.util.StringJoiner</string>
          <string>android.net.netlink.NetlinkMessage</string>
          <string>android.net.netlink.NetlinkSocket</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.internal.util.ss</name>
        <entities>
          <string>com.android.internal.util.Predicates</string>
          <string>com.android.internal.util.StateMachine$SmHandler$HaltingState</string>
          <string>com.android.internal.util.BitwiseInputStream</string>
          <string>com.android.internal.util.MessageUtils</string>
          <string>com.android.internal.util.BitwiseInputStream$AccessException</string>
          <string>com.android.internal.util.DumpUtils</string>
          <string>com.android.internal.util.CallbackRegistry</string>
          <string>com.android.internal.util.AsyncChannel$AsyncChannelConnection</string>
          <string>com.android.internal.util.FileRotator$1</string>
          <string>com.android.internal.util.StateMachine$SmHandler$QuittingState</string>
          <string>com.android.internal.util.FastXmlSerializer</string>
          <string>java.io.StreamTokenizer</string>
          <string>com.android.internal.util.BitwiseOutputStream$AccessException</string>
          <string>com.android.internal.util.BitwiseOutputStream</string>
          <string>com.android.internal.util.TypedProperties$ParseException</string>
          <string>com.android.internal.util.FileRotator$Reader</string>
          <string>com.android.internal.util.FileRotator</string>
          <string>com.android.internal.util.ParcelableString</string>
          <string>android.app.Service</string>
          <string>com.android.internal.util.CharSequences</string>
          <string>com.android.internal.util.Predicates$NotPredicate</string>
          <string>com.android.internal.util.ParcelableString$1</string>
          <string>com.android.internal.util.Predicates$AndPredicate</string>
          <string>com.android.internal.util.NotificationColorUtil</string>
          <string>com.android.internal.util.AsyncService$AsyncServiceInfo</string>
          <string>java.nio.charset.CharsetEncoder</string>
          <string>com.android.internal.util.FastPrintWriter$DummyWriter</string>
          <string>java.lang.reflect.Modifier</string>
          <string>java.nio.charset.UnsupportedCharsetException</string>
          <string>com.android.internal.util.AsyncChannel$SyncMessenger$SyncHandler</string>
          <string>java.util.zip.ZipOutputStream</string>
          <string>com.android.internal.util.AsyncChannel</string>
          <string>com.android.internal.util.DumpUtils$1</string>
          <string>com.android.internal.util.AsyncService</string>
          <string>com.android.internal.util.CharSequences$2</string>
          <string>com.android.internal.util.CharSequences$1</string>
          <string>com.android.internal.util.CallbackRegistry$NotifierCallback</string>
          <string>com.android.internal.util.FileRotator$Writer</string>
          <string>com.android.internal.util.AsyncChannel$1ConnectAsync</string>
          <string>com.android.internal.util.AsyncChannel$SyncMessenger</string>
          <string>com.android.internal.util.StateMachine</string>
          <string>com.android.internal.util.TypedProperties$TypeException</string>
          <string>com.android.internal.util.Predicates$OrPredicate</string>
          <string>com.android.internal.util.StateMachine$LogRec</string>
          <string>java.nio.charset.IllegalCharsetNameException</string>
          <string>com.android.internal.util.MessageUtils$DuplicateConstantError</string>
          <string>com.android.internal.util.TypedProperties</string>
          <string>com.android.internal.util.StateMachine$SmHandler</string>
          <string>com.android.internal.util.StateMachine$SmHandler$StateInfo</string>
          <string>java.lang.Package</string>
          <string>com.android.internal.util.Predicate</string>
          <string>com.android.internal.util.FastPrintWriter</string>
          <string>java.lang.Appendable</string>
          <string>com.android.internal.util.AsyncChannel$DeathMonitor</string>
          <string>com.android.internal.util.FileRotator$FileInfo</string>
          <string>com.android.internal.util.NotificationColorUtil$ColorUtilsFromCompat</string>
          <string>com.android.internal.util.StateMachine$LogRecords</string>
          <string>java.lang.ExceptionInInitializerError</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.clipboard.ss</name>
        <entities>
          <string>com.android.server.clipboard.ClipboardService$1</string>
          <string>com.android.server.clipboard.ClipboardService</string>
          <string>com.android.server.clipboard.ClipboardService$PerUserClipboard</string>
          <string>com.android.server.clipboard.ClipboardService$ListenerInfo</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.bluetooth.le.ss</name>
        <entities>
          <string>android.bluetooth.le.ScanRecord</string>
          <string>android.bluetooth.le.BluetoothLeAdvertiser$1</string>
          <string>android.bluetooth.le.ScanCallback</string>
          <string>android.bluetooth.le.ResultStorageDescriptor</string>
          <string>android.bluetooth.le.BluetoothLeAdvertiser$2</string>
          <string>android.bluetooth.BluetoothGattCallbackWrapper</string>
          <string>android.bluetooth.le.AdvertiseSettings</string>
          <string>android.bluetooth.le.AdvertiseData$1</string>
          <string>android.bluetooth.le.ScanSettings</string>
          <string>android.bluetooth.le.BluetoothLeAdvertiser$AdvertiseCallbackWrapper</string>
          <string>android.bluetooth.le.TruncatedFilter</string>
          <string>android.bluetooth.le.ScanResult</string>
          <string>android.bluetooth.IBluetoothGattCallback$Stub</string>
          <string>android.bluetooth.le.AdvertiseData$Builder</string>
          <string>android.bluetooth.le.AdvertiseData</string>
          <string>android.bluetooth.le.ResultStorageDescriptor$1</string>
          <string>android.bluetooth.le.ScanSettings$1</string>
          <string>android.bluetooth.le.ScanResult$1</string>
          <string>android.bluetooth.le.AdvertiseCallback</string>
          <string>android.bluetooth.le.AdvertiseSettings$1</string>
          <string>android.bluetooth.le.ScanFilter</string>
          <string>android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper</string>
          <string>android.bluetooth.IBluetoothGattCallback</string>
          <string>android.bluetooth.IBluetoothGattCallback$Stub$Proxy</string>
          <string>android.bluetooth.BluetoothUuid</string>
          <string>android.bluetooth.le.AdvertiseSettings$Builder</string>
          <string>android.bluetooth.le.BluetoothLeScanner$1</string>
          <string>android.bluetooth.le.BluetoothLeUtils</string>
          <string>android.bluetooth.le.BluetoothLeAdvertiser</string>
          <string>android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper$3</string>
          <string>android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper$1</string>
          <string>android.bluetooth.le.BluetoothLeScanner$BleScanCallbackWrapper$2</string>
          <string>android.bluetooth.le.BluetoothLeScanner</string>
          <string>android.bluetooth.le.ScanSettings$Builder</string>
          <string>android.bluetooth.le.ScanFilter$Builder</string>
          <string>android.bluetooth.le.ScanFilter$1</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.lights.ss</name>
        <entities>
          <string>com.android.server.lights.LightsService$LightImpl</string>
          <string>com.android.server.lights.LightsService</string>
          <string>com.android.server.lights.LightsService$1</string>
          <string>com.android.server.lights.LightsManager</string>
          <string>com.android.server.lights.LightsService$3</string>
          <string>com.android.server.lights.LightsService$2</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.midi.ss</name>
        <entities>
          <string>android.media.midi.IBluetoothMidiService$Stub$Proxy</string>
          <string>android.media.midi.IBluetoothMidiService</string>
          <string>com.android.server.midi.MidiService$Device</string>
          <string>android.media.midi.IMidiDeviceServer$Stub$Proxy</string>
          <string>com.android.server.midi.MidiService$Device$1</string>
          <string>com.android.server.midi.MidiService$DeviceConnection</string>
          <string>com.android.server.midi.MidiService$Client</string>
          <string>android.media.midi.IMidiDeviceListener</string>
          <string>com.android.server.midi.MidiService$1</string>
          <string>com.android.server.midi.MidiService</string>
          <string>android.media.midi.IBluetoothMidiService$Stub</string>
          <string>android.media.midi.IMidiDeviceOpenCallback$Stub$Proxy</string>
          <string>android.media.midi.IMidiDeviceServer</string>
          <string>com.android.server.midi.MidiService$Lifecycle</string>
          <string>android.media.midi.IMidiDeviceOpenCallback</string>
          <string>android.media.midi.IMidiDeviceServer$Stub</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.hardware.camera2.marshal.ss</name>
        <entities>
          <string>android.hardware.camera2.marshal.MarshalRegistry</string>
          <string>android.hardware.camera2.marshal.MarshalRegistry$MarshalToken</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.twilight.ss</name>
        <entities>
          <string>com.android.server.twilight.TwilightService$LocationHandler</string>
          <string>com.android.server.twilight.TwilightState</string>
          <string>com.android.server.twilight.TwilightService</string>
          <string>com.android.server.twilight.TwilightService$TwilightListenerRecord</string>
          <string>com.android.server.twilight.TwilightService$4</string>
          <string>com.android.server.twilight.TwilightService$5</string>
          <string>com.android.server.twilight.TwilightService$2</string>
          <string>com.android.server.twilight.TwilightService$3</string>
          <string>com.android.server.twilight.TwilightManager</string>
          <string>com.android.server.twilight.TwilightListener</string>
          <string>com.android.server.twilight.TwilightService$1</string>
          <string>com.android.server.TwilightCalculator</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.display.ss</name>
        <entities>
          <string>android.media.projection.IMediaProjectionCallback$Stub</string>
          <string>android.view.WindowManagerPolicy$ScreenOnListener</string>
          <string>java.util.Enumeration</string>
          <string>com.android.server.display.LocalDisplayAdapter</string>
          <string>android.opengl.EGLConfig</string>
          <string>android.hardware.display.DisplayManagerInternal$DisplayPowerRequest</string>
          <string>android.opengl.GLES20</string>
          <string>com.android.server.display.WifiDisplayAdapter$9</string>
          <string>com.android.server.display.WifiDisplayAdapter$8</string>
          <string>com.android.server.display.WifiDisplayAdapter$7</string>
          <string>com.android.server.display.DisplayBlanker</string>
          <string>com.android.server.display.OverlayDisplayAdapter$1</string>
          <string>android.view.Display$Mode</string>
          <string>com.android.server.display.OverlayDisplayWindow$3</string>
          <string>com.android.server.display.OverlayDisplayWindow$4</string>
          <string>com.android.server.display.OverlayDisplayWindow$5</string>
          <string>android.view.ScaleGestureDetector$OnScaleGestureListener</string>
          <string>com.android.server.display.AutomaticBrightnessController$1</string>
          <string>com.android.server.display.AutomaticBrightnessController$2</string>
          <string>com.android.server.display.AutomaticBrightnessController$AmbientLightRingBuffer</string>
          <string>com.android.server.display.OverlayDisplayWindow</string>
          <string>com.android.server.display.OverlayDisplayWindow$1</string>
          <string>com.android.server.display.OverlayDisplayWindow$2</string>
          <string>com.android.server.display.WifiDisplayAdapter$2</string>
          <string>com.android.server.display.WifiDisplayAdapter$1</string>
          <string>com.android.server.display.VirtualDisplayAdapter$VirtualDisplayDevice</string>
          <string>com.android.server.display.WifiDisplayAdapter$6</string>
          <string>com.android.server.display.WifiDisplayController$21</string>
          <string>com.android.server.display.WifiDisplayAdapter$5</string>
          <string>com.android.server.display.WifiDisplayController$20</string>
          <string>com.android.server.display.WifiDisplayAdapter$4</string>
          <string>com.android.server.display.WifiDisplayAdapter$3</string>
          <string>android.view.SurfaceControl$PhysicalDisplayInfo</string>
          <string>com.android.server.display.PersistentDataStore</string>
          <string>com.android.server.display.DisplayManagerService$DisplayManagerHandler</string>
          <string>android.media.projection.IMediaProjectionManager</string>
          <string>android.opengl.EGLContext</string>
          <string>com.android.server.display.DisplayManagerService$DisplayAdapterListener</string>
          <string>com.android.server.display.DisplayAdapter</string>
          <string>com.android.server.display.OverlayDisplayAdapter$OverlayDisplayHandle$4</string>
          <string>com.android.server.display.OverlayDisplayAdapter$OverlayDisplayHandle$2</string>
          <string>com.android.server.display.OverlayDisplayAdapter$OverlayDisplayHandle$3</string>
          <string>com.android.server.display.OverlayDisplayAdapter$OverlayDisplayHandle$1</string>
          <string>com.android.server.display.AutomaticBrightnessController</string>
          <string>com.android.server.display.WifiDisplayAdapter</string>
          <string>android.media.projection.IMediaProjectionManager$Stub$Proxy</string>
          <string>android.view.Display$Mode$1</string>
          <string>android.net.wifi.p2p.WifiP2pManager$ActionListener</string>
          <string>com.android.server.display.ColorFade</string>
          <string>com.android.server.display.LocalDisplayAdapter$LocalDisplayDevice</string>
          <string>com.android.server.display.AutomaticBrightnessController$Callbacks</string>
          <string>android.media.projection.IMediaProjectionManager$Stub</string>
          <string>com.android.server.display.DisplayManagerService</string>
          <string>com.android.server.display.DisplayManagerService$CallbackRecord</string>
          <string>android.view.TextureView$SurfaceTextureListener</string>
          <string>com.android.server.display.DisplayPowerState$4</string>
          <string>android.view.DisplayEventReceiver</string>
          <string>com.android.server.display.DisplayPowerState$3</string>
          <string>com.android.server.display.DisplayPowerState$2</string>
          <string>com.android.server.display.DisplayPowerState$1</string>
          <string>com.android.server.display.DisplayPowerState</string>
          <string>com.android.server.display.DisplayAdapter$2</string>
          <string>com.android.server.display.DisplayAdapter$1</string>
          <string>com.android.server.display.DisplayDevice</string>
          <string>com.android.server.display.OverlayDisplayAdapter$1$1</string>
          <string>android.hardware.display.IDisplayManagerCallback</string>
          <string>com.android.server.display.DisplayPowerController$1</string>
          <string>com.android.server.display.RampAnimator</string>
          <string>com.android.server.display.RampAnimator$Listener</string>
          <string>com.android.server.display.VirtualDisplayAdapter</string>
          <string>com.android.server.display.DisplayPowerController$8</string>
          <string>com.android.server.display.WifiDisplayController$9</string>
          <string>com.android.server.display.WifiDisplayController$8</string>
          <string>com.android.server.display.DisplayPowerController$6</string>
          <string>com.android.server.display.WifiDisplayController$7</string>
          <string>com.android.server.display.DisplayPowerController$7</string>
          <string>com.android.server.display.WifiDisplayController$6</string>
          <string>com.android.server.display.DisplayPowerController$4</string>
          <string>com.android.server.display.DisplayManagerService$LocalService$1</string>
          <string>com.android.server.display.DisplayPowerController$5</string>
          <string>com.android.server.display.OverlayDisplayAdapter$OverlayDisplayDevice</string>
          <string>com.android.server.display.WifiDisplayAdapter$WifiDisplayDevice</string>
          <string>com.android.server.display.DisplayPowerController$2</string>
          <string>com.android.server.display.DisplayPowerController$3</string>
          <string>com.android.server.display.DisplayManagerService$LocalService</string>
          <string>com.android.server.display.RampAnimator$1</string>
          <string>com.android.server.display.DisplayAdapter$Listener</string>
          <string>com.android.server.display.WifiDisplayController$1</string>
          <string>android.hardware.display.DisplayManagerInternal$DisplayPowerCallbacks</string>
          <string>android.opengl.EGLSurface</string>
          <string>com.android.server.display.WifiDisplayController$5</string>
          <string>android.hardware.display.DisplayManagerInternal</string>
          <string>com.android.server.display.WifiDisplayController$4</string>
          <string>com.android.server.display.AutomaticBrightnessController$AutomaticBrightnessHandler</string>
          <string>com.android.server.display.WifiDisplayController$3</string>
          <string>com.android.server.display.LogicalDisplay</string>
          <string>com.android.server.display.WifiDisplayController$2</string>
          <string>android.opengl.EGL14</string>
          <string>android.opengl.EGLExt</string>
          <string>android.view.Display$HdrCapabilities</string>
          <string>com.android.server.display.OverlayDisplayWindow$Listener</string>
          <string>com.android.server.display.LocalDisplayAdapter$LocalDisplayDevice$1</string>
          <string>android.opengl.EGLDisplay</string>
          <string>com.android.server.display.WifiDisplayController</string>
          <string>com.android.server.display.DisplayPowerController$ScreenOnUnblocker</string>
          <string>com.android.server.display.LocalDisplayAdapter$HotplugDisplayEventReceiver</string>
          <string>com.android.server.display.WifiDisplayController$14</string>
          <string>com.android.server.display.WifiDisplayController$13</string>
          <string>com.android.server.display.WifiDisplayController$16</string>
          <string>com.android.server.display.WifiDisplayController$15</string>
          <string>com.android.server.display.WifiDisplayController$18</string>
          <string>com.android.server.display.WifiDisplayController$Listener</string>
          <string>com.android.server.display.WifiDisplayController$17</string>
          <string>com.android.server.display.WifiDisplayAdapter$WifiDisplayHandler</string>
          <string>com.android.server.display.OverlayDisplayAdapter$OverlayDisplayHandle</string>
          <string>com.android.server.display.WifiDisplayController$19</string>
          <string>com.android.server.display.OverlayDisplayAdapter$OverlayMode</string>
          <string>com.android.server.display.LocalDisplayAdapter$DisplayModeRecord</string>
          <string>com.android.server.display.WifiDisplayController$10</string>
          <string>android.opengl.EGLObjectHandle</string>
          <string>com.android.server.display.DisplayPowerController</string>
          <string>com.android.server.display.WifiDisplayController$12</string>
          <string>com.android.server.display.WifiDisplayController$11</string>
          <string>com.android.server.display.DisplayPowerController$DisplayControllerHandler</string>
          <string>android.view.ScaleGestureDetector$SimpleOnScaleGestureListener</string>
          <string>com.android.server.display.DisplayManagerService$BinderService</string>
          <string>com.android.server.display.DisplayPowerState$PhotonicModulator</string>
          <string>com.android.server.display.VirtualDisplayAdapter$Callback</string>
          <string>android.media.projection.IMediaProjectionCallback$Stub$Proxy</string>
          <string>com.android.server.display.OverlayDisplayAdapter</string>
          <string>android.hardware.display.DisplayManagerInternal$DisplayTransactionListener</string>
          <string>com.android.server.display.DisplayManagerService$SyncRoot</string>
          <string>com.android.server.display.VirtualDisplayAdapter$MediaProjectionCallback</string>
          <string>com.android.server.display.ColorFade$NaturalSurfaceLayout</string>
          <string>android.view.SurfaceControl</string>
          <string>com.android.server.display.DisplayDeviceInfo</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.app.usage.ss</name>
        <entities>
          <string>android.app.usage.NetworkStats$Bucket</string>
          <string>android.app.usage.ConfigurationStats</string>
          <string>android.app.usage.UsageEvents</string>
          <string>android.app.usage.NetworkStatsManager</string>
          <string>android.app.usage.NetworkStatsManager$UsageCallback</string>
          <string>android.app.usage.NetworkStats</string>
          <string>android.net.INetworkStatsService$Stub$Proxy</string>
          <string>android.app.usage.UsageEvents$1</string>
          <string>android.net.INetworkStatsService$Stub</string>
          <string>android.app.usage.UsageStats$1</string>
          <string>android.app.usage.UsageStats</string>
          <string>android.net.INetworkStatsService</string>
          <string>android.app.usage.NetworkStatsManager$CallbackHandler</string>
          <string>android.app.usage.ConfigurationStats$1</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.telephony.ss</name>
        <entities>
          <string>android.telephony.CellInfoLte</string>
          <string>android.telephony.PreciseCallState$1</string>
          <string>com.android.internal.telecom.ITelecomService$Stub</string>
          <string>android.telephony.CellSignalStrengthGsm</string>
          <string>android.telephony.CellSignalStrengthCdma</string>
          <string>com.android.internal.telephony.RILConstants</string>
          <string>android.telephony.CellInfo</string>
          <string>android.telephony.VoLteServiceState</string>
          <string>android.telephony.PhoneNumberFormattingTextWatcher</string>
          <string>android.telephony.SignalStrength$1</string>
          <string>com.android.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource</string>
          <string>android.telephony.PhoneStateListener</string>
          <string>android.telephony.PreciseCallState</string>
          <string>com.android.i18n.phonenumbers.AsYouTypeFormatter</string>
          <string>android.telephony.ServiceState$1</string>
          <string>com.android.internal.telecom.ITelecomService$Stub$Proxy</string>
          <string>android.telephony.CellIdentityCdma$1</string>
          <string>android.telephony.PreciseDataConnectionState$1</string>
          <string>android.telephony.CellIdentityWcdma$1</string>
          <string>android.telephony.PhoneStateListener$1</string>
          <string>android.telephony.JapanesePhoneNumberFormatter</string>
          <string>android.telephony.CellInfoCdma</string>
          <string>android.telephony.CellInfoGsm</string>
          <string>android.telephony.ServiceState</string>
          <string>android.telephony.CellIdentityCdma</string>
          <string>android.telephony.CellInfoCdma$1</string>
          <string>com.android.internal.telephony.IPhoneSubInfo$Stub</string>
          <string>android.telephony.NeighboringCellInfo</string>
          <string>android.telephony.CellIdentityWcdma</string>
          <string>android.telephony.NeighboringCellInfo$1</string>
          <string>android.telephony.CellIdentityLte$1</string>
          <string>android.telephony.CellSignalStrengthGsm$1</string>
          <string>android.telephony.CellInfoWcdma$1</string>
          <string>android.telephony.RadioAccessFamily$1</string>
          <string>android.telephony.CellLocation</string>
          <string>android.telephony.PhoneStateListener$IPhoneStateListenerStub</string>
          <string>android.telephony.CellSignalStrength</string>
          <string>android.telephony.CellSignalStrengthCdma$1</string>
          <string>android.telephony.CellSignalStrengthWcdma$1</string>
          <string>com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy</string>
          <string>android.telephony.CellInfoWcdma</string>
          <string>android.telephony.PhoneNumberUtils</string>
          <string>android.telephony.TelephonyManager</string>
          <string>android.telephony.CellSignalStrengthLte</string>
          <string>android.telephony.RadioAccessFamily</string>
          <string>android.telephony.CellIdentityGsm</string>
          <string>android.telephony.CellInfoGsm$1</string>
          <string>com.android.i18n.phonenumbers.ShortNumberUtil</string>
          <string>android.telephony.SubscriptionInfo</string>
          <string>android.telephony.VoLteServiceState$1</string>
          <string>com.android.internal.telephony.IPhoneSubInfo</string>
          <string>android.telephony.TelephonyManager$MultiSimVariants</string>
          <string>android.telephony.CellIdentityGsm$1</string>
          <string>android.telephony.ModemActivityInfo</string>
          <string>android.telephony.CellSignalStrengthLte$1</string>
          <string>android.telephony.TelephonyManager$WifiCallingChoices</string>
          <string>android.telephony.IccOpenLogicalChannelResponse$1</string>
          <string>android.telephony.DataConnectionRealTimeInfo</string>
          <string>android.telephony.SignalStrength</string>
          <string>com.android.internal.telecom.ITelecomService</string>
          <string>android.telephony.CellInfoLte$1</string>
          <string>android.telephony.DataConnectionRealTimeInfo$1</string>
          <string>android.telephony.PhoneNumberUtils$CountryCallingCodeAndNewIndex</string>
          <string>android.telephony.PreciseDataConnectionState</string>
          <string>android.telephony.IccOpenLogicalChannelResponse</string>
          <string>android.telephony.CellSignalStrengthWcdma</string>
          <string>android.telephony.ModemActivityInfo$1</string>
          <string>com.android.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat</string>
          <string>android.telephony.CellInfo$1</string>
          <string>android.telephony.CellIdentityLte</string>
          <string>android.telephony.cdma.CdmaCellLocation</string>
          <string>android.telephony.SubscriptionInfo$1</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.internal.alsa.ss</name>
        <entities>
          <string>com.android.internal.alsa.AlsaDevicesParser$AlsaDeviceRecord</string>
          <string>com.android.internal.alsa.AlsaDevicesParser</string>
          <string>com.android.internal.alsa.LineTokenizer</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.internal.database.ss</name>
        <entities>
          <string>com.android.internal.database.SortCursor</string>
          <string>com.android.internal.database.SortCursor$1</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.trust.ss</name>
        <entities>
          <string>android.service.trust.ITrustAgentServiceCallback$Stub$Proxy</string>
          <string>com.android.server.trust.TrustManagerService$Receiver</string>
          <string>android.service.trust.ITrustAgentServiceCallback$Stub</string>
          <string>com.android.server.trust.TrustArchive$Event</string>
          <string>com.android.server.trust.TrustAgentWrapper$1</string>
          <string>com.android.server.trust.TrustAgentWrapper$2</string>
          <string>android.service.trust.ITrustAgentService</string>
          <string>com.android.server.trust.TrustManagerService$1$1</string>
          <string>android.service.trust.ITrustAgentService$Stub$Proxy</string>
          <string>android.service.trust.ITrustAgentServiceCallback</string>
          <string>com.android.server.trust.TrustManagerService$AgentInfo</string>
          <string>android.service.trust.ITrustAgentService$Stub</string>
          <string>com.android.server.trust.TrustManagerService$2</string>
          <string>com.android.server.trust.TrustManagerService$1</string>
          <string>com.android.internal.widget.LockPatternUtils$StrongAuthTracker$H</string>
          <string>com.android.server.trust.TrustManagerService$3</string>
          <string>com.android.server.trust.TrustAgentWrapper</string>
          <string>com.android.server.trust.TrustManagerService</string>
          <string>com.android.internal.widget.LockPatternUtils$StrongAuthTracker</string>
          <string>com.android.internal.widget.LockPatternUtils$StrongAuthTracker$1</string>
          <string>android.util.SparseBooleanArray</string>
          <string>com.android.server.trust.TrustAgentWrapper$3</string>
          <string>com.android.server.trust.TrustAgentWrapper$4</string>
          <string>com.android.server.trust.TrustArchive</string>
          <string>android.app.trust.ITrustListener</string>
          <string>com.android.server.trust.TrustManagerService$StrongAuthTracker</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.webkit.ss</name>
        <entities>
          <string>java.security.KeyPair</string>
          <string>android.webkit.WebIconDatabase</string>
          <string>android.webkit.JsResult</string>
          <string>android.webkit.WebSettings$ZoomDensity</string>
          <string>android.webkit.IWebViewUpdateService$Stub</string>
          <string>android.webkit.WebSettings$RenderPriority</string>
          <string>android.webkit.GeolocationPermissions</string>
          <string>android.webkit.SslErrorHandler</string>
          <string>android.webkit.FindActionModeCallback</string>
          <string>android.webkit.CookieManager</string>
          <string>libcore.net.MimeUtils</string>
          <string>android.webkit.TokenBindingService$TokenBindingKey</string>
          <string>android.webkit.JsDialogHelper$PositiveListener</string>
          <string>android.webkit.JsDialogHelper</string>
          <string>android.webkit.WebChromeClient$CustomViewCallback</string>
          <string>android.webkit.WebSettings$PluginState</string>
          <string>android.net.WebAddress</string>
          <string>android.webkit.IWebViewUpdateService$Stub$Proxy</string>
          <string>android.webkit.WebView$FindListener</string>
          <string>android.webkit.WebResourceResponse</string>
          <string>android.webkit.WebViewProviderInfo$1</string>
          <string>android.webkit.WebViewProvider</string>
          <string>android.webkit.WebViewFactory$RelroFileCreator</string>
          <string>android.webkit.IWebViewUpdateService</string>
          <string>android.webkit.WebViewFactory$MissingWebViewPackageException</string>
          <string>android.webkit.WebStorage$QuotaUpdater</string>
          <string>android.webkit.WebViewFactory</string>
          <string>java.lang.reflect.Constructor</string>
          <string>android.webkit.WebViewFactory$1</string>
          <string>android.webkit.WebViewProviderResponse</string>
          <string>android.webkit.WebSettings</string>
          <string>android.webkit.WebResourceRequest</string>
          <string>android.net.ParseException</string>
          <string>android.webkit.JsDialogHelper$CancelListener</string>
          <string>android.view.ViewTreeObserver$OnGlobalFocusChangeListener</string>
          <string>android.webkit.WebChromeClient</string>
          <string>android.webkit.ValueCallback</string>
          <string>android.webkit.ConsoleMessage$MessageLevel</string>
          <string>android.webkit.WebViewFragment</string>
          <string>android.net.http.SslError</string>
          <string>android.webkit.JsPromptResult</string>
          <string>android.webkit.WebView$FindListenerDistributor</string>
          <string>android.webkit.WebView$VisualStateCallback</string>
          <string>android.webkit.JsResult$ResultReceiver</string>
          <string>android.webkit.WebView$HitTestResult</string>
          <string>android.webkit.WebHistoryItem</string>
          <string>android.webkit.TokenBindingService</string>
          <string>android.webkit.PermissionRequest</string>
          <string>android.webkit.WebViewProvider$ScrollDelegate</string>
          <string>android.webkit.WebView$PictureListener</string>
          <string>android.webkit.ServiceWorkerController</string>
          <string>android.webkit.ConsoleMessage</string>
          <string>android.webkit.WebSettings$LayoutAlgorithm</string>
          <string>android.webkit.ServiceWorkerWebSettings</string>
          <string>android.webkit.CacheManager</string>
          <string>android.webkit.WebSettings$TextSize</string>
          <string>android.webkit.UrlInterceptHandler</string>
          <string>android.webkit.WebMessagePort$WebMessageCallback</string>
          <string>java.lang.Enum</string>
          <string>android.webkit.WebViewClient</string>
          <string>android.webkit.WebBackForwardList</string>
          <string>android.webkit.WebView$PrivateAccess</string>
          <string>android.webkit.CookieSyncManager</string>
          <string>java.util.zip.ZipFile</string>
          <string>android.webkit.WebView</string>
          <string>android.webkit.PluginList</string>
          <string>android.webkit.WebViewProvider$ViewDelegate</string>
          <string>android.webkit.ServiceWorkerClient</string>
          <string>android.webkit.HttpAuthHandler</string>
          <string>java.lang.Cloneable</string>
          <string>android.webkit.WebSyncManager</string>
          <string>android.webkit.UrlInterceptRegistry</string>
          <string>android.webkit.WebViewProviderInfo</string>
          <string>android.webkit.WebStorage</string>
          <string>java.security.Principal</string>
          <string>android.webkit.ClientCertRequest</string>
          <string>android.webkit.GeolocationPermissions$Callback</string>
          <string>android.webkit.WebChromeClient$FileChooserParams</string>
          <string>android.webkit.WebViewFactoryProvider</string>
          <string>android.webkit.WebViewDatabase</string>
          <string>android.webkit.WebView$WebViewTransport</string>
          <string>android.webkit.DownloadListener</string>
          <string>java.io.StringBufferInputStream</string>
          <string>android.webkit.WebMessagePort</string>
          <string>android.webkit.WebViewDelegate$1</string>
          <string>android.webkit.WebMessage</string>
          <string>android.webkit.WebStorage$Origin</string>
          <string>android.webkit.PluginData</string>
          <string>android.webkit.Plugin$DefaultClickHandler</string>
          <string>android.webkit.LegacyErrorStrings</string>
          <string>android.webkit.WebViewDelegate</string>
          <string>android.webkit.WebViewProviderResponse$1</string>
          <string>android.webkit.URLUtil</string>
          <string>android.webkit.WebViewFactoryProvider$Statics</string>
          <string>android.webkit.Plugin</string>
          <string>android.webkit.WebResourceError</string>
          <string>android.webkit.FindActionModeCallback$NoAction</string>
          <string>android.webkit.CacheManager$CacheResult</string>
          <string>android.webkit.Plugin$PreferencesClickHandler</string>
          <string>android.webkit.WebViewDelegate$OnTraceEnabledChangeListener</string>
          <string>android.webkit.MimeTypeMap</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.database.sqlite.ss</name>
        <entities>
          <string>android.database.sqlite.SQLiteConnectionPool$1</string>
          <string>android.database.sqlite.DatabaseObjectNotClosedException</string>
          <string>android.database.sqlite.SQLiteDebug</string>
          <string>android.database.sqlite.SQLiteConnectionPool</string>
          <string>android.database.sqlite.SQLiteDatabaseConfiguration</string>
          <string>android.database.sqlite.SQLiteTransactionListener</string>
          <string>android.database.sqlite.SQLiteConnection$PreparedStatementCache</string>
          <string>android.database.sqlite.SQLiteCursorDriver</string>
          <string>android.database.sqlite.SQLiteGlobal</string>
          <string>android.database.sqlite.SQLiteConnection$PreparedStatement</string>
          <string>android.database.sqlite.SQLiteDatabase</string>
          <string>android.database.sqlite.SQLiteSession</string>
          <string>android.database.sqlite.SQLiteConnection</string>
          <string>android.database.sqlite.SQLiteConnection$Operation</string>
          <string>android.database.DatabaseErrorHandler</string>
          <string>android.database.sqlite.SQLiteDatabaseLockedException</string>
          <string>android.database.AbstractWindowedCursor</string>
          <string>android.database.sqlite.SQLiteQuery</string>
          <string>android.database.sqlite.SQLiteStatementInfo</string>
          <string>android.database.sqlite.SQLiteQueryBuilder</string>
          <string>android.database.sqlite.SQLiteConnection$OperationLog</string>
          <string>android.database.sqlite.SQLiteDatabase$1</string>
          <string>android.database.sqlite.SQLiteDatabase$2</string>
          <string>android.util.PrefixPrinter</string>
          <string>android.database.sqlite.SQLiteCursor</string>
          <string>java.util.concurrent.locks.LockSupport</string>
          <string>android.database.DefaultDatabaseErrorHandler</string>
          <string>android.database.sqlite.SQLiteDebug$PagerStats</string>
          <string>android.database.sqlite.SQLiteDebug$DbStats</string>
          <string>android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter</string>
          <string>android.database.sqlite.SQLiteConnectionPool$AcquiredConnectionStatus</string>
          <string>android.database.sqlite.SQLiteSession$Transaction</string>
          <string>android.database.sqlite.SQLiteDirectCursorDriver</string>
          <string>android.database.sqlite.SQLiteDatabase$CustomFunction</string>
          <string>android.database.sqlite.SQLiteBindOrColumnIndexOutOfRangeException</string>
          <string>android.database.sqlite.SQLiteClosable</string>
          <string>android.database.sqlite.SQLiteCustomFunction</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.renderscript.ss</name>
        <entities>
          <string>java.lang.IndexOutOfBoundsException</string>
          <string>android.renderscript.ProgramRaster$CullMode</string>
          <string>android.renderscript.ProgramFragment</string>
          <string>android.renderscript.Short2</string>
          <string>android.renderscript.ScriptGroup$ConnectLine</string>
          <string>android.renderscript.Short3</string>
          <string>android.renderscript.Short4</string>
          <string>android.renderscript.ProgramVertexFixedFunction$InternalBuilder</string>
          <string>android.renderscript.FieldPacker</string>
          <string>android.renderscript.RenderScript$MessageThread</string>
          <string>android.renderscript.Sampler</string>
          <string>android.renderscript.Font</string>
          <string>android.renderscript.Script$FieldID</string>
          <string>android.renderscript.ScriptGroup$Builder</string>
          <string>android.renderscript.Type</string>
          <string>android.renderscript.Mesh$Builder</string>
          <string>android.renderscript.RenderScriptGL$SurfaceConfig</string>
          <string>android.renderscript.Mesh$Primitive</string>
          <string>android.renderscript.Script</string>
          <string>android.renderscript.ScriptIntrinsicYuvToRGB</string>
          <string>android.renderscript.Program</string>
          <string>android.renderscript.Sampler$Value</string>
          <string>android.renderscript.Float3</string>
          <string>android.renderscript.Float2</string>
          <string>android.renderscript.Float4</string>
          <string>android.renderscript.RSDriverException</string>
          <string>android.renderscript.ProgramVertex$Builder</string>
          <string>dalvik.system.CloseGuard</string>
          <string>android.renderscript.Element</string>
          <string>android.renderscript.ScriptIntrinsicHistogram</string>
          <string>android.renderscript.RenderScriptCacheDir</string>
          <string>android.renderscript.Script$LaunchOptions</string>
          <string>android.renderscript.Type$Builder</string>
          <string>android.renderscript.RenderScript</string>
          <string>android.renderscript.ScriptIntrinsicResize</string>
          <string>android.renderscript.RenderScript$ContextType</string>
          <string>android.renderscript.ProgramFragmentFixedFunction$Builder$Slot</string>
          <string>android.renderscript.Type$CubemapFace</string>
          <string>android.renderscript.ProgramRaster$Builder</string>
          <string>android.renderscript.ScriptIntrinsicLUT</string>
          <string>android.renderscript.Matrix3f</string>
          <string>android.renderscript.Byte3</string>
          <string>android.renderscript.ScriptGroup$Future</string>
          <string>android.renderscript.Byte2</string>
          <string>android.renderscript.ScriptGroup$Node</string>
          <string>android.renderscript.Byte4</string>
          <string>android.renderscript.ScriptIntrinsicConvolve5x5</string>
          <string>android.renderscript.Mesh$TriangleMeshBuilder</string>
          <string>android.renderscript.Mesh$Builder$Entry</string>
          <string>android.renderscript.ProgramVertexFixedFunction</string>
          <string>android.renderscript.ScriptGroup$Closure$ValueAndSize</string>
          <string>android.renderscript.ProgramFragmentFixedFunction$Builder</string>
          <string>android.renderscript.Matrix2f</string>
          <string>android.renderscript.ProgramFragmentFixedFunction$Builder$Format</string>
          <string>android.renderscript.FileA3D$EntryType</string>
          <string>android.renderscript.Script$KernelID</string>
          <string>android.renderscript.Element$DataKind</string>
          <string>android.renderscript.Script$InvokeID</string>
          <string>android.renderscript.ProgramStore$DepthFunc</string>
          <string>android.renderscript.ProgramFragmentFixedFunction$InternalBuilder</string>
          <string>android.renderscript.ProgramStore$Builder</string>
          <string>android.renderscript.AllocationAdapter</string>
          <string>android.renderscript.RSIllegalArgumentException</string>
          <string>android.renderscript.Allocation</string>
          <string>android.renderscript.RenderScript$RSMessageHandler</string>
          <string>android.renderscript.ScriptIntrinsic3DLUT</string>
          <string>android.renderscript.ScriptIntrinsicBlur</string>
          <string>android.renderscript.BaseObj</string>
          <string>android.renderscript.ProgramStore$BlendSrcFunc</string>
          <string>android.renderscript.RSTextureView</string>
          <string>android.renderscript.ProgramRaster</string>
          <string>android.renderscript.ProgramStore$BlendDstFunc</string>
          <string>android.renderscript.Mesh</string>
          <string>android.renderscript.ProgramFragment$Builder</string>
          <string>android.renderscript.Mesh$AllocationBuilder</string>
          <string>android.renderscript.Program$BaseProgramBuilder</string>
          <string>android.renderscript.Script$FieldBase</string>
          <string>android.renderscript.Double2</string>
          <string>android.renderscript.ScriptIntrinsicColorMatrix</string>
          <string>android.renderscript.ProgramVertexFixedFunction$Constants</string>
          <string>android.renderscript.ProgramFragmentFixedFunction$Builder$EnvMode</string>
          <string>android.renderscript.Matrix4f</string>
          <string>android.renderscript.Element$Builder</string>
          <string>android.renderscript.Double4</string>
          <string>android.renderscript.Double3</string>
          <string>android.renderscript.Font$Style</string>
          <string>android.renderscript.FileA3D</string>
          <string>android.renderscript.ScriptGroup$Input</string>
          <string>android.renderscript.ScriptGroup</string>
          <string>android.renderscript.ScriptGroup$Builder2</string>
          <string>android.renderscript.ScriptGroup$IO</string>
          <string>android.renderscript.Program$ProgramParam</string>
          <string>android.renderscript.Allocation$MipmapControl</string>
          <string>android.renderscript.RenderScript$Priority</string>
          <string>android.renderscript.Allocation$OnBufferAvailableListener</string>
          <string>android.renderscript.RenderScript$RSErrorHandler</string>
          <string>android.renderscript.ScriptGroup$Binding</string>
          <string>android.renderscript.ScriptGroup$Closure</string>
          <string>android.renderscript.Program$TextureType</string>
          <string>android.renderscript.RenderScriptGL</string>
          <string>android.renderscript.ProgramVertexFixedFunction$Builder</string>
          <string>android.renderscript.FileA3D$IndexEntry</string>
          <string>android.renderscript.Int2</string>
          <string>android.renderscript.Long3</string>
          <string>android.renderscript.Long2</string>
          <string>android.renderscript.Int4</string>
          <string>android.renderscript.Int3</string>
          <string>android.renderscript.Long4</string>
          <string>android.renderscript.Sampler$Builder</string>
          <string>android.renderscript.RSInvalidStateException</string>
          <string>android.renderscript.ScriptIntrinsicConvolve3x3</string>
          <string>android.renderscript.Mesh$AllocationBuilder$Entry</string>
          <string>android.renderscript.Element$DataType</string>
          <string>android.renderscript.ProgramFragmentFixedFunction</string>
          <string>android.renderscript.Script$Builder</string>
          <string>android.renderscript.Font$FontFamily</string>
          <string>android.renderscript.ProgramStore</string>
          <string>android.renderscript.ProgramVertex</string>
          <string>android.renderscript.RSRuntimeException</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.internal.os.ss</name>
        <entities>
          <string>com.android.internal.os.BatteryStatsImpl$Uid$Pkg</string>
          <string>com.android.internal.os.BatteryStatsImpl$TimeBaseObs</string>
          <string>com.android.internal.os.PowerProfile</string>
          <string>android.os.BatteryStats$Uid$Wakelock</string>
          <string>com.android.internal.os.BatteryStatsImpl$Uid$Proc</string>
          <string>dalvik.system.profiler.SamplingProfiler</string>
          <string>com.android.internal.os.BatteryStatsImpl$Uid$3</string>
          <string>com.android.internal.os.BatteryStatsImpl$Uid$2</string>
          <string>com.android.internal.os.BatteryStatsImpl$Uid$1</string>
          <string>com.android.internal.os.BatteryStatsImpl$BatchTimer</string>
          <string>com.android.internal.os.WrapperInit</string>
          <string>com.android.internal.os.ZygoteInit$MethodAndArgsCaller</string>
          <string>com.android.internal.os.BatteryStatsHelper</string>
          <string>com.android.internal.os.BatteryStatsImpl$OverflowArrayMap</string>
          <string>android.os.BatteryStats$DailyItem</string>
          <string>com.android.internal.os.PathClassLoaderFactory</string>
          <string>com.android.internal.os.InstallerConnection</string>
          <string>com.android.internal.os.LoggingPrintStream$1</string>
          <string>com.android.internal.os.RuntimeInit</string>
          <string>android.icu.util.ULocale</string>
          <string>com.android.internal.os.BatteryStatsImpl$Uid$Wakelock</string>
          <string>com.android.internal.os.AndroidPrintStream</string>
          <string>dalvik.system.PathClassLoader</string>
          <string>com.android.internal.os.BaseCommand</string>
          <string>com.android.internal.os.BatteryStatsImpl$MyHandler</string>
          <string>android.os.BatteryStats$Timer</string>
          <string>android.icu.text.DecimalFormatSymbols</string>
          <string>com.android.internal.os.WifiPowerEstimator</string>
          <string>com.android.internal.os.HandlerCaller$MyHandler</string>
          <string>dalvik.system.profiler.HprofData</string>
          <string>com.android.internal.os.PowerCalculator</string>
          <string>com.android.internal.os.BatteryStatsImpl$ControllerActivityCounterImpl</string>
          <string>com.android.internal.os.BluetoothPowerCalculator</string>
          <string>android.net.LocalSocket</string>
          <string>com.android.internal.os.KernelUidCpuTimeReader</string>
          <string>android.os.BatteryStats$LevelStepTracker</string>
          <string>com.android.internal.os.ZygoteInit</string>
          <string>com.android.internal.os.KernelUidCpuTimeReader$Callback</string>
          <string>com.android.internal.os.SensorPowerCalculator</string>
          <string>android.os.ParcelFormatException</string>
          <string>android.os.Process$ZygoteState</string>
          <string>android.os.BatteryStats$Uid$Proc</string>
          <string>android.text.Hyphenator</string>
          <string>com.android.internal.os.HandlerCaller</string>
          <string>android.os.BatteryStats$LongCounter</string>
          <string>com.android.internal.os.RuntimeInit$UncaughtHandler</string>
          <string>dalvik.system.profiler.BinaryHprofWriter</string>
          <string>com.android.internal.os.ZygoteSecurityException</string>
          <string>com.android.internal.os.BinderInternal</string>
          <string>com.android.internal.os.ProcessCpuTracker$1</string>
          <string>android.os.BatteryStats$PackageChange</string>
          <string>android.os.BatteryStats$Uid$Proc$ExcessivePower</string>
          <string>com.android.internal.os.BatteryStatsImpl$Uid$Pkg$Serv</string>
          <string>android.os.BatteryStats$HistoryStepDetails</string>
          <string>com.android.internal.os.BatteryStatsImpl$Uid</string>
          <string>android.os.BatteryStats$Uid$Pid</string>
          <string>com.android.internal.os.TransferPipe</string>
          <string>com.android.internal.os.SamplingProfilerIntegration$2</string>
          <string>com.android.internal.os.BatteryStatsImpl$StopwatchTimer</string>
          <string>com.android.internal.os.SamplingProfilerIntegration$1</string>
          <string>dalvik.system.profiler.SamplingProfiler$ThreadSet</string>
          <string>com.android.internal.os.ZygoteConnection</string>
          <string>com.android.internal.os.KernelWakelockReader</string>
          <string>com.android.internal.os.BatteryStatsImpl$PlatformIdleStateCallback</string>
          <string>java.io.BufferedReader</string>
          <string>com.android.internal.os.KernelWakelockStats$Entry</string>
          <string>com.android.internal.os.AtomicFile</string>
          <string>com.android.internal.os.Zygote</string>
          <string>android.net.Credentials</string>
          <string>com.android.internal.os.BaseCommand$1</string>
          <string>java.lang.NoSuchMethodException</string>
          <string>com.android.internal.os.ProcessCpuTracker</string>
          <string>java.util.logging.LogManager</string>
          <string>android.net.LocalServerSocket</string>
          <string>com.android.internal.os.ZygoteConnection$Arguments</string>
          <string>com.android.internal.os.BatteryStatsImpl$Clocks</string>
          <string>java.security.Security</string>
          <string>com.android.internal.os.BatteryStatsImpl$Counter</string>
          <string>com.android.internal.os.BatteryStatsImpl$Timer</string>
          <string>android.icu.impl.CacheValue$Strength</string>
          <string>java.util.Formatter</string>
          <string>com.android.internal.os.KernelCpuSpeedReader</string>
          <string>java.util.concurrent.ThreadFactory</string>
          <string>com.android.internal.os.BatteryStatsImpl$Uid$Sensor</string>
          <string>android.os.BatteryStats$HistoryTag</string>
          <string>com.android.internal.os.SamplingProfilerIntegration</string>
          <string>android.net.LocalSocketAddress</string>
          <string>android.icu.impl.CacheValue</string>
          <string>com.android.internal.os.WakelockPowerCalculator</string>
          <string>com.android.internal.os.BatteryStatsImpl$SamplingTimer</string>
          <string>org.apache.harmony.luni.internal.util.TimezoneGetter</string>
          <string>java.util.Locale$Builder</string>
          <string>com.android.internal.logging.AndroidConfig</string>
          <string>android.util.LogWriter</string>
          <string>android.os.BatteryStats$Uid$Pkg</string>
          <string>com.android.internal.os.TransferPipe$Caller</string>
          <string>com.android.internal.os.RuntimeInit$1</string>
          <string>android.os.BatteryStats$HistoryPrinter</string>
          <string>com.android.internal.os.BatteryStatsImpl$5</string>
          <string>com.android.internal.os.WifiPowerCalculator</string>
          <string>com.android.internal.os.LoggingPrintStream</string>
          <string>com.android.internal.os.BatteryStatsImpl$1</string>
          <string>com.android.internal.os.CameraPowerCalculator</string>
          <string>com.android.internal.os.BatteryStatsImpl$2</string>
          <string>com.android.internal.os.BatteryStatsImpl$3</string>
          <string>android.os.BatteryStats$ControllerActivityCounter</string>
          <string>com.android.internal.os.BatteryStatsImpl$4</string>
          <string>android.os.BatteryStats$HistoryItem</string>
          <string>java.lang.Thread$UncaughtExceptionHandler</string>
          <string>android.net.LocalSocketAddress$Namespace</string>
          <string>com.android.internal.os.BatteryStatsImpl$SystemClocks</string>
          <string>com.android.internal.os.MobileRadioPowerCalculator</string>
          <string>com.android.internal.os.CpuPowerCalculator</string>
          <string>com.android.internal.os.FlashlightPowerCalculator</string>
          <string>com.android.internal.os.BatterySipper$DrainType</string>
          <string>com.android.internal.os.BatteryStatsImpl$BatteryCallback</string>
          <string>android.os.BatteryStats$Uid</string>
          <string>com.android.internal.os.BinderInternal$GcWatcher</string>
          <string>com.android.internal.os.BatteryStatsImpl$LongSamplingCounter</string>
          <string>dalvik.system.ZygoteHooks</string>
          <string>android.os.BatteryStats$Uid$Pkg$Serv</string>
          <string>android.os.BatteryStats$HistoryEventTracker</string>
          <string>com.android.internal.os.BatteryStatsImpl$TimeBase</string>
          <string>com.android.internal.os.PowerProfile$CpuClusterKey</string>
          <string>com.android.internal.os.RuntimeInit$Arguments</string>
          <string>com.android.internal.os.KernelWakelockStats</string>
          <string>com.android.internal.os.BatteryStatsHelper$1</string>
          <string>android.os.BatteryStats$Uid$Sensor</string>
          <string>com.android.internal.os.BatterySipper</string>
          <string>java.lang.UnsatisfiedLinkError</string>
          <string>java.io.FileReader</string>
          <string>com.android.internal.os.BatteryStatsImpl</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.net.wifi.p2p.nsd.ss</name>
        <entities>
          <string>android.net.wifi.p2p.nsd.WifiP2pServiceInfo</string>
          <string>android.net.wifi.p2p.nsd.WifiP2pServiceRequest</string>
          <string>android.net.wifi.p2p.nsd.WifiP2pUpnpServiceResponse</string>
          <string>android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest</string>
          <string>android.net.wifi.p2p.nsd.WifiP2pServiceInfo$1</string>
          <string>android.net.wifi.p2p.nsd.WifiP2pServiceResponse</string>
          <string>android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo</string>
          <string>android.net.wifi.p2p.nsd.WifiP2pServiceRequest$1</string>
          <string>android.net.wifi.p2p.nsd.WifiP2pServiceResponse$1</string>
          <string>android.net.wifi.p2p.nsd.WifiP2pServiceResponse$Status</string>
          <string>android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.media.projection.ss</name>
        <entities>
          <string>android.media.projection.IMediaProjectionWatcherCallback$Stub</string>
          <string>com.android.server.media.projection.MediaProjectionManagerService$WatcherStopCallback</string>
          <string>com.android.server.media.projection.MediaProjectionManagerService$MediaRouterCallback</string>
          <string>com.android.server.media.projection.MediaProjectionManagerService$CallbackDelegate</string>
          <string>com.android.server.media.projection.MediaProjectionManagerService$MediaProjection</string>
          <string>com.android.server.media.projection.MediaProjectionManagerService</string>
          <string>android.media.projection.IMediaProjectionWatcherCallback$Stub$Proxy</string>
          <string>android.media.projection.IMediaProjectionWatcherCallback</string>
          <string>com.android.server.media.projection.MediaProjectionManagerService$ClientStopCallback</string>
          <string>com.android.server.media.projection.MediaProjectionManagerService$WatcherStartCallback</string>
          <string>com.android.server.media.projection.MediaProjectionManagerService$BinderService</string>
          <string>android.media.projection.IMediaProjectionCallback</string>
          <string>com.android.server.media.projection.MediaProjectionManagerService$1</string>
          <string>com.android.server.media.projection.MediaProjectionManagerService$MediaProjection$1</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.app.trust.ss</name>
        <entities>
          <string>android.app.trust.ITrustManager</string>
          <string>android.app.trust.ITrustManager$Stub</string>
          <string>android.app.trust.TrustManager</string>
          <string>android.app.trust.ITrustListener$Stub$Proxy</string>
          <string>android.app.trust.ITrustListener$Stub</string>
          <string>android.app.trust.TrustManager$2</string>
          <string>android.app.trust.TrustManager$1</string>
          <string>android.app.trust.TrustManager$TrustListener</string>
          <string>android.app.trust.ITrustManager$Stub$Proxy</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.vr.ss</name>
        <entities>
          <string>com.android.server.vr.SettingsObserver</string>
          <string>android.service.vr.IVrManager$Stub$Proxy</string>
          <string>android.service.vr.IVrManager</string>
          <string>com.android.server.vr.VrManagerInternal</string>
          <string>android.service.vr.IVrStateCallbacks</string>
          <string>com.android.server.vr.EnabledComponentsObserver</string>
          <string>com.android.server.vr.VrManagerService$VrState</string>
          <string>android.service.vr.IVrManager$Stub</string>
          <string>com.android.server.vr.VrManagerService$1</string>
          <string>com.android.server.vr.VrManagerService$2</string>
          <string>com.android.server.vr.VrManagerService$3</string>
          <string>com.android.server.vr.VrManagerService$4</string>
          <string>com.android.server.utils.ManagedApplicationService$BinderChecker</string>
          <string>android.service.vr.IVrListener$Stub$Proxy</string>
          <string>com.android.server.vr.VrManagerService$5</string>
          <string>android.service.vr.IVrListener$Stub</string>
          <string>com.android.server.vr.EnabledComponentsObserver$EnabledComponentChangeListener</string>
          <string>com.android.server.vr.SettingsObserver$SettingChangeListener</string>
          <string>com.android.internal.content.PackageMonitor</string>
          <string>com.android.server.vr.EnabledComponentsObserver$1</string>
          <string>com.android.server.vr.VrManagerService$NotificationAccessManager</string>
          <string>android.service.vr.IVrStateCallbacks$Stub</string>
          <string>android.service.vr.IVrStateCallbacks$Stub$Proxy</string>
          <string>com.android.server.vr.SettingsObserver$1</string>
          <string>com.android.server.vr.SettingsObserver$2</string>
          <string>com.android.server.vr.VrManagerService$LocalService</string>
          <string>android.service.vr.IVrListener</string>
          <string>com.android.server.vr.VrManagerService</string>
          <string>com.android.server.utils.ManagedApplicationService$PendingEvent</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.ss</name>
        <entities>
          <string>android.R$animator</string>
          <string>android.Manifest$permission</string>
          <string>android.R$interpolator</string>
          <string>android.R$attr</string>
          <string>android.R$style</string>
          <string>android.Manifest</string>
          <string>android.R$xml</string>
          <string>android.R$raw</string>
          <string>android.R$color</string>
          <string>android.R$fraction</string>
          <string>android.R$anim</string>
          <string>android.Manifest$permission_group</string>
          <string>android.R$array</string>
          <string>android.R$transition</string>
          <string>android.R$plurals</string>
          <string>android.R</string>
          <string>android.R$string</string>
          <string>android.R$mipmap</string>
          <string>android.R$id</string>
          <string>android.R$integer</string>
          <string>android.R$layout</string>
          <string>android.R$drawable</string>
          <string>android.R$dimen</string>
          <string>android.R$menu</string>
          <string>android.R$bool</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.internal.preference.ss</name>
        <entities>
          <string>com.android.internal.preference.YesNoPreference$SavedState</string>
          <string>com.android.internal.preference.YesNoPreference</string>
          <string>com.android.internal.preference.YesNoPreference$SavedState$1</string>
          <string>android.preference.Preference$BaseSavedState$1</string>
          <string>android.preference.Preference$BaseSavedState</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.usage.ss</name>
        <entities>
          <string>android.app.usage.TimeSparseArray</string>
          <string>java.io.FilenameFilter</string>
          <string>com.android.server.usage.UsageStatsDatabase$StatCombiner</string>
          <string>com.android.server.usage.UserUsageStatsService$StatsUpdatedListener</string>
          <string>android.hardware.display.DisplayManager$DisplayListener</string>
          <string>com.android.server.usage.UsageStatsXmlV1</string>
          <string>com.android.internal.util.XmlUtils$WriteMapCallback</string>
          <string>android.util.KeyValueListParser</string>
          <string>com.android.server.usage.UsageStatsService$SettingsObserver</string>
          <string>com.android.server.usage.UserUsageStatsService</string>
          <string>com.android.server.usage.UsageStatsService$LocalService</string>
          <string>com.android.server.usage.UsageStatsService$BinderService</string>
          <string>com.android.server.usage.UnixCalendar</string>
          <string>com.android.server.usage.UsageStatsService$1</string>
          <string>com.android.server.usage.AppIdleHistory$PackageHistory</string>
          <string>com.android.server.usage.UsageStatsService$PackageReceiver</string>
          <string>android.os.IDeviceIdleController$Stub$Proxy</string>
          <string>android.app.usage.UsageStatsManagerInternal</string>
          <string>com.android.server.usage.UsageStatsService$UserActionsReceiver</string>
          <string>android.app.usage.UsageEvents$Event</string>
          <string>android.os.IDeviceIdleController</string>
          <string>java.io.FileWriter</string>
          <string>android.app.usage.UsageStatsManagerInternal$AppIdleStateChangeListener</string>
          <string>com.android.server.usage.UserUsageStatsService$4</string>
          <string>com.android.server.usage.UsageStatsService$H</string>
          <string>com.android.server.usage.UserUsageStatsService$1</string>
          <string>com.android.server.usage.IntervalStats</string>
          <string>com.android.server.usage.UsageStatsDatabase$1</string>
          <string>com.android.server.usage.UserUsageStatsService$2</string>
          <string>java.net.ProtocolException</string>
          <string>com.android.server.usage.UserUsageStatsService$3</string>
          <string>com.android.server.usage.AppIdleHistory</string>
          <string>com.android.server.usage.UsageStatsXml</string>
          <string>com.android.server.usage.UsageStatsDatabase$CheckinAction</string>
          <string>com.android.server.usage.UsageStatsService$DeviceStateReceiver</string>
          <string>com.android.internal.util.XmlUtils</string>
          <string>com.android.server.usage.UsageStatsDatabase</string>
          <string>com.android.server.usage.UsageStatsService</string>
          <string>android.os.IDeviceIdleController$Stub</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.internal.backup.ss</name>
        <entities>
          <string>com.android.internal.backup.LocalTransport$DecodedFilename</string>
          <string>com.android.internal.backup.LocalTransport</string>
          <string>com.android.org.bouncycastle.util.encoders.Base64</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.power.ss</name>
        <entities>
          <string>android.nfc.INfcAdapter$Stub</string>
          <string>android.nfc.INfcAdapterExtras</string>
          <string>android.nfc.INfcUnlockHandler</string>
          <string>com.android.server.power.Notifier$4</string>
          <string>com.android.server.power.ShutdownThread$7</string>
          <string>com.android.server.power.Notifier$5</string>
          <string>com.android.server.power.ShutdownThread$6</string>
          <string>com.android.server.power.Notifier$2</string>
          <string>com.android.server.power.ShutdownThread$5</string>
          <string>android.nfc.INfcFCardEmulation$Stub$Proxy</string>
          <string>com.android.server.power.Notifier$3</string>
          <string>com.android.server.power.ShutdownThread$4</string>
          <string>com.android.server.power.Notifier$1</string>
          <string>com.android.server.power.ShutdownThread$8</string>
          <string>android.hardware.SensorEventListener</string>
          <string>com.android.server.power.PowerManagerService$LocalService</string>
          <string>com.android.server.power.ShutdownThread$3</string>
          <string>com.android.server.power.WirelessChargerDetector</string>
          <string>com.android.server.power.ShutdownThread$2</string>
          <string>android.content.DialogInterface$OnDismissListener</string>
          <string>com.android.server.power.ShutdownThread$1</string>
          <string>android.nfc.INfcAdapter</string>
          <string>android.nfc.INfcAdapterExtras$Stub</string>
          <string>android.nfc.INfcAdapterExtras$Stub$Proxy</string>
          <string>com.android.server.power.PowerManagerService$HaltMode</string>
          <string>android.view.WindowManagerPolicy</string>
          <string>com.android.server.power.PowerManagerService$WakeLock</string>
          <string>android.nfc.ITagRemovedCallback$Stub</string>
          <string>com.android.internal.telephony.ITelephony</string>
          <string>com.android.server.power.PowerManagerService$4</string>
          <string>com.android.server.power.Notifier$NotifierHandler</string>
          <string>com.android.server.power.PowerManagerService$3</string>
          <string>com.android.server.power.PowerManagerService$SuspendBlockerImpl</string>
          <string>com.android.server.power.PowerManagerService$UserSwitchedReceiver</string>
          <string>com.android.server.power.ShutdownThread</string>
          <string>com.android.server.power.PowerManagerService$5</string>
          <string>com.android.server.power.PowerManagerService$2</string>
          <string>com.android.server.power.PowerManagerService$1</string>
          <string>com.android.server.power.PowerManagerService$PowerManagerHandler</string>
          <string>android.nfc.ITagRemovedCallback$Stub$Proxy</string>
          <string>com.android.server.power.Notifier</string>
          <string>android.nfc.INfcCardEmulation$Stub</string>
          <string>android.nfc.INfcUnlockHandler$Stub$Proxy</string>
          <string>com.android.server.power.SuspendBlocker</string>
          <string>android.nfc.INfcFCardEmulation$Stub</string>
          <string>com.android.server.power.PowerManagerService$DreamReceiver</string>
          <string>android.nfc.INfcCardEmulation</string>
          <string>android.nfc.INfcFCardEmulation</string>
          <string>android.nfc.INfcAdapter$Stub$Proxy</string>
          <string>com.android.server.power.PowerManagerService</string>
          <string>com.android.server.power.PowerManagerService$BinderService</string>
          <string>com.android.server.power.ShutdownThread$CloseDialogReceiver</string>
          <string>com.android.server.power.WirelessChargerDetector$1</string>
          <string>com.android.server.power.PowerManagerService$DockReceiver</string>
          <string>com.android.server.power.WirelessChargerDetector$2</string>
          <string>android.provider.Settings$SettingNotFoundException</string>
          <string>android.nfc.INfcCardEmulation$Stub$Proxy</string>
          <string>com.android.server.power.Notifier$8</string>
          <string>com.android.server.power.Notifier$6</string>
          <string>com.android.server.power.Notifier$7</string>
          <string>com.android.internal.telephony.ITelephony$Stub</string>
          <string>android.nfc.ITagRemovedCallback</string>
          <string>com.android.server.power.PowerManagerService$BatteryReceiver</string>
          <string>android.nfc.INfcUnlockHandler$Stub</string>
          <string>android.media.RingtoneManager</string>
          <string>com.android.server.power.PowerManagerService$SettingsObserver</string>
          <string>android.os.PowerManagerInternal$LowPowerModeListener</string>
          <string>com.android.internal.telephony.ITelephony$Stub$Proxy</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.print.ss</name>
        <entities>
          <string>android.print.PrintManager</string>
          <string>android.print.PrintAttributes$Resolution</string>
          <string>android.print.PrinterInfo</string>
          <string>android.print.PrintFileDocumentAdapter</string>
          <string>java.util.function.IntConsumer</string>
          <string>android.print.PrintManager$PrintServiceRecommendationsChangeListenerWrapper</string>
          <string>android.print.PrintJobId</string>
          <string>android.print.PrintManager$PrintJobStateChangeListener</string>
          <string>android.print.PrintAttributes</string>
          <string>android.print.PrinterCapabilitiesInfo</string>
          <string>android.print.PrintServicesLoader$1</string>
          <string>android.print.PrintManager$1</string>
          <string>android.print.PrintJobId$1</string>
          <string>android.print.PrinterDiscoverySession$PrinterDiscoveryObserver</string>
          <string>android.print.PrintAttributes$Margins</string>
          <string>android.print.PrintDocumentInfo$Builder</string>
          <string>android.print.PrintManager$PrintDocumentAdapterDelegate</string>
          <string>android.print.PrintManager$PrintDocumentAdapterDelegate$MyHandler</string>
          <string>android.print.PrintManager$PrintDocumentAdapterDelegate$MyLayoutResultCallback</string>
          <string>android.print.PrintFileDocumentAdapter$WriteFileAsyncTask$1</string>
          <string>android.print.PrintManager$PrintServiceRecommendationsChangeListener</string>
          <string>android.print.PrintAttributes$1</string>
          <string>android.print.PrintServicesLoader</string>
          <string>android.print.PrintDocumentInfo</string>
          <string>android.print.PageRange</string>
          <string>android.print.PrinterDiscoverySession</string>
          <string>android.print.PrintFileDocumentAdapter$WriteFileAsyncTask</string>
          <string>android.print.PageRange$1</string>
          <string>android.print.PrintDocumentAdapter</string>
          <string>android.print.PrintServiceRecommendationsLoader</string>
          <string>android.print.PrintServiceRecommendationsLoader$1</string>
          <string>android.print.PrinterCapabilitiesInfo$1</string>
          <string>android.print.PrintManager$PrintDocumentAdapterDelegate$DestroyableCallback</string>
          <string>android.print.PrintDocumentAdapter$WriteResultCallback</string>
          <string>android.print.PrinterCapabilitiesInfo$_void__init__android_os_Parcel_parcel_LambdaImpl1</string>
          <string>android.print.PrintAttributes$Builder</string>
          <string>android.print.PrinterCapabilitiesInfo$_void__init__android_os_Parcel_parcel_LambdaImpl0</string>
          <string>android.print.PrinterInfo$1</string>
          <string>android.print.ILayoutResultCallback$Stub$Proxy</string>
          <string>android.print.PrinterDiscoverySession$OnPrintersChangeListener</string>
          <string>android.print.PrintAttributes$MediaSize</string>
          <string>android.print.PrinterId$1</string>
          <string>android.print.PrintJob</string>
          <string>android.print.PrintJobInfo$Builder</string>
          <string>android.print.ILayoutResultCallback$Stub</string>
          <string>com.android.internal.os.SomeArgs</string>
          <string>android.print.PrintDocumentInfo$1</string>
          <string>android.print.PrinterCapabilitiesInfo$Builder$_android_print_PrinterCapabilitiesInfo$Builder_setColorModes_int_colorModes_int_defaultColorMode_LambdaImpl0</string>
          <string>android.print.PrintJobInfo</string>
          <string>android.print.ILayoutResultCallback</string>
          <string>android.print.PrintManager$PrintDocumentAdapterDelegate$MyWriteResultCallback</string>
          <string>android.print.PrintServicesLoader$MyHandler</string>
          <string>android.os.Handler$Callback</string>
          <string>android.print.PrinterId</string>
          <string>android.print.PrintJobInfo$1</string>
          <string>android.print.PrintServiceRecommendationsLoader$MyHandler</string>
          <string>android.print.PrintManager$PrintServicesChangeListenerWrapper</string>
          <string>android.print.PrintManager$PrintJobStateChangeListenerWrapper</string>
          <string>android.print.PrinterCapabilitiesInfo$Builder</string>
          <string>android.print.PrintDocumentAdapter$LayoutResultCallback</string>
          <string>android.print.PrinterDiscoverySession$SessionHandler</string>
          <string>android.print.PrinterCapabilitiesInfo$Builder$_android_print_PrinterCapabilitiesInfo$Builder_setDuplexModes_int_duplexModes_int_defaultDuplexMode_LambdaImpl0</string>
          <string>android.print.PrintManager$PrintServicesChangeListener</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.notification.ss</name>
        <entities>
          <string>com.android.server.notification.ZenLog</string>
          <string>com.android.server.notification.ZenModeHelper$RingerModeDelegate</string>
          <string>android.app.NotificationManager$Policy$1</string>
          <string>android.media.AudioManagerInternal</string>
          <string>com.android.server.notification.NotificationManagerService$WorkerHandler</string>
          <string>android.app.INotificationManager$Stub</string>
          <string>android.service.notification.INotificationListener$Stub</string>
          <string>com.android.server.notification.NotificationUsageStats$Aggregate</string>
          <string>android.app.ITransientNotification$Stub$Proxy</string>
          <string>com.android.server.notification.CalendarTracker$1</string>
          <string>android.util.LruCache</string>
          <string>android.service.notification.ZenModeConfig$Migration</string>
          <string>com.android.server.notification.CalendarTracker</string>
          <string>android.service.notification.ZenModeConfig$EventInfo</string>
          <string>org.json.JSONException</string>
          <string>com.android.server.notification.EventConditionProvider</string>
          <string>com.android.server.notification.ImportanceExtractor</string>
          <string>android.service.notification.NotificationListenerService$Ranking</string>
          <string>com.android.server.notification.ValidateNotificationPeople$2</string>
          <string>com.android.server.notification.NotificationManagerService$RankingHandlerWorker</string>
          <string>com.android.server.notification.ValidateNotificationPeople$1</string>
          <string>java.util.GregorianCalendar</string>
          <string>com.android.server.notification.NotificationUsageStats$1</string>
          <string>android.service.notification.IStatusBarNotificationHolder$Stub</string>
          <string>android.service.notification.IConditionProvider$Stub$Proxy</string>
          <string>android.service.notification.INotificationListener$Stub$Proxy</string>
          <string>com.android.server.notification.ConditionProviders</string>
          <string>com.android.server.notification.ZenModeHelper$1</string>
          <string>com.android.server.notification.NotificationManagerService$5$1</string>
          <string>com.android.server.notification.NotificationManagerService$TrimCache</string>
          <string>android.service.notification.INotificationListener</string>
          <string>com.android.server.notification.ZenModeFiltering</string>
          <string>com.android.server.notification.RankingConfig</string>
          <string>com.android.server.notification.NotificationManagerService$9</string>
          <string>com.android.server.notification.NotificationManagerService$7</string>
          <string>com.android.server.notification.NotificationManagerService$8</string>
          <string>com.android.server.notification.NotificationManagerService$5</string>
          <string>com.android.server.notification.VisibilityExtractor</string>
          <string>com.android.server.notification.NotificationManagerService$6</string>
          <string>com.android.server.notification.NotificationManagerService$3</string>
          <string>com.android.server.notification.NotificationManagerService$4</string>
          <string>com.android.server.notification.NotificationManagerService</string>
          <string>com.android.server.notification.NotificationManagerService$1</string>
          <string>com.android.server.notification.NotificationManagerService$2</string>
          <string>com.android.server.notification.ScheduleConditionProvider</string>
          <string>android.service.notification.IConditionProvider</string>
          <string>android.service.notification.ZenModeConfig$XmlV1</string>
          <string>com.android.server.lights.Light</string>
          <string>com.android.server.notification.ZenModeHelper$H$ConfigMessageData</string>
          <string>com.android.server.notification.SystemConditionProviderService</string>
          <string>java.util.Calendar</string>
          <string>com.android.server.notification.ZenModeHelper$Metrics</string>
          <string>com.android.server.notification.ManagedServices$UserProfiles</string>
          <string>com.android.server.notification.ManagedServices$ManagedServiceInfo</string>
          <string>com.android.server.notification.NotificationUsageStats$SQLiteLog$1</string>
          <string>com.android.server.notification.NotificationUsageStats$SQLiteLog$2</string>
          <string>com.android.server.notification.NotificationIntrusivenessExtractor$1</string>
          <string>com.android.server.notification.ConditionProviders$ConditionRecord</string>
          <string>com.android.server.notification.NotificationManagerService$SettingsObserver</string>
          <string>java.lang.SafeVarargs</string>
          <string>com.android.server.notification.NotificationIntrusivenessExtractor</string>
          <string>com.android.server.notification.ManagedServices$SettingsObserver</string>
          <string>com.android.server.notification.ZenModeFiltering$RepeatCallers</string>
          <string>android.app.ITransientNotification</string>
          <string>com.android.server.notification.NotificationManagerService$PolicyAccess</string>
          <string>com.android.server.notification.ManagedServices$Config</string>
          <string>com.android.server.notification.NotificationManagerService$NotificationRankers$1</string>
          <string>com.android.server.notification.CountdownConditionProvider$Receiver</string>
          <string>com.android.server.notification.ManagedServices</string>
          <string>com.android.server.notification.ManagedServices$SettingRestoredReceiver</string>
          <string>android.service.notification.ZenModeConfig$Diff</string>
          <string>com.android.server.notification.RateEstimator</string>
          <string>android.service.notification.ZenModeConfig$ZenRule$1</string>
          <string>com.android.server.notification.NotificationManagerService$NotificationListeners</string>
          <string>android.app.ITransientNotification$Stub</string>
          <string>com.android.server.notification.NotificationComparator</string>
          <string>com.android.server.notification.ZenModeHelper$SettingsObserver</string>
          <string>com.android.server.notification.RankingHelper$Record</string>
          <string>org.json.JSONObject</string>
          <string>com.android.server.notification.NotificationSignalExtractor</string>
          <string>com.android.server.notification.PropConfig</string>
          <string>java.lang.InstantiationException</string>
          <string>com.android.server.notification.NotificationManagerService$ToastRecord</string>
          <string>android.app.NotificationManager$Policy</string>
          <string>com.android.server.notification.ScheduleCalendar</string>
          <string>com.android.server.notification.RankingHelper</string>
          <string>com.android.server.notification.ScheduleConditionProvider$1</string>
          <string>java.util.TimeZone</string>
          <string>com.android.server.notification.NotificationUsageStats</string>
          <string>com.android.server.notification.PriorityExtractor</string>
          <string>com.android.server.notification.RankingReconsideration</string>
          <string>com.android.server.notification.ValidateNotificationPeople$PeopleRankingReconsideration</string>
          <string>com.android.server.notification.NotificationManagerService$DumpFilter</string>
          <string>com.android.server.notification.ConditionProviders$Callback</string>
          <string>android.app.INotificationManager$Stub$Proxy</string>
          <string>android.content.pm.IPackageManager</string>
          <string>android.app.AppGlobals</string>
          <string>com.android.server.notification.NotificationUsageStats$AggregatedStats</string>
          <string>com.android.server.notification.NotificationManagerService$NotificationListeners$1</string>
          <string>com.android.server.notification.NotificationManagerService$NotificationListeners$2</string>
          <string>com.android.server.notification.NotificationManagerService$NotificationListeners$3</string>
          <string>com.android.server.notification.NotificationManagerService$NotificationListeners$4</string>
          <string>com.android.server.notification.GlobalSortKeyComparator</string>
          <string>com.android.server.notification.ManagedServices$1</string>
          <string>com.android.server.notification.NotificationManagerService$NotificationListeners$5</string>
          <string>com.android.server.notification.NotificationManagerService$NotificationListeners$6</string>
          <string>com.android.server.notification.CountdownConditionProvider</string>
          <string>com.android.server.notification.NotificationUsageStats$SQLiteLog</string>
          <string>com.android.server.notification.CalendarTracker$CheckEventResult</string>
          <string>android.media.IRingtonePlayer</string>
          <string>com.android.server.notification.EventConditionProvider$3</string>
          <string>android.service.notification.IConditionProvider$Stub</string>
          <string>com.android.server.notification.NotificationManagerInternal</string>
          <string>com.android.server.notification.EventConditionProvider$2</string>
          <string>com.android.server.notification.NotificationUsageStats$ImportanceHistogram</string>
          <string>com.android.server.notification.EventConditionProvider$4</string>
          <string>com.android.server.notification.ZenModeHelper</string>
          <string>com.android.server.notification.NotificationManagerService$EnqueueNotificationRunnable</string>
          <string>com.android.server.notification.NotificationManagerService$StatusBarNotificationHolder</string>
          <string>com.android.server.notification.EventConditionProvider$1</string>
          <string>com.android.server.notification.ZenModeHelper$H</string>
          <string>android.service.notification.IStatusBarNotificationHolder</string>
          <string>com.android.server.notification.RankingHandler</string>
          <string>com.android.server.notification.NotificationManagerService$Archive</string>
          <string>android.service.notification.ZenModeConfig$ScheduleInfo</string>
          <string>com.android.server.notification.ValidateNotificationPeople$LookupResult</string>
          <string>android.service.notification.IStatusBarNotificationHolder$Stub$Proxy</string>
          <string>com.android.server.notification.ValidateNotificationPeople</string>
          <string>java.util.concurrent.Semaphore</string>
          <string>com.android.server.notification.ZenModeConditions</string>
          <string>com.android.server.notification.NotificationRecord</string>
          <string>android.service.notification.ZenModeConfig$ZenRule</string>
          <string>com.android.server.notification.NotificationManagerService$NotificationRankers</string>
          <string>com.android.server.notification.NotificationUsageStats$SingleNotificationStats</string>
          <string>com.android.server.notification.CalendarTracker$Callback</string>
          <string>android.media.AudioManagerInternal$RingerModeDelegate</string>
          <string>com.android.server.notification.ZenModeHelper$Callback</string>
          <string>com.android.server.EventLogTags</string>
          <string>org.json.JSONArray</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.updates.ss</name>
        <entities>
          <string>com.android.server.updates.ConfigUpdateInstallReceiver$1</string>
          <string>java.util.Arrays</string>
          <string>com.android.server.updates.ConfigUpdateInstallReceiver</string>
          <string>java.util.zip.ZipInputStream</string>
          <string>com.android.server.updates.TzDataInstallReceiver</string>
          <string>libcore.tzdata.update.TzDataBundleInstaller</string>
          <string>java.util.zip.CRC32</string>
          <string>libcore.tzdata.update.ConfigBundle</string>
          <string>java.io.InputStreamReader</string>
          <string>libcore.tzdata.update.FileUtils</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.filterfw.core.ss</name>
        <entities>
          <string>android.filterfw.core.GLFrame</string>
          <string>java.util.concurrent.ScheduledFuture</string>
          <string>android.filterfw.core.ProgramPort</string>
          <string>android.filterpacks.imageproc.ToPackedGrayFilter</string>
          <string>android.filterfw.core.OutputPort</string>
          <string>android.filterpacks.imageproc.ImageSlicer</string>
          <string>android.filterfw.core.GraphRunner$OnRunnerDoneListener</string>
          <string>android.filterpacks.text.ToUpperCase</string>
          <string>android.filterpacks.base.FrameStore</string>
          <string>android.filterpacks.imageproc.DrawOverlayFilter</string>
          <string>android.filterfw.core.GenerateProgramPort</string>
          <string>android.filterfw.core.FrameFormat</string>
          <string>android.filterfw.core.SyncRunner$1</string>
          <string>android.filterfw.core.FieldPort</string>
          <string>android.filterpacks.text.StringLogger</string>
          <string>android.filterpacks.imageproc.ToRGBFilter</string>
          <string>android.filterpacks.text.StringSource</string>
          <string>android.filterfw.core.CachedFrameManager</string>
          <string>android.filterfw.core.NativeFrame</string>
          <string>android.filterfw.core.Filter</string>
          <string>android.filterpacks.base.GLTextureSource</string>
          <string>android.filterfw.core.SimpleFrameManager</string>
          <string>java.util.concurrent.ScheduledThreadPoolExecutor</string>
          <string>android.filterfw.core.FilterPort</string>
          <string>android.filterpacks.base.FrameBranch</string>
          <string>android.filterfw.core.AsyncRunner$RunnerResult</string>
          <string>android.filterpacks.imageproc.ImageCombineFilter</string>
          <string>android.filterpacks.base.GLTextureTarget</string>
          <string>android.filterfw.core.AsyncRunner</string>
          <string>android.filterfw.core.Frame</string>
          <string>android.filterpacks.imageproc.ToRGBAFilter</string>
          <string>android.filterfw.core.FinalPort</string>
          <string>android.filterpacks.imageproc.ImageEncoder</string>
          <string>android.filterfw.format.ObjectFormat</string>
          <string>android.filterpacks.base.NullFilter</string>
          <string>android.filterfw.core.StopWatchMap</string>
          <string>android.filterfw.core.MutableFrameFormat</string>
          <string>java.lang.ClassCastException</string>
          <string>android.filterpacks.numeric.SinWaveFilter</string>
          <string>android.filterfw.core.StreamPort</string>
          <string>android.filterfw.core.GLFrameTimer</string>
          <string>android.filterpacks.base.RetargetFilter</string>
          <string>android.filterfw.core.VertexFrame</string>
          <string>android.filterpacks.imageproc.DrawRectFilter</string>
          <string>android.filterfw.core.SimpleScheduler</string>
          <string>android.filterfw.core.FilterFunction</string>
          <string>android.filterfw.core.NativeBuffer</string>
          <string>android.filterpacks.imageproc.BitmapSource</string>
          <string>android.filterfw.core.SimpleFrame</string>
          <string>android.filterfw.core.GenerateProgramPorts</string>
          <string>android.filterfw.core.SerializedFrame$DirectByteOutputStream</string>
          <string>android.filterfw.core.FilterGraph</string>
          <string>android.filterfw.core.AsyncRunner$AsyncRunnerTask</string>
          <string>java.lang.reflect.Field</string>
          <string>android.filterpacks.imageproc.BlendFilter</string>
          <string>android.filterpacks.imageproc.ImageStitcher</string>
          <string>android.filterfw.core.SerializedFrame$DirectByteInputStream</string>
          <string>android.filterfw.core.Program</string>
          <string>android.filterfw.core.SerializedFrame</string>
          <string>android.filterfw.core.StopWatch</string>
          <string>android.filterpacks.imageproc.CropFilter</string>
          <string>android.filterpacks.imageproc.ResizeFilter</string>
          <string>android.filterfw.core.SyncRunner</string>
          <string>android.filterpacks.base.ObjectSource</string>
          <string>android.filterfw.core.FilterFunction$FrameHolderPort</string>
          <string>android.filterfw.core.Scheduler</string>
          <string>android.filterfw.core.InputPort</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.internal.transition.ss</name>
        <entities>
          <string>android.animation.TimeInterpolator</string>
          <string>com.android.internal.transition.EpicenterTranslateClipReveal$State</string>
          <string>com.android.internal.transition.EpicenterTranslateClipReveal$StateEvaluator</string>
          <string>com.android.internal.transition.TransitionConstants</string>
          <string>com.android.internal.transition.EpicenterTranslateClipReveal</string>
          <string>com.android.internal.transition.EpicenterTranslateClipReveal$1</string>
          <string>com.android.internal.transition.EpicenterTranslateClipReveal$StateProperty</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.app.backup.ss</name>
        <entities>
          <string>android.app.backup.RestoreSet</string>
          <string>android.app.backup.BackupObserver</string>
          <string>android.app.backup.BackupHelperDispatcher</string>
          <string>android.app.backup.BackupManager</string>
          <string>android.app.backup.BackupProgress</string>
          <string>android.app.backup.BackupAgent$FailRunnable</string>
          <string>android.app.backup.BackupManager$BackupObserverWrapper</string>
          <string>android.app.backup.BackupDataInput</string>
          <string>android.app.backup.BackupAgent$BackupServiceBinder</string>
          <string>android.app.backup.RestoreSet$1</string>
          <string>android.app.backup.BackupAgent$SharedPrefsSynchronizer</string>
          <string>android.app.backup.RestoreSession$RestoreObserverWrapper$1</string>
          <string>android.app.backup.BackupDataInput$EntityHeader</string>
          <string>android.app.backup.BackupAgent</string>
          <string>android.app.backup.RestoreSession$RestoreObserverWrapper</string>
          <string>android.app.backup.BackupManager$BackupObserverWrapper$1</string>
          <string>android.app.backup.BackupProgress$1</string>
          <string>android.app.backup.RestoreDescription</string>
          <string>android.app.backup.RestoreObserver</string>
          <string>android.app.backup.BackupHelperDispatcher$Header</string>
          <string>android.app.backup.BackupTransport</string>
          <string>android.app.backup.RestoreDescription$1</string>
          <string>android.app.backup.FullBackupDataOutput</string>
          <string>android.app.backup.BackupTransport$TransportImpl</string>
          <string>android.app.backup.RestoreSession</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.hardware.soundtrigger.ss</name>
        <entities>
          <string>android.hardware.soundtrigger.SoundTriggerModule$NativeEventHandlerDelegate$1</string>
          <string>android.hardware.soundtrigger.SoundTriggerModule</string>
          <string>android.hardware.soundtrigger.SoundTrigger$StatusListener</string>
          <string>android.hardware.soundtrigger.SoundTriggerModule$NativeEventHandlerDelegate</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.app.admin.ss</name>
        <entities>
          <string>android.app.admin.DeviceAdminInfo$1</string>
          <string>android.app.admin.DeviceAdminInfo</string>
          <string>android.app.admin.SystemUpdatePolicy$1</string>
          <string>android.app.admin.SystemUpdatePolicy</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.accessibility.ss</name>
        <entities>
          <string>com.android.server.accessibility.TouchExplorer$InjectedPointerTracker</string>
          <string>com.android.server.accessibility.AccessibilityManagerService$InteractionBridge</string>
          <string>android.gesture.GestureStroke</string>
          <string>android.content.DialogInterface$OnClickListener</string>
          <string>com.android.server.accessibility.GestureUtils</string>
          <string>com.android.server.accessibility.AccessibilityManagerService$UserState$1</string>
          <string>com.android.server.accessibility.AccessibilityInputFilter$MouseEventStreamState</string>
          <string>android.view.MotionEvent$PointerProperties</string>
          <string>android.provider.Settings$Secure</string>
          <string>com.android.server.accessibility.TouchExplorer$SendHoverEnterAndMoveDelayed</string>
          <string>com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy</string>
          <string>com.android.server.accessibility.MagnificationController$WindowStateObserver$CallbackHandler</string>
          <string>com.android.server.accessibility.TouchExplorer$SendAccessibilityEventDelayed</string>
          <string>com.android.server.accessibility.MagnificationController$SpecAnimationBridge$UpdateHandler</string>
          <string>com.android.server.accessibility.MagnificationController$WindowStateObserver</string>
          <string>com.android.server.accessibility.TouchExplorer$SendHoverExitDelayed</string>
          <string>com.android.server.accessibility.AutoclickController</string>
          <string>android.util.Pools$SimplePool</string>
          <string>com.android.server.accessibility.MagnificationController$SpecAnimationBridge</string>
          <string>com.android.server.accessibility.MagnificationController$ScreenStateObserver$StateChangeHandler</string>
          <string>com.android.server.accessibility.AccessibilityManagerService$AccessibilityContentObserver</string>
          <string>com.android.server.accessibility.AccessibilityManagerService$UserState</string>
          <string>com.android.server.accessibility.TouchExplorer$ExitGestureDetectionModeDelayed</string>
          <string>android.util.Pools</string>
          <string>com.android.server.accessibility.DisplayAdjustmentUtils</string>
          <string>com.android.server.accessibility.KeyboardInterceptor</string>
          <string>com.android.server.accessibility.MagnificationController$SpecAnimationBridge$MagnificationSpecEvaluator</string>
          <string>android.text.TextUtils$SimpleStringSplitter</string>
          <string>com.android.server.accessibility.MagnificationGestureHandler$MotionEventHandler</string>
          <string>com.android.server.accessibility.AutoclickController$ClickScheduler</string>
          <string>com.android.server.accessibility.KeyEventDispatcher$PendingKeyEvent</string>
          <string>com.android.server.accessibility.MagnificationController$1</string>
          <string>com.android.server.accessibility.KeyEventDispatcher</string>
          <string>com.android.server.accessibility.TouchExplorer</string>
          <string>com.android.server.accessibility.MagnificationController$SpecAnimationBridge$MagnificationSpecProperty</string>
          <string>com.android.server.accessibility.EventStreamTransformation</string>
          <string>com.android.server.accessibility.AccessibilityManagerService$Service$2</string>
          <string>com.android.server.accessibility.AccessibilityManagerService$Service$1</string>
          <string>com.android.server.accessibility.MagnificationGestureHandler$MagnifiedContentInteractionStateHandler</string>
          <string>com.android.server.accessibility.AutoclickController$ClickDelayObserver</string>
          <string>com.android.server.accessibility.AccessibilityInputFilter$TouchScreenEventStreamState</string>
          <string>com.android.server.accessibility.MotionEventInjector$Callback</string>
          <string>com.android.server.accessibility.AccessibilityManagerService</string>
          <string>com.android.server.accessibility.AccessibilityInputFilter</string>
          <string>com.android.server.accessibility.AccessibilityInputFilter$KeyboardEventStreamState</string>
          <string>com.android.server.accessibility.AccessibilityInputFilter$1</string>
          <string>com.android.server.accessibility.AccessibilityGestureDetector</string>
          <string>com.android.server.accessibility.AccessibilityManagerService$MainHandler</string>
          <string>com.android.server.accessibility.MagnificationGestureHandler$MotionEventInfo</string>
          <string>com.android.server.accessibility.MagnificationController</string>
          <string>com.android.server.accessibility.MagnificationController$ScreenStateObserver</string>
          <string>com.android.server.accessibility.AccessibilityManagerService$WindowsForAccessibilityCallback</string>
          <string>android.util.Pools$Pool</string>
          <string>com.android.server.accessibility.AccessibilityInputFilter$MotionEventHolder</string>
          <string>android.gesture.GesturePoint</string>
          <string>android.content.DialogInterface</string>
          <string>com.android.server.accessibility.MagnificationGestureHandler</string>
          <string>com.android.server.accessibility.AccessibilityManagerService$SettingsStringHelper</string>
          <string>com.android.server.accessibility.KeyEventDispatcher$Callback</string>
          <string>com.android.server.accessibility.MotionEventInjector</string>
          <string>com.android.server.accessibility.AccessibilityInputFilter$EventStreamState</string>
          <string>com.android.server.accessibility.AccessibilityGestureDetector$Listener</string>
          <string>com.android.server.accessibility.AccessibilityManagerService$2</string>
          <string>com.android.server.accessibility.AccessibilityManagerService$AccessibilityConnectionWrapper</string>
          <string>com.android.server.accessibility.AccessibilityManagerService$1</string>
          <string>com.android.server.accessibility.AccessibilityManagerService$4</string>
          <string>com.android.server.accessibility.AccessibilityManagerService$3</string>
          <string>com.android.server.accessibility.AccessibilityManagerService$Service$InvocationHandler</string>
          <string>com.android.server.accessibility.TouchExplorer$ReceivedPointerTracker</string>
          <string>android.opengl.Matrix</string>
          <string>com.android.server.accessibility.MagnificationGestureHandler$DetectingStateHandler$1</string>
          <string>com.android.server.accessibility.AccessibilityManagerService$Service</string>
          <string>com.android.server.accessibility.MagnificationGestureHandler$DetectingStateHandler</string>
          <string>com.android.server.accessibility.MagnificationGestureHandler$StateViewportDraggingHandler</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.input.ss</name>
        <entities>
          <string>com.android.server.input.InputWindowHandle</string>
          <string>com.android.server.input.InputManagerService$InputDevicesChangedListenerRecord</string>
          <string>com.android.server.input.InputApplicationHandle</string>
          <string>com.android.server.input.InputManagerService$InputManagerHandler</string>
          <string>com.android.server.input.PersistentDataStore$InputDeviceState</string>
          <string>com.android.server.input.InputManagerService$4</string>
          <string>com.android.server.input.InputManagerService$3</string>
          <string>com.android.server.input.InputManagerService$WindowManagerCallbacks</string>
          <string>com.android.server.input.PersistentDataStore</string>
          <string>com.android.server.input.InputManagerService$2</string>
          <string>com.android.server.input.InputManagerService$1</string>
          <string>com.android.server.input.InputManagerService$LocalService</string>
          <string>com.android.server.input.InputManagerService$WiredAccessoryCallbacks</string>
          <string>android.hardware.display.DisplayViewport</string>
          <string>com.android.server.input.InputManagerService$TabletModeChangedListenerRecord</string>
          <string>android.hardware.input.IInputDevicesChangedListener$Stub$Proxy</string>
          <string>com.android.server.input.InputManagerService</string>
          <string>android.hardware.input.IInputDevicesChangedListener</string>
          <string>com.android.server.input.InputManagerService$9</string>
          <string>java.io.Reader</string>
          <string>com.android.server.input.InputManagerService$8</string>
          <string>com.android.server.input.InputManagerService$7</string>
          <string>com.android.server.input.InputManagerService$6</string>
          <string>com.android.server.input.InputManagerService$Shell</string>
          <string>com.android.server.input.InputManagerService$InputFilterHost</string>
          <string>com.android.server.input.InputManagerService$5</string>
          <string>com.android.server.input.InputManagerService$KeyboardLayoutVisitor</string>
          <string>android.hardware.input.InputManagerInternal</string>
          <string>com.android.server.input.InputManagerService$13</string>
          <string>com.android.server.input.InputManagerService$12</string>
          <string>android.hardware.input.IInputDevicesChangedListener$Stub</string>
          <string>com.android.server.input.InputManagerService$11</string>
          <string>com.android.server.input.InputManagerService$KeyboardLayoutDescriptor</string>
          <string>com.android.server.input.InputManagerService$10</string>
          <string>com.android.server.input.InputManagerService$VibratorToken</string>
          <string>com.android.server.input.InputManagerService$14</string>
          <string>com.android.internal.inputmethod.InputMethodSubtypeHandle</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.speech.tts.ss</name>
        <entities>
          <string>android.speech.tts.AudioPlaybackHandler</string>
          <string>android.speech.tts.TextToSpeechService</string>
          <string>android.speech.tts.FileSynthesisCallback</string>
          <string>android.speech.tts.EventLoggerV1</string>
          <string>android.speech.tts.UtteranceProgressListener</string>
          <string>android.speech.tts.TextToSpeechService$SynthHandler</string>
          <string>java.lang.Integer</string>
          <string>android.speech.tts.EventLogTags</string>
          <string>android.speech.tts.TextToSpeechService$AudioSpeechItemV1</string>
          <string>android.speech.tts.TextToSpeech$Engine</string>
          <string>android.speech.tts.TtsEngines</string>
          <string>android.speech.tts.TextToSpeech$Action</string>
          <string>java.util.Locale</string>
          <string>android.speech.tts.ITextToSpeechService$Stub</string>
          <string>android.speech.tts.ITextToSpeechCallback$Stub$Proxy</string>
          <string>android.speech.tts.TtsEngines$EngineInfoComparator</string>
          <string>android.speech.tts.TextToSpeech$17</string>
          <string>android.speech.tts.UtteranceProgressListener$1</string>
          <string>android.speech.tts.TextToSpeech$EngineInfo</string>
          <string>android.speech.tts.TextToSpeech$15</string>
          <string>android.speech.tts.TextToSpeech$16</string>
          <string>java.util.MissingResourceException</string>
          <string>android.speech.tts.TextToSpeech$13</string>
          <string>android.speech.tts.TextToSpeech$14</string>
          <string>android.speech.tts.TextToSpeech$11</string>
          <string>android.speech.tts.PlaybackQueueItem</string>
          <string>java.util.concurrent.LinkedBlockingQueue</string>
          <string>android.speech.tts.TextToSpeechService$SynthThread</string>
          <string>android.speech.tts.TextToSpeech$12</string>
          <string>android.speech.tts.TextToSpeech$10</string>
          <string>android.net.wifi.p2p.nsd.WifiP2pUpnpServiceRequest</string>
          <string>android.speech.tts.AudioPlaybackQueueItem</string>
          <string>android.speech.tts.SilencePlaybackQueueItem</string>
          <string>android.speech.tts.SynthesisPlaybackQueueItem$ListEntry</string>
          <string>android.speech.tts.TextToSpeechService$SpeechItemV1</string>
          <string>android.speech.tts.TextToSpeechService$SilenceSpeechItem</string>
          <string>android.speech.tts.AudioPlaybackHandler$MessageLoop</string>
          <string>android.speech.tts.TextToSpeechService$AudioOutputParams</string>
          <string>android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher</string>
          <string>android.speech.tts.SynthesisRequest</string>
          <string>android.speech.tts.ITextToSpeechCallback$Stub</string>
          <string>android.speech.tts.TextToSpeech$1</string>
          <string>android.os.ConditionVariable</string>
          <string>android.webkit.DateSorter</string>
          <string>android.speech.tts.TextToSpeech$Connection</string>
          <string>android.speech.tts.TextToSpeechService$CallbackMap</string>
          <string>android.speech.tts.TextToSpeechService$SynthesisToFileOutputStreamSpeechItemV1</string>
          <string>android.speech.tts.AbstractEventLogger</string>
          <string>android.speech.tts.Voice</string>
          <string>android.speech.tts.TextToSpeechService$SynthHandler$3</string>
          <string>android.speech.tts.TextToSpeechService$UtteranceSpeechItem</string>
          <string>android.speech.tts.SynthesisCallback</string>
          <string>android.speech.tts.TextToSpeechService$SynthHandler$1</string>
          <string>android.speech.tts.TextToSpeechService$SynthHandler$2</string>
          <string>android.speech.tts.AudioPlaybackQueueItem$1</string>
          <string>android.speech.tts.AudioPlaybackQueueItem$2</string>
          <string>android.speech.tts.BlockingAudioTrack</string>
          <string>android.speech.tts.ITextToSpeechService$Stub$Proxy</string>
          <string>android.speech.tts.TextToSpeech$OnUtteranceCompletedListener</string>
          <string>android.speech.tts.TextToSpeech$Connection$1</string>
          <string>android.speech.tts.SynthesisPlaybackQueueItem</string>
          <string>android.speech.tts.Voice$1</string>
          <string>android.speech.tts.TextToSpeechService$1</string>
          <string>android.speech.tts.ITextToSpeechService</string>
          <string>android.speech.tts.TextToSpeechService$LoadLanguageItem</string>
          <string>android.speech.tts.TextToSpeechService$SynthesisSpeechItemV1</string>
          <string>java.util.concurrent.locks.Condition</string>
          <string>android.speech.tts.TextToSpeech</string>
          <string>android.speech.tts.ITextToSpeechCallback</string>
          <string>android.speech.tts.TextToSpeechService$SpeechItem</string>
          <string>android.speech.tts.TextToSpeech$3</string>
          <string>android.speech.tts.TextToSpeech$2</string>
          <string>android.speech.tts.AbstractSynthesisCallback</string>
          <string>android.speech.tts.TextToSpeech$5</string>
          <string>android.speech.tts.TextToSpeechService$LoadVoiceItem</string>
          <string>android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask</string>
          <string>android.speech.tts.TextToSpeech$4</string>
          <string>android.speech.tts.TextToSpeech$7</string>
          <string>android.speech.tts.TextToSpeech$6</string>
          <string>java.nio.channels.FileChannel</string>
          <string>android.speech.tts.TextToSpeech$9</string>
          <string>android.speech.tts.TextToSpeech$8</string>
          <string>android.speech.tts.PlaybackSynthesisCallback</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.net.nsd.ss</name>
        <entities>
          <string>android.net.nsd.NsdManager</string>
          <string>android.net.nsd.NsdManager$RegistrationListener</string>
          <string>android.net.nsd.NsdServiceInfo</string>
          <string>android.net.nsd.DnsSdTxtRecord</string>
          <string>android.net.nsd.NsdManager$ResolveListener</string>
          <string>android.net.nsd.NsdServiceInfo$1</string>
          <string>android.net.nsd.DnsSdTxtRecord$1</string>
          <string>android.net.nsd.NsdManager$DiscoveryListener</string>
          <string>android.net.nsd.NsdManager$ServiceHandler</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.filterfw.ss</name>
        <entities>
          <string>android.filterfw.GraphEnvironment</string>
          <string>android.filterfw.MffEnvironment</string>
          <string>android.filterfw.FilterFunctionEnvironment</string>
          <string>android.filterfw.core.NativeAllocatorTag</string>
          <string>android.filterfw.core.FilterContext</string>
          <string>android.filterfw.core.GLEnvironment</string>
          <string>android.filterfw.GraphEnvironment$GraphHandle</string>
          <string>android.filterfw.core.FrameManager</string>
          <string>android.filterfw.core.GraphRunner</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>org.apache.http.conn.scheme.ss</name>
        <entities>
          <string>org.apache.http.conn.scheme.LayeredSocketFactory</string>
          <string>java.net.Socket</string>
          <string>org.apache.http.conn.ConnectTimeoutException</string>
          <string>org.apache.http.conn.scheme.SocketFactory</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.service.textservice.ss</name>
        <entities>
          <string>android.service.textservice.SpellCheckerService$InternalISpellCheckerSession</string>
          <string>android.service.textservice.SpellCheckerService$SpellCheckerServiceBinder</string>
          <string>android.service.textservice.SpellCheckerService$Session</string>
          <string>com.android.internal.textservice.ISpellCheckerSession$Stub$Proxy</string>
          <string>android.service.textservice.SpellCheckerService</string>
          <string>android.service.textservice.SpellCheckerService$SentenceLevelAdapter$SentenceTextInfoParams</string>
          <string>android.service.textservice.SpellCheckerService$SentenceLevelAdapter$SentenceWordItem</string>
          <string>android.service.textservice.SpellCheckerService$SentenceLevelAdapter</string>
          <string>com.android.internal.textservice.ISpellCheckerSession$Stub</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.util.apk.ss</name>
        <entities>
          <string>android.util.apk.ApkSignatureSchemeV2Verifier</string>
          <string>android.util.apk.ApkSignatureSchemeV2Verifier$DataSource</string>
          <string>android.util.apk.ZipUtils</string>
          <string>java.security.MessageDigest</string>
          <string>java.security.spec.PSSParameterSpec</string>
          <string>android.util.apk.ApkSignatureSchemeV2Verifier$SignatureNotFoundException</string>
          <string>java.security.SignatureException</string>
          <string>android.util.apk.ApkSignatureSchemeV2Verifier$VerbatimX509Certificate</string>
          <string>android.util.apk.ApkSignatureSchemeV2Verifier$SignatureInfo</string>
          <string>java.security.Signature</string>
          <string>java.security.cert.CertificateNotYetValidException</string>
          <string>java.security.cert.CertificateException</string>
          <string>java.nio.DirectByteBuffer</string>
          <string>java.security.spec.X509EncodedKeySpec</string>
          <string>android.util.apk.ApkSignatureSchemeV2Verifier$MemoryMappedFileDataSource</string>
          <string>java.nio.BufferUnderflowException</string>
          <string>java.security.cert.CertificateExpiredException</string>
          <string>java.security.KeyFactory</string>
          <string>java.security.DigestException</string>
          <string>android.util.apk.ApkSignatureSchemeV2Verifier$WrappedX509Certificate</string>
          <string>android.util.apk.ApkSignatureSchemeV2Verifier$ByteBufferDataSource</string>
          <string>java.security.NoSuchProviderException</string>
          <string>java.security.spec.MGF1ParameterSpec</string>
          <string>java.security.cert.CertificateEncodingException</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.view.accessibility.ss</name>
        <entities>
          <string>android.view.accessibility.AccessibilityNodeInfo</string>
          <string>android.view.accessibility.AccessibilityEvent$1</string>
          <string>android.view.accessibility.CaptioningManager</string>
          <string>android.view.accessibility.CaptioningManager$1</string>
          <string>android.view.accessibility.AccessibilityManager$MyHandler</string>
          <string>android.view.accessibility.CaptioningManager$MyContentObserver</string>
          <string>android.view.accessibility.IAccessibilityManagerClient$Stub$Proxy</string>
          <string>android.view.accessibility.IAccessibilityManagerClient$Stub</string>
          <string>android.view.accessibility.AccessibilityNodeInfo$1</string>
          <string>android.view.accessibility.IAccessibilityManagerClient</string>
          <string>android.view.accessibility.AccessibilityManager</string>
          <string>android.util.LongArray</string>
          <string>android.view.accessibility.AccessibilityCache</string>
          <string>android.view.accessibility.AccessibilityWindowInfo</string>
          <string>android.view.accessibility.AccessibilityInteractionClient</string>
          <string>android.view.accessibility.AccessibilityEvent</string>
          <string>android.view.accessibility.AccessibilityWindowInfo$1</string>
          <string>android.view.accessibility.AccessibilityManager$1</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.mtp.ss</name>
        <entities>
          <string>android.provider.MediaStore$Audio$Albums</string>
          <string>android.mtp.MtpStorage</string>
          <string>android.mtp.MtpDevice</string>
          <string>android.provider.MediaStore$Audio$AudioColumns</string>
          <string>android.provider.MediaStore$Audio$PlaylistsColumns</string>
          <string>android.provider.MediaStore$Files$FileColumns</string>
          <string>android.mtp.MtpObjectInfo</string>
          <string>android.mtp.MtpStorageInfo</string>
          <string>android.provider.MediaStore$Audio$Radio</string>
          <string>android.provider.MediaStore$Audio$AlbumColumns</string>
          <string>android.provider.MediaStore$Files</string>
          <string>android.provider.MediaStore$Audio$Artists</string>
          <string>android.provider.MediaStore$Audio$GenresColumns</string>
          <string>android.mtp.MtpEvent$IllegalParameterAccess</string>
          <string>android.mtp.MtpEvent</string>
          <string>android.provider.MediaStore$Audio$Playlists</string>
          <string>android.mtp.MtpPropertyGroup</string>
          <string>android.mtp.MtpObjectInfo$Builder</string>
          <string>android.provider.MediaStore$Audio$Genres$Members</string>
          <string>android.mtp.MtpDatabase</string>
          <string>android.provider.MediaStore$Audio$Media</string>
          <string>android.provider.MediaStore$Audio$Artists$Albums</string>
          <string>android.mtp.MtpPropertyGroup$Property</string>
          <string>android.mtp.MtpPropertyList</string>
          <string>android.provider.MediaStore$Audio$ArtistColumns</string>
          <string>android.provider.MediaStore$Audio$Playlists$Members</string>
          <string>android.mtp.MtpDevice$1</string>
          <string>android.mtp.MtpDatabase$1</string>
          <string>android.provider.MediaStore$Audio</string>
          <string>android.mtp.MtpDeviceInfo</string>
          <string>android.provider.MediaStore$Audio$Genres</string>
          <string>android.mtp.MtpServer</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.internal.widget.ss</name>
        <entities>
          <string>com.android.internal.widget.AutoScrollHelper$AbsListViewAutoScroller</string>
          <string>android.widget.DayPickerViewPager</string>
          <string>com.android.internal.widget.RotarySelector</string>
          <string>com.android.internal.widget.ActionBarContextView$1</string>
          <string>com.android.internal.widget.ViewPager$SavedState$1</string>
          <string>com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper</string>
          <string>android.view.View$MeasureSpec</string>
          <string>android.view.MenuItem$OnActionExpandListener</string>
          <string>com.android.internal.widget.ViewPager$ItemInfo</string>
          <string>android.os.storage.IMountServiceListener</string>
          <string>com.android.internal.widget.ScrollingTabContainerView$TabAdapter</string>
          <string>com.android.internal.widget.ViewPager$SimpleOnPageChangeListener</string>
          <string>com.android.internal.widget.ResolverDrawerLayout$LayoutParams</string>
          <string>com.android.internal.widget.TextViewInputDisabler</string>
          <string>com.android.internal.widget.ActionBarOverlayLayout</string>
          <string>android.view.SubMenu</string>
          <string>com.android.internal.widget.ViewPager$PageTransformer</string>
          <string>com.android.internal.widget.LockPatternView$CellState</string>
          <string>com.android.internal.widget.LockPatternUtils$RequestThrottledException</string>
          <string>com.android.internal.widget.NotificationActionListLayout$_void__clinit___LambdaImpl0</string>
          <string>com.android.internal.widget.LockPatternChecker$1</string>
          <string>com.android.internal.widget.LockPatternChecker$2</string>
          <string>android.view.animation.AlphaAnimation</string>
          <string>com.android.internal.widget.LockPatternChecker$5</string>
          <string>com.android.internal.util.Preconditions</string>
          <string>com.android.internal.widget.LockPatternChecker$3</string>
          <string>com.android.internal.widget.LockPatternChecker$4</string>
          <string>android.graphics.Paint$Join</string>
          <string>com.android.internal.widget.SwipeDismissLayout$1</string>
          <string>com.android.internal.widget.SwipeDismissLayout$2</string>
          <string>com.android.internal.widget.LockPatternView$PatternExploreByTouchHelper$VirtualViewContainer</string>
          <string>com.android.internal.widget.LockPatternChecker$OnCheckCallback</string>
          <string>com.android.internal.widget.SlidingTab$OnTriggerListener</string>
          <string>com.android.internal.widget.LockScreenWidgetInterface</string>
          <string>android.widget.LinearLayout$LayoutParams</string>
          <string>android.view.animation.TranslateXAnimation</string>
          <string>com.android.internal.widget.ScrollingTabContainerView</string>
          <string>android.view.accessibility.AccessibilityNodeProvider</string>
          <string>com.android.internal.widget.PointerLocationView</string>
          <string>com.android.internal.widget.ViewPager</string>
          <string>android.graphics.CanvasProperty</string>
          <string>android.view.CollapsibleActionView</string>
          <string>com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$16</string>
          <string>android.view.animation.Transformation</string>
          <string>com.android.internal.widget.SwipeDismissLayout</string>
          <string>android.os.storage.IMountShutdownObserver</string>
          <string>com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$15</string>
          <string>com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$14</string>
          <string>com.android.internal.widget.ScrollingTabContainerView$TabView</string>
          <string>com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$13</string>
          <string>com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$12</string>
          <string>com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$11</string>
          <string>com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$10</string>
          <string>android.widget.ImageButton</string>
          <string>android.widget.LinearLayout</string>
          <string>com.android.internal.widget.LockPatternUtils$1</string>
          <string>com.android.internal.widget.ViewPager$ViewPositionComparator</string>
          <string>com.android.internal.widget.ResolverDrawerLayout$RunOnDismissedListener</string>
          <string>android.os.storage.IMountShutdownObserver$Stub</string>
          <string>com.android.internal.widget.ViewPager$OnAdapterChangeListener</string>
          <string>android.os.storage.IMountShutdownObserver$Stub$Proxy</string>
          <string>com.android.internal.widget.ActionBarView$HomeView</string>
          <string>com.android.internal.widget.ResolverDrawerLayout</string>
          <string>com.android.internal.widget.AutoScrollHelper$ScrollAnimationRunnable</string>
          <string>com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanelViewHelper</string>
          <string>com.android.internal.widget.RotarySelector$OnDialTriggerListener</string>
          <string>com.android.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback</string>
          <string>com.android.internal.widget.TextViewInputDisabler$1</string>
          <string>android.inputmethodservice.ExtractEditLayout</string>
          <string>com.android.internal.widget.ActionBarOverlayLayout$LayoutParams</string>
          <string>android.os.storage.IMountService</string>
          <string>android.view.VelocityTracker$Estimator</string>
          <string>android.util.Size</string>
          <string>android.view.animation.TranslateYAnimation</string>
          <string>android.view.MenuItem</string>
          <string>com.android.internal.widget.ToolbarWidgetWrapper$2</string>
          <string>com.android.internal.widget.ToolbarWidgetWrapper$1</string>
          <string>com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$4</string>
          <string>com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$3</string>
          <string>com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$2</string>
          <string>com.android.internal.widget.ToolbarWidgetWrapper$3</string>
          <string>com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$1</string>
          <string>com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$8</string>
          <string>com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$7</string>
          <string>com.android.internal.widget.ActionBarView$SavedState$1</string>
          <string>com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$6</string>
          <string>com.android.internal.widget.AutoScrollHelper$ClampedScroller</string>
          <string>com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$5</string>
          <string>com.android.internal.widget.SwipeDismissLayout$2$1</string>
          <string>android.view.MotionEvent$PointerCoords</string>
          <string>com.android.internal.widget.LockPatternChecker</string>
          <string>android.os.storage.IMountService$Stub</string>
          <string>com.android.internal.widget.ActionBarView$2</string>
          <string>com.android.internal.widget.ActionBarView$1</string>
          <string>android.animation.AnimatorSet$Node</string>
          <string>com.android.internal.widget.AccountItemView</string>
          <string>com.android.internal.widget.ViewPager$PagerObserver</string>
          <string>com.android.internal.widget.ResolverDrawerLayout$1</string>
          <string>com.android.internal.widget.SlidingTab</string>
          <string>com.android.internal.view.menu.ActionMenuItem</string>
          <string>com.android.internal.widget.ResolverDrawerLayout$SavedState$1</string>
          <string>com.android.internal.widget.ViewPager$LayoutParams</string>
          <string>android.view.animation.TranslateAnimation</string>
          <string>com.android.internal.widget.ScrollingTabContainerView$TabClickListener</string>
          <string>com.android.internal.view.ActionBarPolicy</string>
          <string>java.lang.Void</string>
          <string>com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$9</string>
          <string>com.android.internal.widget.ActionBarOverlayLayout$4</string>
          <string>com.android.internal.widget.LockPatternView$7</string>
          <string>com.android.internal.widget.ActionBarOverlayLayout$5</string>
          <string>com.android.internal.widget.LockPatternView$8</string>
          <string>android.view.animation.Interpolator</string>
          <string>com.android.internal.widget.ActionBarOverlayLayout$2</string>
          <string>com.android.internal.widget.ActionBarOverlayLayout$3</string>
          <string>com.android.internal.widget.LockPatternView$SavedState</string>
          <string>com.android.internal.widget.FloatingToolbar</string>
          <string>com.android.internal.widget.LockPatternView$3</string>
          <string>com.android.internal.widget.LockPatternView$4</string>
          <string>com.android.internal.widget.MessagingLinearLayout$LayoutParams</string>
          <string>com.android.internal.widget.LockPatternView$5</string>
          <string>com.android.internal.widget.LockPatternView$6</string>
          <string>com.android.internal.widget.ActionBarView</string>
          <string>android.animation.AnimatorListenerAdapter</string>
          <string>com.android.internal.widget.LockPatternView$1</string>
          <string>com.android.internal.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider</string>
          <string>com.android.internal.widget.LockPatternView$2</string>
          <string>com.android.internal.widget.LockScreenWidgetCallback</string>
          <string>android.graphics.Paint$Cap</string>
          <string>android.view.ViewTreeObserver$OnEnterAnimationCompleteListener</string>
          <string>com.android.internal.widget.LinearLayoutWithDefaultTouchRecepient</string>
          <string>com.android.internal.widget.SlidingTab$Slider</string>
          <string>com.android.internal.widget.ActionBarOverlayLayout$1</string>
          <string>com.android.internal.widget.ViewPager$Decor</string>
          <string>com.android.internal.widget.AbsActionBarView$VisibilityAnimListener</string>
          <string>com.android.internal.widget.VerifyCredentialResponse</string>
          <string>com.android.internal.widget.AutoScrollHelper</string>
          <string>com.android.internal.widget.ToolbarWidgetWrapper</string>
          <string>com.android.internal.widget.LockPatternView</string>
          <string>com.android.internal.widget.ScrollingTabContainerView$VisibilityAnimListener</string>
          <string>com.android.internal.widget.ActionBarContextView</string>
          <string>android.inputmethodservice.Keyboard$Key</string>
          <string>com.android.internal.widget.AccountViewAdapter</string>
          <string>com.android.internal.widget.ViewPager$2</string>
          <string>com.android.internal.widget.ViewPager$1</string>
          <string>com.android.internal.widget.FloatingToolbar$2</string>
          <string>com.android.internal.widget.FloatingToolbar$1</string>
          <string>android.view.RemotableViewMethod</string>
          <string>com.android.internal.widget.ScrollingTabContainerView$1</string>
          <string>com.android.internal.widget.ViewPager$SavedState</string>
          <string>com.android.internal.widget.ViewPager$3</string>
          <string>android.inputmethodservice.Keyboard</string>
          <string>com.android.internal.widget.PointerLocationView$PointerState</string>
          <string>com.android.internal.widget.LockPatternView$DisplayMode</string>
          <string>com.android.internal.widget.LockPatternView$OnPatternListener</string>
          <string>com.android.internal.widget.SlidingTab$2</string>
          <string>com.android.internal.widget.SlidingTab$1</string>
          <string>com.android.internal.widget.ViewPager$OnPageChangeListener</string>
          <string>com.android.internal.widget.TextProgressBar</string>
          <string>android.view.ViewGroup$MarginLayoutParams</string>
          <string>android.animation.ValueAnimator</string>
          <string>com.android.internal.widget.ImageFloatingTextView</string>
          <string>android.widget.RemoteViews$RemoteView</string>
          <string>com.android.internal.widget.NotificationExpandButton</string>
          <string>android.content.res.XmlResourceParser</string>
          <string>com.android.internal.widget.MessagingLinearLayout</string>
          <string>com.android.internal.widget.ActionBarContainer</string>
          <string>com.android.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter</string>
          <string>com.android.internal.widget.ActionBarContainer$ActionBarBackgroundDrawable</string>
          <string>com.android.internal.widget.AbsActionBarView</string>
          <string>com.android.internal.widget.VerifyCredentialResponse$1</string>
          <string>android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction</string>
          <string>com.android.internal.widget.AlertDialogLayout</string>
          <string>android.view.ViewTreeObserver$OnTouchModeChangeListener</string>
          <string>android.app.ActionBar$LayoutParams</string>
          <string>com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$LogAccelerateInterpolator</string>
          <string>com.android.internal.widget.PasswordEntryKeyboard</string>
          <string>com.android.internal.widget.PagerAdapter</string>
          <string>com.android.internal.widget.AccountViewAdapter$AccountElements</string>
          <string>android.app.ActionBar$Tab</string>
          <string>android.view.MenuItem$OnMenuItemClickListener</string>
          <string>com.android.internal.widget.ExploreByTouchHelper</string>
          <string>com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup</string>
          <string>com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$OverflowPanel</string>
          <string>android.inputmethodservice.Keyboard$Row</string>
          <string>com.android.internal.widget.LockPatternChecker$OnVerifyCallback</string>
          <string>com.android.internal.widget.LockPatternView$SavedState$1</string>
          <string>com.android.internal.widget.NotificationActionListLayout</string>
          <string>com.android.internal.widget.PasswordEntryKeyboard$LatinKey</string>
          <string>android.os.storage.IMountServiceListener$Stub$Proxy</string>
          <string>com.android.internal.widget.ResolverDrawerLayout$SavedState</string>
          <string>com.android.internal.widget.AbsActionBarView$1</string>
          <string>android.os.storage.IMountService$Stub$Proxy</string>
          <string>com.android.internal.widget.ActionBarView$SavedState</string>
          <string>android.animation.ValueAnimator$AnimatorUpdateListener</string>
          <string>com.android.internal.widget.PointerLocationView$FasterStringBuilder</string>
          <string>android.animation.AnimatorSet$Builder</string>
          <string>android.os.storage.IMountServiceListener$Stub</string>
          <string>com.android.internal.widget.LockPatternView$Cell</string>
          <string>com.android.internal.widget.LockPatternUtils</string>
          <string>com.android.internal.widget.FloatingToolbar$FloatingToolbarPopup$16$1</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.telecom.ss</name>
        <entities>
          <string>android.telecom.InCallAdapter</string>
          <string>android.telecom.VideoCallImpl$1</string>
          <string>android.telecom.RemoteConnection$1</string>
          <string>com.android.internal.telecom.IVideoCallback</string>
          <string>android.telecom.RemoteConnection$6</string>
          <string>android.telecom.RemoteConnection$VideoProvider$Callback</string>
          <string>android.telecom.RemoteConnection$7</string>
          <string>android.telecom.AuthenticatorService</string>
          <string>android.telecom.RemoteConnection$8</string>
          <string>android.telecom.RemoteConnection$9</string>
          <string>android.telecom.ParcelableConference$1</string>
          <string>android.telecom.RemoteConnection$2</string>
          <string>android.telecom.RemoteConnection$3</string>
          <string>android.telecom.RemoteConnection$4</string>
          <string>android.telecom.RemoteConnection$5</string>
          <string>android.telecom.InCallService$1</string>
          <string>android.telecom.InCallService$2</string>
          <string>android.telecom.InCallService$InCallServiceBinder</string>
          <string>android.telecom.PhoneAccount$1</string>
          <string>android.telecom.Voicemail$Builder</string>
          <string>android.telecom.Connection$FailureSignalingConnection</string>
          <string>android.telecom.RemoteConnectionManager</string>
          <string>android.telecom.VideoCallbackServant</string>
          <string>android.telecom.RemoteConference$Callback</string>
          <string>android.telecom.Connection$1</string>
          <string>android.telecom.Connection$2</string>
          <string>com.android.internal.telecom.RemoteServiceCallback$Stub</string>
          <string>android.telecom.VideoProfile$1</string>
          <string>java.util.concurrent.CopyOnWriteArraySet</string>
          <string>android.telecom.RemoteConnectionService$3</string>
          <string>com.android.internal.telecom.IConnectionService$Stub</string>
          <string>android.telecom.RemoteConnectionService$2</string>
          <string>android.telecom.RemoteConnectionService$1</string>
          <string>android.telecom.Conference$Listener</string>
          <string>android.telecom.ParcelableCall$1</string>
          <string>com.android.internal.telecom.IConnectionServiceAdapter$Stub$Proxy</string>
          <string>android.telecom.DisconnectCause</string>
          <string>android.telecom.RemoteConnection</string>
          <string>android.telecom.VideoCallbackServant$1</string>
          <string>android.telecom.ConnectionService$4</string>
          <string>com.android.internal.telecom.IVideoProvider</string>
          <string>android.telecom.VideoCallbackServant$2</string>
          <string>android.telecom.VideoProfile$CameraCapabilities</string>
          <string>android.telecom.ConnectionService$3</string>
          <string>android.telecom.ConnectionService$6</string>
          <string>android.telecom.ConferenceParticipant</string>
          <string>android.telecom.ConnectionService$5</string>
          <string>android.telecom.DisconnectCause$1</string>
          <string>android.telecom.ConnectionService$7</string>
          <string>android.telecom.RemoteConnection$VideoProvider</string>
          <string>android.telecom.StatusHints$1</string>
          <string>android.telecom.Call</string>
          <string>android.telecom.ConnectionRequest</string>
          <string>android.telecom.ConnectionServiceAdapter</string>
          <string>com.android.internal.telecom.RemoteServiceCallback$Stub$Proxy</string>
          <string>com.android.internal.telecom.IVideoProvider$Stub</string>
          <string>android.telecom.ConnectionService$2</string>
          <string>android.telecom.Call$10</string>
          <string>android.telecom.ConnectionService$1</string>
          <string>com.android.internal.telecom.IConnectionService$Stub$Proxy</string>
          <string>android.telecom.Conferenceable</string>
          <string>com.android.internal.telecom.IConnectionServiceAdapter</string>
          <string>android.telecom.RemoteConference</string>
          <string>android.telecom.CallScreeningService$1</string>
          <string>android.telecom.VideoCallImpl$VideoCallListenerBinder</string>
          <string>android.telecom.ParcelableCall</string>
          <string>android.telecom.AudioState</string>
          <string>android.telecom.PhoneAccount</string>
          <string>android.telecom.Call$8</string>
          <string>android.telecom.Call$9</string>
          <string>com.android.internal.telecom.IVideoCallback$Stub</string>
          <string>android.telecom.VideoCallImpl</string>
          <string>android.telecom.InCallService$VideoCall$Callback</string>
          <string>android.telecom.Call$6</string>
          <string>android.telecom.VideoCallImpl$MessageHandler</string>
          <string>android.telecom.Call$7</string>
          <string>android.telecom.Call$4</string>
          <string>android.telecom.PhoneAccountHandle$1</string>
          <string>android.telecom.Call$5</string>
          <string>android.telecom.Call$2</string>
          <string>android.telecom.Call$3</string>
          <string>android.telecom.ConnectionService</string>
          <string>android.telecom.Call$1</string>
          <string>android.telecom.RemoteConnection$14</string>
          <string>android.telecom.VideoProfile</string>
          <string>android.telecom.RemoteConnection$13</string>
          <string>android.telecom.RemoteConnection$16</string>
          <string>android.telecom.RemoteConnection$15</string>
          <string>android.telecom.RemoteConnection$10</string>
          <string>android.telecom.Connection$VideoProvider$VideoProviderHandler</string>
          <string>android.telecom.RemoteConnection$12</string>
          <string>android.telecom.RemoteConnection$11</string>
          <string>android.telecom.StatusHints</string>
          <string>android.telecom.CallScreeningService$CallResponse</string>
          <string>android.telecom.ConnectionService$5$2</string>
          <string>android.telecom.Voicemail</string>
          <string>android.telecom.Connection$Listener</string>
          <string>android.telecom.PhoneAccountHandle</string>
          <string>android.telecom.RemoteConnection$Callback</string>
          <string>android.telecom.InCallService</string>
          <string>android.telecom.ParcelableCallAnalytics</string>
          <string>android.telecom.VideoProfile$CameraCapabilities$1</string>
          <string>android.telecom.CallScreeningService$CallResponse$Builder</string>
          <string>android.telecom.RemoteConnection$18</string>
          <string>android.telecom.RemoteConnection$17</string>
          <string>android.telecom.RemoteConnectionService</string>
          <string>android.telecom.Call$Details</string>
          <string>android.telecom.Log$1</string>
          <string>android.telecom.ConnectionServiceAdapterServant</string>
          <string>android.telecom.Phone$Listener</string>
          <string>android.telecom.AudioState$1</string>
          <string>android.telecom.ParcelableConference</string>
          <string>android.telecom.RemoteConnection$CallbackRecord</string>
          <string>com.android.internal.telecom.IVideoCallback$Stub$Proxy</string>
          <string>android.telecom.ConnectionRequest$1</string>
          <string>java.util.concurrent.ConcurrentHashMap</string>
          <string>com.android.internal.telecom.IConnectionService</string>
          <string>android.accounts.NetworkErrorException</string>
          <string>android.telecom.CallAudioState</string>
          <string>android.telecom.ConnectionService$5$1</string>
          <string>android.telecom.RemoteConnection$VideoProvider$1</string>
          <string>android.telecom.RemoteConference$2</string>
          <string>android.telecom.RemoteConference$3</string>
          <string>android.telecom.RemoteConference$1</string>
          <string>android.telecom.Conference</string>
          <string>android.telecom.ParcelableConnection$1</string>
          <string>android.telecom.Phone</string>
          <string>android.telecom.RemoteConference$8</string>
          <string>android.telecom.RemoteConference$9</string>
          <string>android.telecom.RemoteConference$6</string>
          <string>android.telecom.RemoteConference$7</string>
          <string>android.telecom.ParcelableCallAnalytics$1</string>
          <string>android.telecom.ParcelableConnection</string>
          <string>android.telecom.RemoteConference$4</string>
          <string>android.telecom.RemoteConference$5</string>
          <string>android.telecom.PhoneAccount$Builder</string>
          <string>android.telecom.Log</string>
          <string>android.telecom.InCallService$VideoCall</string>
          <string>android.telecom.ConnectionServiceAdapterServant$2</string>
          <string>android.telecom.GatewayInfo</string>
          <string>android.telecom.ConnectionServiceAdapterServant$1</string>
          <string>android.telecom.Conference$1</string>
          <string>android.telecom.CallAudioState$1</string>
          <string>android.telecom.AuthenticatorService$Authenticator</string>
          <string>android.telecom.CallbackRecord</string>
          <string>android.telecom.Connection</string>
          <string>android.telecom.Call$Callback</string>
          <string>android.telecom.Connection$VideoProvider</string>
          <string>android.telecom.ConferenceParticipant$1</string>
          <string>android.telecom.GatewayInfo$1</string>
          <string>android.telecom.CallScreeningService$CallScreeningBinder</string>
          <string>android.telecom.Connection$VideoProvider$VideoProviderBinder</string>
          <string>android.telecom.ConnectionService$2$1</string>
          <string>com.android.internal.telecom.RemoteServiceCallback</string>
          <string>android.telecom.Voicemail$1</string>
          <string>android.telecom.RemoteConnectionService$1$1</string>
          <string>android.telecom.CallScreeningService</string>
          <string>com.android.internal.telecom.IConnectionServiceAdapter$Stub</string>
          <string>com.android.internal.telecom.IVideoProvider$Stub$Proxy</string>
          <string>android.telecom.Call$Listener</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.nfc.cardemulation.ss</name>
        <entities>
          <string>android.nfc.cardemulation.HostNfcFService$MsgHandler</string>
          <string>android.nfc.cardemulation.AidGroup</string>
          <string>android.nfc.cardemulation.HostNfcFService</string>
          <string>android.nfc.cardemulation.ApduServiceInfo</string>
          <string>android.nfc.cardemulation.ApduServiceInfo$1</string>
          <string>android.nfc.cardemulation.NfcFCardEmulation</string>
          <string>android.nfc.cardemulation.HostApduService$MsgHandler</string>
          <string>android.nfc.cardemulation.CardEmulation</string>
          <string>android.nfc.cardemulation.NfcFServiceInfo$1</string>
          <string>android.nfc.cardemulation.NfcFServiceInfo</string>
          <string>android.nfc.cardemulation.HostApduService</string>
          <string>android.nfc.cardemulation.AidGroup$1</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.dreams.ss</name>
        <entities>
          <string>com.android.server.dreams.DreamManagerService$1</string>
          <string>com.android.server.dreams.DreamManagerService$3</string>
          <string>com.android.server.dreams.DreamManagerService$2</string>
          <string>android.service.dreams.DreamManagerInternal</string>
          <string>com.android.server.dreams.DreamManagerService$5</string>
          <string>android.service.dreams.IDreamService$Stub$Proxy</string>
          <string>com.android.server.dreams.DreamManagerService$4</string>
          <string>com.android.server.dreams.DreamController$DreamRecord</string>
          <string>android.service.dreams.IDreamService</string>
          <string>com.android.server.dreams.DreamManagerService$DreamHandler</string>
          <string>com.android.server.dreams.DreamManagerService$6</string>
          <string>com.android.server.dreams.DreamController$2</string>
          <string>com.android.server.dreams.DreamController$3</string>
          <string>com.android.server.dreams.DreamManagerService</string>
          <string>com.android.internal.util.DumpUtils$Dump</string>
          <string>com.android.server.dreams.DreamController$1</string>
          <string>com.android.server.dreams.DreamController</string>
          <string>com.android.server.dreams.DreamManagerService$BinderService</string>
          <string>com.android.server.dreams.DreamController$DreamRecord$2</string>
          <string>com.android.server.dreams.DreamController$Listener</string>
          <string>com.android.server.dreams.DreamController$DreamRecord$3</string>
          <string>android.service.dreams.IDreamService$Stub</string>
          <string>com.android.server.dreams.DreamController$DreamRecord$1</string>
          <string>com.android.server.dreams.DreamManagerService$LocalService</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.service.wallpaper.ss</name>
        <entities>
          <string>android.service.wallpaper.WallpaperService$IWallpaperServiceWrapper</string>
          <string>android.service.wallpaper.WallpaperService</string>
          <string>android.service.wallpaper.WallpaperService$Engine$WallpaperInputEventReceiver</string>
          <string>com.android.internal.view.BaseIWindow</string>
          <string>android.service.wallpaper.WallpaperService$Engine$1</string>
          <string>android.service.wallpaper.WallpaperService$Engine$2</string>
          <string>android.service.wallpaper.WallpaperService$Engine$3</string>
          <string>android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper</string>
          <string>android.service.wallpaper.IWallpaperConnection</string>
          <string>android.service.wallpaper.WallpaperService$Engine</string>
          <string>android.service.wallpaper.WallpaperService$WallpaperCommand</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.internal.logging.ss</name>
        <entities>
          <string>com.android.internal.logging.AndroidHandler</string>
          <string>com.android.framework.protobuf.nano.InvalidProtocolBufferNanoException</string>
          <string>com.android.internal.logging.AndroidHandler$1</string>
          <string>com.android.framework.protobuf.nano.InternalNano</string>
          <string>java.util.logging.LogRecord</string>
          <string>com.android.internal.logging.MetricsProto</string>
          <string>java.util.logging.Formatter</string>
          <string>com.android.framework.protobuf.nano.ExtendableMessageNano</string>
          <string>com.android.internal.logging.MetricsLogger</string>
          <string>dalvik.system.DalvikLogHandler</string>
          <string>com.android.internal.logging.EventLogTags</string>
          <string>com.android.internal.logging.MetricsProto$MetricsEvent</string>
          <string>com.android.framework.protobuf.nano.FieldArray</string>
          <string>com.android.framework.protobuf.nano.FieldData</string>
          <string>dalvik.system.DalvikLogging</string>
          <string>java.util.logging.Handler</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.framework.protobuf.nano.ss</name>
        <entities>
          <string>com.android.framework.protobuf.nano.MessageNanoPrinter</string>
          <string>com.android.framework.protobuf.nano.CodedOutputByteBufferNano</string>
          <string>java.nio.BufferOverflowException</string>
          <string>com.android.framework.protobuf.nano.MessageNano</string>
          <string>com.android.framework.protobuf.nano.CodedInputByteBufferNano</string>
          <string>com.android.framework.protobuf.nano.CodedOutputByteBufferNano$OutOfSpaceException</string>
          <string>com.android.framework.protobuf.nano.UnknownFieldData</string>
          <string>com.android.framework.protobuf.nano.Extension$PrimitiveExtension</string>
          <string>com.android.framework.protobuf.nano.WireFormatNano</string>
          <string>com.android.framework.protobuf.nano.Extension</string>
          <string>java.nio.ReadOnlyBufferException</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.net.ss</name>
        <entities>
          <string>com.android.net.IProxyPortListener$Stub</string>
          <string>com.android.net.IProxyPortListener</string>
          <string>com.android.net.IProxyPortListener$Stub$Proxy</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.view.animation.ss</name>
        <entities>
          <string>android.view.animation.ScaleAnimation</string>
          <string>android.view.animation.AnticipateInterpolator</string>
          <string>com.android.internal.widget.WeightedLinearLayout</string>
          <string>android.view.animation.Animation$1</string>
          <string>android.view.animation.Animation$3</string>
          <string>android.view.animation.Animation$2</string>
          <string>android.preference.CheckBoxPreference</string>
          <string>android.view.animation.CycleInterpolator</string>
          <string>android.content.res.TypedArray</string>
          <string>com.android.internal.widget.PasswordEntryKeyboardView</string>
          <string>android.view.animation.AnimationUtils</string>
          <string>android.util.AttributeSet</string>
          <string>com.android.internal.view.animation.NativeInterpolatorFactoryHelper</string>
          <string>android.view.animation.GridLayoutAnimationController</string>
          <string>android.preference.RingtonePreference</string>
          <string>android.view.animation.Animation</string>
          <string>android.view.animation.Animation$NoImagePreloadHolder</string>
          <string>android.content.res.Resources$Theme</string>
          <string>android.widget.ToggleButton</string>
          <string>android.view.animation.AccelerateInterpolator</string>
          <string>android.view.animation.PathInterpolator</string>
          <string>android.widget.TwoLineListItem</string>
          <string>android.view.animation.BounceInterpolator</string>
          <string>com.android.internal.view.animation.NativeInterpolatorFactory</string>
          <string>android.view.animation.Animation$AnimationListener</string>
          <string>android.view.animation.BaseInterpolator</string>
          <string>com.android.internal.view.animation.HasNativeInterpolator</string>
          <string>android.view.animation.RotateAnimation</string>
          <string>android.view.animation.OvershootInterpolator</string>
          <string>android.view.animation.AnticipateOvershootInterpolator</string>
          <string>android.view.animation.LinearInterpolator</string>
          <string>android.view.animation.GridLayoutAnimationController$AnimationParameters</string>
          <string>com.android.internal.R$styleable</string>
          <string>android.view.animation.DecelerateInterpolator</string>
          <string>android.view.animation.Animation$Description</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.media.soundtrigger.ss</name>
        <entities>
          <string>android.media.soundtrigger.SoundTriggerDetector$RecognitionCallback</string>
          <string>android.media.soundtrigger.SoundTriggerManager</string>
          <string>android.media.soundtrigger.SoundTriggerManager$Model</string>
          <string>android.media.soundtrigger.SoundTriggerDetector</string>
          <string>android.media.soundtrigger.SoundTriggerDetector$EventPayload</string>
          <string>android.media.soundtrigger.SoundTriggerDetector$MyHandler</string>
          <string>android.media.soundtrigger.SoundTriggerDetector$Callback</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.appwidget.ss</name>
        <entities>
          <string>com.android.server.appwidget.AppWidgetServiceImpl$CallbackHandler</string>
          <string>android.graphics.BlurMaskFilter</string>
          <string>com.android.server.appwidget.AppWidgetServiceImpl$Host</string>
          <string>com.android.internal.widget.IRemoteViewsAdapterConnection$Stub$Proxy</string>
          <string>com.android.server.appwidget.AppWidgetServiceImpl$HostId</string>
          <string>com.android.internal.widget.IRemoteViewsAdapterConnection$Stub</string>
          <string>android.graphics.TableMaskFilter</string>
          <string>com.android.server.appwidget.AppWidgetService</string>
          <string>android.graphics.ColorMatrix</string>
          <string>com.android.server.appwidget.AppWidgetServiceImpl$SaveStateRunnable</string>
          <string>android.graphics.MaskFilter</string>
          <string>com.android.server.appwidget.AppWidgetServiceImpl$BackupRestoreController</string>
          <string>com.android.server.appwidget.AppWidgetServiceImpl$SecurityPolicy</string>
          <string>com.android.server.appwidget.AppWidgetServiceImpl$Widget</string>
          <string>com.android.server.appwidget.AppWidgetServiceImpl</string>
          <string>com.android.server.WidgetBackupProvider</string>
          <string>com.android.server.appwidget.AppWidgetServiceImpl$ServiceConnectionProxy</string>
          <string>com.android.internal.widget.IRemoteViewsAdapterConnection</string>
          <string>com.android.server.appwidget.AppWidgetServiceImpl$Provider</string>
          <string>android.graphics.drawable.PaintDrawable</string>
          <string>com.android.server.appwidget.AppWidgetServiceImpl$LoadedWidgetState</string>
          <string>android.graphics.PaintFlagsDrawFilter</string>
          <string>android.util.TypedValue</string>
          <string>com.android.internal.appwidget.IAppWidgetHost</string>
          <string>com.android.internal.app.UnlaunchableAppActivity</string>
          <string>android.graphics.DrawFilter</string>
          <string>android.graphics.BlurMaskFilter$Blur</string>
          <string>com.android.server.policy.IconUtilities</string>
          <string>com.android.server.appwidget.AppWidgetServiceImpl$ProviderId</string>
          <string>com.android.server.appwidget.AppWidgetServiceImpl$1</string>
          <string>com.android.server.appwidget.AppWidgetServiceImpl$BackupRestoreController$RestoreUpdateRecord</string>
          <string>com.android.server.appwidget.AppWidgetServiceImpl$3</string>
          <string>com.android.server.appwidget.AppWidgetServiceImpl$2</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.print.ss</name>
        <entities>
          <string>com.android.server.print.RemotePrintServiceRecommendationService$RemotePrintServiceRecommendationServiceCallbacks</string>
          <string>com.android.server.print.RemotePrintSpooler</string>
          <string>android.print.IPrintSpoolerCallbacks$Stub</string>
          <string>com.android.server.print.RemotePrintService$RemotePrintServiceClient</string>
          <string>java.util.concurrent.TimeoutException</string>
          <string>android.print.IPrintSpoolerCallbacks</string>
          <string>android.printservice.IPrintService$Stub$Proxy</string>
          <string>com.android.server.print.RemotePrintService$PrintServiceCallbacks</string>
          <string>com.android.server.print.RemotePrintSpooler$SetPrintJobTagCaller$1</string>
          <string>android.printservice.IPrintServiceClient$Stub</string>
          <string>com.android.server.print.RemotePrintSpooler$OnCustomPrinterIconLoadedCaller$1</string>
          <string>android.print.IPrintJobStateChangeListener</string>
          <string>com.android.server.print.UserState$PrinterDiscoverySessionMediator$1</string>
          <string>com.android.server.print.RemotePrintServiceRecommendationService$Connection$1</string>
          <string>com.android.server.print.UserState$PrintJobForAppCache</string>
          <string>com.android.server.print.PrintManagerService</string>
          <string>com.android.server.print.RemotePrintServiceRecommendationService$Connection</string>
          <string>android.printservice.IPrintService$Stub</string>
          <string>android.print.IPrinterDiscoveryObserver$Stub</string>
          <string>com.android.server.print.RemotePrintSpooler$MyServiceConnection</string>
          <string>com.android.server.print.RemotePrintService$10</string>
          <string>android.printservice.IPrintService</string>
          <string>com.android.server.print.UserState$UserStateHandler</string>
          <string>com.android.server.print.UserState$PrinterDiscoverySessionMediator$SessionHandler</string>
          <string>com.android.server.print.RemotePrintSpooler$ClearCustomPrinterIconCacheCaller</string>
          <string>com.android.server.print.RemotePrintSpooler$SetPrintJobStateCaller$1</string>
          <string>android.print.IPrintSpooler</string>
          <string>android.printservice.recommendation.IRecommendationServiceCallbacks$Stub</string>
          <string>com.android.server.print.RemotePrintSpooler$ClearCustomPrinterIconCacheCaller$1</string>
          <string>com.android.server.print.RemotePrintService</string>
          <string>com.android.server.print.RemotePrintServiceRecommendationService</string>
          <string>com.android.server.print.UserState$PrintJobStateChangeListenerRecord</string>
          <string>com.android.server.print.PrintManagerService$PrintManagerImpl</string>
          <string>com.android.server.print.RemotePrintSpooler$GetCustomPrinterIconCaller$1</string>
          <string>android.print.IPrintSpoolerCallbacks$Stub$Proxy</string>
          <string>android.printservice.recommendation.IRecommendationServiceCallbacks$Stub$Proxy</string>
          <string>com.android.server.print.UserState$5</string>
          <string>com.android.server.print.UserState$4</string>
          <string>com.android.server.print.UserState$3</string>
          <string>com.android.server.print.UserState$2</string>
          <string>com.android.server.print.UserState$1</string>
          <string>com.android.server.print.UserState</string>
          <string>com.android.server.print.RemotePrintService$7</string>
          <string>com.android.server.print.RemotePrintService$6</string>
          <string>com.android.server.print.RemotePrintService$9</string>
          <string>com.android.server.print.RemotePrintSpooler$SetPrintJobStateCaller</string>
          <string>android.print.IPrintSpoolerClient$Stub$Proxy</string>
          <string>com.android.server.print.RemotePrintService$8</string>
          <string>com.android.server.print.UserState$6</string>
          <string>android.printservice.recommendation.IRecommendationService</string>
          <string>com.android.server.print.PrintManagerService$PrintManagerImpl$4</string>
          <string>com.android.server.print.PrintManagerService$PrintManagerImpl$3</string>
          <string>com.android.server.print.PrintManagerService$PrintManagerImpl$2</string>
          <string>com.android.server.print.UserState$ListenerRecord</string>
          <string>com.android.server.print.PrintManagerService$PrintManagerImpl$1</string>
          <string>android.print.IPrintSpoolerClient</string>
          <string>android.printservice.recommendation.IRecommendationService$Stub</string>
          <string>com.android.server.print.RemotePrintSpooler$GetPrintJobInfosCaller$1</string>
          <string>android.print.PrinterInfo$Builder</string>
          <string>android.print.IPrinterDiscoveryObserver</string>
          <string>android.printservice.recommendation.IRecommendationService$Stub$Proxy</string>
          <string>com.android.server.print.RemotePrintService$RemoteServiceConneciton</string>
          <string>com.android.server.print.RemotePrintSpooler$SetPrintJobTagCaller</string>
          <string>android.printservice.recommendation.IRecommendationServiceCallbacks</string>
          <string>android.printservice.IPrintServiceClient$Stub$Proxy</string>
          <string>com.android.server.print.RemotePrintSpooler$GetCustomPrinterIconCaller</string>
          <string>android.os.IInterface</string>
          <string>com.android.server.print.RemotePrintSpooler$PrintSpoolerClient</string>
          <string>android.util.TimedRemoteCaller</string>
          <string>com.android.server.print.RemotePrintSpooler$GetPrintJobInfosCaller</string>
          <string>com.android.server.print.RemotePrintSpooler$BasePrintSpoolerServiceCallbacks</string>
          <string>com.android.server.print.RemotePrintSpooler$OnCustomPrinterIconLoadedCaller</string>
          <string>android.print.IPrintSpoolerClient$Stub</string>
          <string>com.android.server.print.RemotePrintSpooler$GetPrintJobInfoCaller$1</string>
          <string>com.android.server.print.UserState$PrinterDiscoverySessionMediator</string>
          <string>com.android.server.print.RemotePrintService$3</string>
          <string>com.android.server.print.RemotePrintService$2</string>
          <string>com.android.server.print.RemotePrintService$5</string>
          <string>com.android.server.print.RemotePrintService$4</string>
          <string>com.android.server.print.RemotePrintService$MyHandler</string>
          <string>com.android.server.print.RemotePrintService$1</string>
          <string>android.print.IPrintSpooler$Stub</string>
          <string>android.print.IPrintSpooler$Stub$Proxy</string>
          <string>com.android.server.print.UserState$PrintJobForAppCache$1</string>
          <string>com.android.server.print.RemotePrintSpooler$GetPrintJobInfoCaller</string>
          <string>com.android.server.print.RemotePrintSpooler$PrintSpoolerCallbacks</string>
          <string>android.print.IPrinterDiscoveryObserver$Stub$Proxy</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.hardware.usb.ss</name>
        <entities>
          <string>android.hardware.usb.UsbDevice$1</string>
          <string>android.hardware.usb.UsbAccessory$1</string>
          <string>android.hardware.usb.UsbInterface$1</string>
          <string>android.hardware.usb.UsbPort$1</string>
          <string>android.hardware.usb.UsbAccessory</string>
          <string>android.hardware.usb.UsbDevice</string>
          <string>android.hardware.usb.UsbPortStatus</string>
          <string>android.hardware.usb.UsbEndpoint$1</string>
          <string>android.hardware.usb.UsbRequest</string>
          <string>android.hardware.usb.UsbPort</string>
          <string>android.hardware.usb.UsbDeviceConnection</string>
          <string>android.hardware.usb.UsbEndpoint</string>
          <string>android.hardware.usb.UsbPortStatus$1</string>
          <string>android.hardware.usb.UsbConfiguration$1</string>
          <string>android.hardware.usb.UsbConfiguration</string>
          <string>android.hardware.usb.UsbInterface</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.hardware.camera2.params.ss</name>
        <entities>
          <string>android.hardware.camera2.params.OutputConfiguration$1</string>
          <string>android.hardware.camera2.params.VendorTagDescriptor$1</string>
          <string>android.hardware.camera2.params.OutputConfiguration</string>
          <string>android.hardware.camera2.params.VendorTagDescriptor</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>javax.microedition.khronos.egl.ss</name>
        <entities>
          <string>com.google.android.gles_jni.EGLImpl</string>
          <string>javax.microedition.khronos.egl.EGL</string>
          <string>javax.microedition.khronos.egl.EGLContext</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.media.effect.ss</name>
        <entities>
          <string>android.media.effect.EffectFactory</string>
          <string>android.media.effect.EffectContext</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.preference.ss</name>
        <entities>
          <string>android.widget.SeekBar$OnSeekBarChangeListener</string>
          <string>android.preference.VolumePreference$SavedState$1</string>
          <string>android.preference.PreferenceFragment$3</string>
          <string>android.preference.MultiCheckPreference$SavedState$1</string>
          <string>android.preference.PreferenceFragment$2</string>
          <string>android.preference.PreferenceFragment$1</string>
          <string>android.preference.MultiSelectListPreference$SavedState$1</string>
          <string>android.preference.PreferenceScreen</string>
          <string>android.preference.PreferenceActivity</string>
          <string>android.preference.EditTextPreference$SavedState</string>
          <string>android.preference.EditTextPreference</string>
          <string>android.preference.SeekBarVolumizer$Observer</string>
          <string>android.preference.Preference$OnPreferenceChangeListener</string>
          <string>android.preference.ListPreference$SavedState$1</string>
          <string>android.preference.PreferenceFrameLayout$LayoutParams</string>
          <string>android.preference.TwoStatePreference$SavedState$1</string>
          <string>android.preference.PreferenceManager</string>
          <string>android.preference.GenericInflater$Parent</string>
          <string>android.preference.MultiCheckPreference$1</string>
          <string>android.preference.DialogPreference$SavedState</string>
          <string>android.preference.ListPreference$SavedState</string>
          <string>android.preference.GenericInflater$FactoryMerger</string>
          <string>android.preference.PreferenceActivity$HeaderAdapter</string>
          <string>android.preference.PreferenceScreen$SavedState$1</string>
          <string>android.preference.SeekBarPreference$SavedState</string>
          <string>android.preference.PreferenceManager$OnPreferenceTreeClickListener</string>
          <string>android.preference.ListPreference</string>
          <string>android.preference.PreferenceGroupAdapter$1</string>
          <string>android.preference.PreferenceGroup</string>
          <string>android.preference.PreferenceFragment</string>
          <string>android.preference.VolumePreference$SavedState</string>
          <string>android.preference.SeekBarVolumizer</string>
          <string>android.preference.TwoStatePreference$SavedState</string>
          <string>android.preference.SeekBarVolumizer$Callback</string>
          <string>android.preference.Preference$OnPreferenceClickListener</string>
          <string>android.preference.PreferenceManager$OnActivityStopListener</string>
          <string>android.preference.SeekBarPreference$SavedState$1</string>
          <string>android.preference.EditTextPreference$SavedState$1</string>
          <string>android.preference.SeekBarDialogPreference</string>
          <string>android.preference.SeekBarPreference</string>
          <string>android.preference.PreferenceActivity$Header$1</string>
          <string>android.preference.MultiSelectListPreference</string>
          <string>android.preference.Preference$OnPreferenceChangeInternalListener</string>
          <string>android.preference.SwitchPreference$Listener</string>
          <string>android.preference.GenericInflater</string>
          <string>android.preference.DialogPreference</string>
          <string>android.preference.VolumePreference$VolumeStore</string>
          <string>android.widget.SeekBar</string>
          <string>android.preference.MultiSelectListPreference$1</string>
          <string>android.widget.AbsSeekBar</string>
          <string>android.preference.MultiCheckPreference$SavedState</string>
          <string>android.preference.PreferenceScreen$SavedState</string>
          <string>android.preference.PreferenceActivity$HeaderAdapter$HeaderViewHolder</string>
          <string>android.preference.GenericInflater$Factory</string>
          <string>android.preference.PreferenceActivity$Header</string>
          <string>android.preference.MultiSelectListPreference$SavedState</string>
          <string>android.preference.VolumePreference</string>
          <string>android.preference.PreferenceGroupAdapter</string>
          <string>android.content.DialogInterface$OnMultiChoiceClickListener</string>
          <string>android.preference.PreferenceFrameLayout</string>
          <string>android.preference.PreferenceInflater</string>
          <string>android.preference.PreferenceGroupAdapter$PreferenceLayout</string>
          <string>android.preference.SeekBarVolumizer$H</string>
          <string>android.preference.PreferenceManager$OnActivityResultListener</string>
          <string>android.preference.MultiCheckPreference</string>
          <string>android.preference.DialogPreference$SavedState$1</string>
          <string>android.preference.PreferenceManager$OnActivityDestroyListener</string>
          <string>android.preference.TwoStatePreference</string>
          <string>android.preference.ListPreference$1</string>
          <string>android.preference.Preference</string>
          <string>android.preference.PreferenceActivity$1</string>
          <string>android.preference.PreferenceFragment$OnPreferenceStartFragmentCallback</string>
          <string>android.preference.SeekBarVolumizer$Receiver</string>
          <string>android.preference.PreferenceActivity$4</string>
          <string>android.preference.SwitchPreference</string>
          <string>android.preference.PreferenceActivity$2</string>
          <string>android.preference.PreferenceActivity$3</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.gesture.ss</name>
        <entities>
          <string>android.gesture.Gesture$1</string>
          <string>android.gesture.Prediction</string>
          <string>android.gesture.Learner</string>
          <string>android.gesture.GestureLibraries</string>
          <string>android.gesture.Instance</string>
          <string>android.gesture.GestureLibraries$ResourceGestureLibrary</string>
          <string>android.gesture.GestureOverlayView</string>
          <string>android.gesture.Gesture</string>
          <string>android.gesture.GestureUtils</string>
          <string>android.view.animation.AccelerateDecelerateInterpolator</string>
          <string>android.gesture.InstanceLearner$1</string>
          <string>android.gesture.GestureOverlayView$OnGesturePerformedListener</string>
          <string>android.gesture.GestureOverlayView$OnGesturingListener</string>
          <string>android.gesture.InstanceLearner</string>
          <string>android.gesture.OrientedBoundingBox</string>
          <string>android.gesture.GestureLibrary</string>
          <string>android.gesture.GestureLibraries$FileGestureLibrary</string>
          <string>android.gesture.GestureStore</string>
          <string>android.gesture.GestureOverlayView$FadeOutRunnable</string>
          <string>android.gesture.GestureOverlayView$OnGestureListener</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.text.style.ss</name>
        <entities>
          <string>android.text.style.TtsSpan$DecimalBuilder</string>
          <string>android.text.style.SuggestionSpan</string>
          <string>android.text.style.SuggestionSpan$1</string>
          <string>android.text.style.TtsSpan</string>
          <string>android.text.style.ImageSpan</string>
          <string>android.text.style.TtsSpan$VerbatimBuilder</string>
          <string>android.text.style.TtsSpan$OrdinalBuilder</string>
          <string>android.text.style.TtsSpan$Builder</string>
          <string>android.text.style.TtsSpan$DigitsBuilder</string>
          <string>android.text.style.TtsSpan$MoneyBuilder</string>
          <string>android.text.style.TabStopSpan</string>
          <string>android.text.style.TtsSpan$SemioticClassBuilder</string>
          <string>android.text.style.TtsSpan$CardinalBuilder</string>
          <string>android.text.style.CharacterStyle</string>
          <string>android.text.style.TtsSpan$TextBuilder</string>
          <string>android.text.style.CharacterStyle$Passthrough</string>
          <string>android.text.style.DynamicDrawableSpan</string>
          <string>android.text.style.TtsSpan$DateBuilder</string>
          <string>android.text.style.TtsSpan$MeasureBuilder</string>
          <string>android.text.style.TtsSpan$ElectronicBuilder</string>
          <string>android.text.style.TtsSpan$FractionBuilder</string>
          <string>android.text.style.TtsSpan$TimeBuilder</string>
          <string>android.text.style.TtsSpan$TelephoneBuilder</string>
          <string>android.text.style.TabStopSpan$Standard</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.drm.ss</name>
        <entities>
          <string>android.drm.DrmStore$DrmObjectType</string>
          <string>android.drm.DrmManagerClient$OnErrorListener</string>
          <string>android.drm.DrmInfoStatus</string>
          <string>android.drm.DrmInfo</string>
          <string>android.drm.DrmStore$RightsStatus</string>
          <string>android.drm.ProcessedData</string>
          <string>android.drm.DrmInfoRequest</string>
          <string>android.drm.DrmConvertedStatus</string>
          <string>android.drm.DrmEvent</string>
          <string>android.drm.DrmStore$Action</string>
          <string>android.drm.DrmSupportInfo</string>
          <string>android.drm.DrmStore$Playback</string>
          <string>android.drm.DrmUtils</string>
          <string>android.drm.DrmManagerClient</string>
          <string>android.drm.DrmStore$ConstraintsColumns</string>
          <string>android.drm.DrmManagerClient$OnInfoListener</string>
          <string>android.drm.DrmRights</string>
          <string>android.drm.DrmManagerClient$InfoHandler</string>
          <string>android.drm.DrmErrorEvent</string>
          <string>android.drm.DrmManagerClient$EventHandler</string>
          <string>android.drm.DrmUtils$ExtendedMetadataParser</string>
          <string>java.lang.IllegalArgumentException</string>
          <string>android.drm.DrmInfoEvent</string>
          <string>android.drm.DrmStore</string>
          <string>android.drm.DrmManagerClient$OnEventListener</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.wm.ss</name>
        <entities>
          <string>com.android.server.wm.WindowToken</string>
          <string>com.android.server.wm.WindowState$DeadWindowEventReceiver</string>
          <string>com.android.server.wm.Watermark</string>
          <string>com.android.server.wm.ViewServer$ViewServerWorker</string>
          <string>com.android.server.wm.WallpaperController</string>
          <string>com.android.server.wm.animation.CurvedTranslateAnimation</string>
          <string>android.view.inputmethod.InputMethodManagerInternal</string>
          <string>android.view.WindowManagerInternal$AppTransitionListener</string>
          <string>java.net.ServerSocket</string>
          <string>android.view.IApplicationToken</string>
          <string>java.util.concurrent.Future</string>
          <string>com.android.server.wm.ViewServer</string>
          <string>com.android.server.wm.DimLayer</string>
          <string>android.view.WindowManagerInternal$MagnificationCallbacks</string>
          <string>com.android.server.wm.WindowManagerService$2</string>
          <string>android.view.Display</string>
          <string>com.android.server.wm.WindowManagerService$1</string>
          <string>com.android.internal.policy.DockedDividerUtils</string>
          <string>com.android.server.wm.DisplayContent</string>
          <string>com.android.server.wm.WindowManagerService$9</string>
          <string>com.android.server.wm.WindowManagerService$8</string>
          <string>com.android.server.wm.WindowManagerService$7</string>
          <string>com.android.server.wm.KeyguardDisableHandler$KeyguardTokenWatcher</string>
          <string>com.android.server.wm.DockedStackDividerController$_void_startImeAdjustAnimation_boolean_adjustedForIme_boolean_adjustedForDivider_com_android_server_wm_WindowState_imeWin_LambdaImpl0</string>
          <string>com.android.server.wm.WindowManagerService$6</string>
          <string>com.android.server.wm.WindowManagerService$5</string>
          <string>com.android.server.wm.WindowManagerService$4</string>
          <string>android.view.IWindowFocusObserver$Stub$Proxy</string>
          <string>com.android.server.wm.WindowManagerService$3</string>
          <string>com.android.server.wm.StartingData</string>
          <string>com.android.internal.policy.DividerSnapAlgorithm</string>
          <string>com.android.server.wm.TaskTapPointerEventListener$TwoFingerScrollListener</string>
          <string>com.android.internal.app.IAssistScreenshotReceiver$Stub$Proxy</string>
          <string>java.util.concurrent.Executors</string>
          <string>com.android.server.wm.WindowManagerService$H</string>
          <string>com.android.server.wm.WindowManagerService$RotationWatcher</string>
          <string>com.android.server.wm.BlackFrame$BlackSurface</string>
          <string>android.view.IInputFilterHost$Stub$Proxy</string>
          <string>com.android.server.wm.DragAndDropPermissionsHandler</string>
          <string>com.android.internal.view.WindowManagerPolicyThread</string>
          <string>com.android.server.wm.WindowManagerService</string>
          <string>com.android.server.wm.WindowManagerService$10</string>
          <string>com.android.server.wm.WindowManagerService$DragInputEventReceiver</string>
          <string>android.view.InputEventReceiver$Factory</string>
          <string>com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow$AnimationController</string>
          <string>com.android.server.wm.WindowSurfaceController$SurfaceTrace</string>
          <string>com.android.server.wm.BoundsAnimationController$BoundsAnimator</string>
          <string>android.view.Display$ColorTransform</string>
          <string>com.android.internal.view.IInputMethodManager</string>
          <string>com.android.server.wm.AppWindowToken</string>
          <string>com.android.server.wm.TaskStack</string>
          <string>android.view.IWindowFocusObserver</string>
          <string>com.android.server.wm.WindowAnimator$DisplayContentsAnimator</string>
          <string>com.android.server.wm.InputConsumerImpl</string>
          <string>com.android.server.wm.TaskTapPointerEventListener</string>
          <string>com.android.server.wm.WindowManagerService$SettingsObserver</string>
          <string>com.android.server.wm.DragResizeMode</string>
          <string>com.android.server.wm.WindowManagerService$LocalService</string>
          <string>com.android.server.wm.EmulatorDisplayOverlay</string>
          <string>android.view.Display$HdrCapabilities$1</string>
          <string>com.android.server.wm.WindowSurfacePlacer$LayerAndToken</string>
          <string>com.android.server.wm.WindowState$1</string>
          <string>android.view.Surface$OutOfResourcesException</string>
          <string>com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver</string>
          <string>com.android.server.wm.animation.ClipRectLRAnimation</string>
          <string>com.android.server.wm.WindowState$2</string>
          <string>com.android.server.wm.TaskPositioner$WindowPositionerEventReceiver</string>
          <string>com.android.server.wm.WindowStateAnimator</string>
          <string>android.view.IRotationWatcher$Stub</string>
          <string>android.view.IInputFilter$Stub</string>
          <string>android.view.Gravity</string>
          <string>android.view.WindowManagerInternal</string>
          <string>android.view.IWindow$Stub</string>
          <string>android.view.IRotationWatcher$Stub$Proxy</string>
          <string>android.view.IInputFilter</string>
          <string>android.view.IDockedStackListener$Stub</string>
          <string>android.annotation.IntDef</string>
          <string>com.android.server.wm.DisplayContentList</string>
          <string>com.android.server.wm.WindowManagerService$MousePositionTracker</string>
          <string>android.graphics.Region$Op</string>
          <string>com.android.server.wm.WindowList</string>
          <string>com.android.server.wm.TaskPositioner</string>
          <string>android.view.IOnKeyguardExitResult$Stub$Proxy</string>
          <string>com.android.server.wm.BlackFrame</string>
          <string>android.view.WindowManager$LayoutParams$1</string>
          <string>android.view.WindowManager</string>
          <string>android.view.IDockedStackListener</string>
          <string>com.android.server.DisplayThread</string>
          <string>com.android.server.wm.BoundsAnimationController$AnimateBoundsUser</string>
          <string>android.view.IRotationWatcher</string>
          <string>android.view.WindowManagerPolicy$PointerEventListener</string>
          <string>com.android.server.wm.Session</string>
          <string>android.view.WindowManagerPolicy$OnKeyguardExitResult</string>
          <string>android.view.SurfaceSession</string>
          <string>android.view.animation.AnimationSet</string>
          <string>com.android.server.wm.StrictModeFlash</string>
          <string>com.android.server.wm.WindowAnimator</string>
          <string>com.android.server.wm.TaskGroup</string>
          <string>com.android.server.wm.ScreenRotationAnimation</string>
          <string>com.android.server.wm.WindowAnimator$1</string>
          <string>android.view.IInputFilterHost$Stub</string>
          <string>android.view.WindowManagerInternal$WindowsForAccessibilityCallback</string>
          <string>com.android.server.wm.DisplaySettings</string>
          <string>android.view.IWindowId$Stub</string>
          <string>com.android.server.wm.AccessibilityController$WindowsForAccessibilityObserver$MyHandler</string>
          <string>com.android.server.wm.AppTransition</string>
          <string>java.text.DateFormat</string>
          <string>com.android.server.wm.DimLayerController</string>
          <string>android.view.IWindowId$Stub$Proxy</string>
          <string>android.view.IOnKeyguardExitResult</string>
          <string>android.view.animation.ClipRectAnimation</string>
          <string>com.android.server.wm.Task</string>
          <string>com.android.internal.policy.DividerSnapAlgorithm$SnapTarget</string>
          <string>com.android.internal.app.IAssistScreenshotReceiver</string>
          <string>com.android.server.wm.BoundsAnimationController</string>
          <string>com.android.server.wm.AccessibilityController</string>
          <string>android.view.IInputFilter$Stub$Proxy</string>
          <string>com.android.server.wm.WindowLayersController</string>
          <string>com.android.server.wm.WindowState</string>
          <string>android.view.IWindowId</string>
          <string>com.android.server.wm.AppWindowAnimator$DummyAnimation</string>
          <string>com.android.server.wm.WindowManagerService$UpdateAnimationScaleMode</string>
          <string>com.android.server.wm.BoundsAnimationController$AppTransitionNotifier</string>
          <string>android.view.IAppTransitionAnimationSpecsFuture</string>
          <string>com.android.server.wm.PointerEventDispatcher</string>
          <string>com.android.server.wm.DimLayerController$DimLayerState</string>
          <string>android.view.IInputFilterHost</string>
          <string>android.view.IWindow$Stub$Proxy</string>
          <string>com.android.server.wm.KeyguardDisableHandler</string>
          <string>com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport</string>
          <string>android.view.WindowManager$InvalidDisplayException</string>
          <string>com.android.server.wm.WindowSurfaceController</string>
          <string>com.android.server.wm.CircularDisplayMask</string>
          <string>com.android.server.wm.WindowSurfacePlacer</string>
          <string>com.android.server.wm.WindowManagerService$HideNavInputConsumer</string>
          <string>com.android.server.wm.DimLayer$DimLayerUser</string>
          <string>android.view.WindowManagerInternal$OnHardKeyboardStatusChangeListener</string>
          <string>com.android.server.wm.WallpaperController$FindWallpaperTargetResult</string>
          <string>java.io.OutputStreamWriter</string>
          <string>com.android.server.wm.AccessibilityController$DisplayMagnifier$MagnifiedViewport$ViewportWindow</string>
          <string>com.android.server.wm.AccessibilityController$DisplayMagnifier$MyHandler</string>
          <string>com.android.server.wm.AppTransition$1</string>
          <string>com.android.server.wm.WindowState$DeathRecipient</string>
          <string>com.android.server.wm.AppTransition$2</string>
          <string>com.android.server.wm.InputMonitor</string>
          <string>android.graphics.Path$Direction</string>
          <string>com.android.server.wm.AppTokenList</string>
          <string>com.android.server.wm.DockedStackDividerController</string>
          <string>com.android.server.wm.AppTransition$3</string>
          <string>com.android.server.wm.AppTransition$4</string>
          <string>android.view.WindowManager$LayoutParams</string>
          <string>android.app.ActivityManager$StackId</string>
          <string>com.android.server.wm.animation.ClipRectTBAnimation</string>
          <string>com.android.internal.app.IAssistScreenshotReceiver$Stub</string>
          <string>com.android.server.wm.DisplaySettings$Entry</string>
          <string>android.view.IOnKeyguardExitResult$Stub</string>
          <string>android.view.IDockedStackListener$Stub$Proxy</string>
          <string>android.view.Display$ColorTransform$1</string>
          <string>com.android.server.wm.DragState</string>
          <string>com.android.server.wm.WindowSurfaceController$SurfaceControlWithBackground</string>
          <string>com.android.server.wm.WindowManagerService$WindowChangeListener</string>
          <string>android.view.IWindow</string>
          <string>com.android.server.wm.AccessibilityController$DisplayMagnifier</string>
          <string>com.android.server.UiThread</string>
          <string>com.android.server.wm.AppWindowAnimator</string>
          <string>com.android.server.wm.TaskPositioner$CtrlType</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.filterfw.io.ss</name>
        <entities>
          <string>android.filterfw.io.TextGraphReader$Command</string>
          <string>android.filterfw.io.TextGraphReader$InitFilterCommand</string>
          <string>android.filterfw.io.TextGraphReader$ConnectCommand</string>
          <string>android.filterfw.core.FilterFactory</string>
          <string>android.filterfw.io.PatternScanner</string>
          <string>android.filterfw.io.TextGraphReader$AddLibraryCommand</string>
          <string>android.filterfw.core.ProtocolException</string>
          <string>android.filterfw.io.TextGraphReader$ImportPackageCommand</string>
          <string>android.filterfw.io.TextGraphReader$AllocateFilterCommand</string>
          <string>android.filterfw.io.GraphIOException</string>
          <string>android.filterfw.core.KeyValueMap</string>
          <string>android.filterfw.io.TextGraphReader</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.webkit.ss</name>
        <entities>
          <string>com.android.server.webkit.SystemInterface</string>
          <string>android.util.Base64$Coder</string>
          <string>com.android.server.webkit.WebViewUpdateServiceShellCommand</string>
          <string>com.android.server.webkit.WebViewUpdateService$BinderService</string>
          <string>com.android.server.webkit.WebViewUpdateServiceImpl$WebViewUpdater</string>
          <string>com.android.server.webkit.SystemImpl</string>
          <string>android.util.AndroidRuntimeException</string>
          <string>com.android.server.webkit.WebViewUpdateServiceImpl$WebViewUpdater$ProviderAndPackageInfo</string>
          <string>com.android.server.webkit.WebViewUpdateService$1</string>
          <string>com.android.server.webkit.WebViewUpdateService</string>
          <string>android.util.Base64</string>
          <string>com.android.server.webkit.SystemImpl$1</string>
          <string>com.android.server.webkit.SystemImpl$LazyHolder</string>
          <string>android.util.Base64$Decoder</string>
          <string>com.android.server.webkit.WebViewUpdateServiceImpl</string>
          <string>android.util.Base64$Encoder</string>
          <string>android.util.Base64OutputStream</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.hardware.camera2.ss</name>
        <entities>
          <string>android.hardware.camera2.impl.PublicKey</string>
          <string>android.hardware.camera2.CameraManager$CameraManagerGlobal$1</string>
          <string>android.hardware.camera2.CameraManager$CameraManagerGlobal$2</string>
          <string>android.hardware.camera2.CameraManager$AvailabilityCallback</string>
          <string>android.hardware.camera2.CameraManager$CameraManagerGlobal$3</string>
          <string>android.hardware.camera2.CameraManager$CameraManagerGlobal$4</string>
          <string>android.hardware.camera2.CameraManager$CameraManagerGlobal$5</string>
          <string>android.util.Range</string>
          <string>android.hardware.camera2.ICameraDeviceUser$Stub$Proxy</string>
          <string>android.hardware.camera2.CameraManager$CameraManagerGlobal</string>
          <string>android.hardware.camera2.CameraManager</string>
          <string>android.hardware.ICameraClient$Stub</string>
          <string>android.hardware.camera2.CameraManager$TorchCallback</string>
          <string>android.hardware.ICameraClient$Stub$Proxy</string>
          <string>android.hardware.ICameraService$Stub</string>
          <string>android.hardware.camera2.CaptureResult$1</string>
          <string>android.hardware.camera2.CaptureResult$2</string>
          <string>android.hardware.camera2.CameraCaptureSession</string>
          <string>android.hardware.camera2.CaptureResult$3</string>
          <string>android.hardware.ICameraService</string>
          <string>android.hardware.camera2.CameraCharacteristics</string>
          <string>android.hardware.ICameraServiceListener</string>
          <string>android.hardware.ICameraServiceListener$Stub$Proxy</string>
          <string>android.hardware.camera2.CameraDevice$StateListener</string>
          <string>android.hardware.camera2.ICameraDeviceUser$Stub</string>
          <string>android.hardware.ICameraClient</string>
          <string>android.hardware.camera2.impl.SyntheticKey</string>
          <string>android.hardware.camera2.CameraCaptureSession$CaptureListener</string>
          <string>android.hardware.camera2.CameraCaptureSession$StateListener</string>
          <string>android.hardware.camera2.CameraMetadata</string>
          <string>android.hardware.ICameraService$Stub$Proxy</string>
          <string>android.hardware.ICamera$Stub$Proxy</string>
          <string>android.hardware.camera2.CaptureResult$Key</string>
          <string>android.hardware.camera2.ICameraDeviceUser</string>
          <string>android.hardware.ICamera</string>
          <string>android.hardware.camera2.CaptureResult</string>
          <string>android.hardware.camera2.CaptureRequest$2</string>
          <string>android.hardware.ICameraServiceListener$Stub</string>
          <string>android.hardware.camera2.CaptureRequest$1</string>
          <string>android.hardware.camera2.CameraCharacteristics$2</string>
          <string>android.hardware.camera2.CameraDevice</string>
          <string>android.hardware.ICamera$Stub</string>
          <string>android.hardware.camera2.CameraCharacteristics$1</string>
          <string>android.hardware.camera2.CameraCharacteristics$4</string>
          <string>android.hardware.camera2.CameraCharacteristics$3</string>
          <string>android.hardware.camera2.CaptureRequest</string>
          <string>android.hardware.camera2.CameraCharacteristics$5</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.os.health.ss</name>
        <entities>
          <string>android.os.health.TimerStat</string>
          <string>android.os.health.HealthStatsParceler</string>
          <string>android.os.health.TimerStat$1</string>
          <string>android.os.health.HealthStatsParceler$1</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.policy.keyguard.ss</name>
        <entities>
          <string>com.android.server.policy.keyguard.KeyguardServiceDelegate$KeyguardShowDelegate</string>
          <string>com.android.internal.policy.IKeyguardExitCallback$Stub</string>
          <string>com.android.server.policy.keyguard.KeyguardServiceWrapper</string>
          <string>com.android.server.policy.keyguard.KeyguardServiceDelegate$KeyguardState</string>
          <string>com.android.internal.policy.IKeyguardExitCallback$Stub$Proxy</string>
          <string>com.android.server.policy.keyguard.KeyguardServiceDelegate$1</string>
          <string>com.android.internal.policy.IKeyguardStateCallback$Stub</string>
          <string>com.android.server.policy.keyguard.KeyguardServiceDelegate$2</string>
          <string>com.android.internal.policy.IKeyguardService$Stub$Proxy</string>
          <string>com.android.internal.policy.IKeyguardExitCallback</string>
          <string>com.android.server.policy.keyguard.KeyguardServiceDelegate$3</string>
          <string>com.android.internal.policy.IKeyguardStateCallback</string>
          <string>com.android.server.policy.keyguard.KeyguardServiceDelegate$4</string>
          <string>com.android.internal.policy.IKeyguardDrawnCallback$Stub</string>
          <string>com.android.server.policy.keyguard.KeyguardServiceDelegate$KeyguardExitDelegate</string>
          <string>com.android.internal.policy.IKeyguardStateCallback$Stub$Proxy</string>
          <string>com.android.server.policy.keyguard.KeyguardServiceDelegate</string>
          <string>com.android.internal.policy.IKeyguardDrawnCallback$Stub$Proxy</string>
          <string>com.android.internal.policy.IKeyguardService</string>
          <string>com.android.server.policy.keyguard.KeyguardStateMonitor</string>
          <string>com.android.internal.policy.IKeyguardService$Stub</string>
          <string>com.android.internal.policy.IKeyguardDrawnCallback</string>
          <string>com.android.server.policy.keyguard.KeyguardServiceDelegate$DrawnListener</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.service.media.ss</name>
        <entities>
          <string>android.service.media.MediaBrowserService</string>
          <string>android.service.media.MediaBrowserService$BrowserRoot</string>
          <string>android.service.media.CameraPrewarmService</string>
          <string>android.service.media.MediaBrowserService$ServiceBinder$1</string>
          <string>android.service.media.MediaBrowserService$ServiceBinder$3</string>
          <string>android.service.media.MediaBrowserService$ServiceBinder$2</string>
          <string>android.service.media.IMediaBrowserServiceCallbacks</string>
          <string>android.media.browse.MediaBrowserUtils</string>
          <string>android.service.media.MediaBrowserService$ServiceBinder$5</string>
          <string>android.service.media.MediaBrowserService$ServiceBinder$4</string>
          <string>android.service.media.IMediaBrowserServiceCallbacks$Stub$Proxy</string>
          <string>android.service.media.MediaBrowserService$ServiceBinder</string>
          <string>android.media.session.MediaSession$Token$1</string>
          <string>android.service.media.MediaBrowserService$ConnectionRecord</string>
          <string>android.service.media.MediaBrowserService$Result</string>
          <string>android.media.session.MediaSession$Token</string>
          <string>android.service.media.MediaBrowserService$2</string>
          <string>android.service.media.MediaBrowserService$1</string>
          <string>android.service.media.MediaBrowserService$4</string>
          <string>android.service.media.CameraPrewarmService$1</string>
          <string>android.service.media.MediaBrowserService$3</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.hardware.camera2.utils.ss</name>
        <entities>
          <string>java.lang.reflect.GenericArrayType</string>
          <string>android.hardware.camera2.utils.TypeReference$SpecializedTypeReference</string>
          <string>android.hardware.camera2.utils.CloseableLock$ScopedLock</string>
          <string>android.hardware.camera2.utils.TypeReference</string>
          <string>java.lang.reflect.TypeVariable</string>
          <string>java.lang.reflect.WildcardType</string>
          <string>android.hardware.camera2.utils.LongParcelable$1</string>
          <string>android.hardware.camera2.utils.SubmitInfo</string>
          <string>android.hardware.camera2.utils.TypeReference$SpecializedBaseTypeReference</string>
          <string>android.hardware.camera2.utils.CloseableLock$1</string>
          <string>android.hardware.camera2.utils.CloseableLock</string>
          <string>android.hardware.camera2.utils.SubmitInfo$1</string>
          <string>java.lang.reflect.ParameterizedType</string>
          <string>java.lang.reflect.Type</string>
          <string>android.hardware.camera2.utils.TaskDrainer</string>
          <string>android.hardware.camera2.utils.LongParcelable</string>
          <string>android.hardware.camera2.utils.TaskDrainer$1</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.media.ss</name>
        <entities>
          <string>com.android.server.media.MediaRouterService</string>
          <string>com.android.server.media.MediaSessionRecord$MessageHandler</string>
          <string>android.media.session.PlaybackState$CustomAction</string>
          <string>com.android.server.media.MediaSessionService$UserRecord</string>
          <string>com.android.server.media.MediaSessionRecord$SessionCb</string>
          <string>android.media.session.PlaybackState$CustomAction$Builder</string>
          <string>android.media.IRemoteVolumeController$Stub$Proxy</string>
          <string>android.media.session.IActiveSessionsListener</string>
          <string>android.media.IMediaRouterClient$Stub</string>
          <string>android.media.RemoteDisplayState$RemoteDisplayInfo$1</string>
          <string>com.android.server.media.MediaSessionService$SessionsListenerRecord</string>
          <string>android.media.session.ISessionController$Stub$Proxy</string>
          <string>com.android.server.media.MediaSessionService</string>
          <string>com.android.server.media.MediaRouterService$UserHandler$RouteRecord</string>
          <string>android.media.IMediaRouterClient$Stub$Proxy</string>
          <string>com.android.server.media.RemoteDisplayProviderWatcher$Callback</string>
          <string>com.android.server.media.MediaSessionRecord$1</string>
          <string>android.media.session.ISessionCallback$Stub</string>
          <string>android.media.session.IActiveSessionsListener$Stub$Proxy</string>
          <string>com.android.server.media.MediaSessionRecord$2</string>
          <string>com.android.server.media.MediaSessionService$MessageHandler</string>
          <string>android.media.IRemoteVolumeController</string>
          <string>android.media.session.ISessionCallback$Stub$Proxy</string>
          <string>android.media.IRemoteDisplayCallback$Stub$Proxy</string>
          <string>com.android.server.media.MediaSessionRecord$SessionStub</string>
          <string>android.media.session.ISessionController</string>
          <string>android.media.session.ISessionControllerCallback</string>
          <string>com.android.server.media.RemoteDisplayProviderWatcher$2</string>
          <string>android.app.PendingIntent$OnFinished</string>
          <string>com.android.server.media.RemoteDisplayProviderWatcher$1</string>
          <string>android.media.session.ISessionController$Stub</string>
          <string>com.android.server.media.MediaSessionStack</string>
          <string>android.media.RemoteDisplayState$RemoteDisplayInfo</string>
          <string>com.android.server.media.MediaSessionRecord</string>
          <string>com.android.server.media.MediaRouterService$1</string>
          <string>android.media.session.PlaybackState$Builder</string>
          <string>android.media.IRemoteDisplayProvider$Stub</string>
          <string>com.android.server.media.RemoteDisplayProviderProxy</string>
          <string>com.android.server.media.MediaRouterService$UserRecord</string>
          <string>android.media.MediaRouterClientState$RouteInfo$1</string>
          <string>com.android.server.media.MediaSessionService$SessionManagerImpl$KeyEventWakeLockReceiver</string>
          <string>com.android.server.media.MediaResourceMonitorService</string>
          <string>com.android.server.media.RemoteDisplayProviderWatcher</string>
          <string>com.android.server.media.MediaRouterService$UserHandler$ProviderRecord</string>
          <string>com.android.server.media.MediaSessionService$SessionManagerImpl</string>
          <string>com.android.server.media.RemoteDisplayProviderProxy$Connection</string>
          <string>com.android.server.media.RemoteDisplayProviderProxy$Callback</string>
          <string>android.media.IRemoteDisplayCallback$Stub</string>
          <string>com.android.server.media.MediaSessionRecord$ControllerStub</string>
          <string>com.android.server.media.MediaRouterService$UserHandler</string>
          <string>android.media.session.PlaybackState$CustomAction$1</string>
          <string>com.android.server.media.RemoteDisplayProviderProxy$ProviderCallback</string>
          <string>android.media.MediaRouterClientState$RouteInfo</string>
          <string>android.media.IRemoteDisplayProvider$Stub$Proxy</string>
          <string>android.media.IRemoteVolumeController$Stub</string>
          <string>com.android.server.media.MediaRouterService$UserRecord$1</string>
          <string>android.media.session.ISession$Stub</string>
          <string>com.android.server.media.MediaSessionService$SettingsObserver</string>
          <string>android.media.session.ISessionCallback</string>
          <string>android.media.IMediaRouterService</string>
          <string>android.media.session.ISessionControllerCallback$Stub$Proxy</string>
          <string>android.media.IMediaRouterService$Stub$Proxy</string>
          <string>android.media.session.ISession$Stub$Proxy</string>
          <string>android.media.IMediaRouterClient</string>
          <string>android.media.IRemoteDisplayProvider</string>
          <string>com.android.server.media.MediaSessionService$SessionManagerImpl$1</string>
          <string>com.android.server.media.RemoteDisplayProviderProxy$Connection$1</string>
          <string>android.media.IRemoteDisplayCallback</string>
          <string>com.android.server.media.RemoteDisplayProviderProxy$Connection$2</string>
          <string>com.android.server.media.RemoteDisplayProviderProxy$1</string>
          <string>com.android.server.media.MediaRouterService$ClientRecord</string>
          <string>android.media.IMediaRouterService$Stub</string>
          <string>com.android.server.media.RemoteDisplayProviderProxy$Connection$3</string>
          <string>android.media.session.ISession</string>
          <string>com.android.server.media.MediaResourceMonitorService$MediaResourceMonitorImpl</string>
          <string>android.media.session.ISessionControllerCallback$Stub</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.location.ss</name>
        <entities>
          <string>android.location.Address</string>
          <string>android.location.LocationManager$GnssStatusListenerTransport$GnssHandler</string>
          <string>android.location.LocationManager$GnssStatusListenerTransport</string>
          <string>android.location.GnssMeasurementsEvent</string>
          <string>android.location.Country$1</string>
          <string>android.location.GnssMeasurement</string>
          <string>android.location.GnssMeasurementsEvent$1</string>
          <string>android.location.LocationListener</string>
          <string>android.location.GpsNavigationMessage</string>
          <string>android.location.GnssMeasurementsEvent$Callback</string>
          <string>android.location.LocationRequest$1</string>
          <string>android.location.GnssStatusCallback</string>
          <string>android.location.FusedBatchOptions$BatchFlags</string>
          <string>android.location.GnssClock</string>
          <string>android.location.Geofence</string>
          <string>android.location.GnssClock$1</string>
          <string>android.location.LocalListenerHelper</string>
          <string>android.location.GnssStatus$Callback</string>
          <string>android.location.GnssMeasurement$1</string>
          <string>android.location.GpsMeasurementsEvent</string>
          <string>android.location.GpsMeasurementsEvent$1</string>
          <string>android.location.GnssNavigationMessageCallbackTransport$ListenerTransport$1</string>
          <string>android.location.GpsStatus$NmeaListener</string>
          <string>android.location.GnssNavigationMessageCallbackTransport$ListenerTransport$2</string>
          <string>android.location.GnssMeasurementCallbackTransport$ListenerTransport$2</string>
          <string>android.location.LocationManager$GnssStatusListenerTransport$3</string>
          <string>android.location.LocationManager$GnssStatusListenerTransport$2</string>
          <string>android.location.Address$1</string>
          <string>android.location.LocationManager$GnssStatusListenerTransport$4</string>
          <string>android.location.LocationManager$GnssStatusListenerTransport$1</string>
          <string>android.location.LocationRequest</string>
          <string>android.location.GnssMeasurementCallbackTransport$ListenerTransport$1</string>
          <string>android.location.GpsNavigationMessageEvent$1</string>
          <string>android.location.GnssMeasurementCallbackTransport$ListenerTransport</string>
          <string>android.location.LocalListenerHelper$ListenerOperation</string>
          <string>android.location.Location$2</string>
          <string>android.location.GnssNavigationMessageCallbackTransport</string>
          <string>android.location.GnssNavigationMessage$Callback</string>
          <string>android.location.Location$1</string>
          <string>android.location.GnssNavigationMessage</string>
          <string>android.location.Location</string>
          <string>android.location.LocationManager</string>
          <string>android.location.LocationManager$ListenerTransport</string>
          <string>android.location.GpsStatus$SatelliteIterator</string>
          <string>android.location.GnssNavigationMessageEvent</string>
          <string>android.location.GpsMeasurementsEvent$Listener</string>
          <string>android.location.Criteria</string>
          <string>android.location.GeocoderParams$1</string>
          <string>android.location.GnssNavigationMessageEvent$1</string>
          <string>android.location.GpsClock</string>
          <string>android.location.GnssNavigationMessageEvent$Callback</string>
          <string>android.location.LocationManager$1</string>
          <string>android.location.OnNmeaMessageListener</string>
          <string>android.location.Location$BearingDistanceCache</string>
          <string>android.location.GnssStatus</string>
          <string>android.location.GpsClock$1</string>
          <string>android.location.GpsMeasurement$1</string>
          <string>android.location.FusedBatchOptions</string>
          <string>android.location.GpsStatus$1</string>
          <string>android.location.GnssNmeaListener</string>
          <string>android.location.LocalListenerHelper$1</string>
          <string>android.location.GnssMeasurementCallbackTransport</string>
          <string>android.location.GpsNavigationMessageEvent</string>
          <string>android.location.CountryDetector</string>
          <string>android.location.GpsMeasurement</string>
          <string>android.location.Criteria$1</string>
          <string>android.location.Geofence$1</string>
          <string>android.location.GpsNavigationMessageEvent$Listener</string>
          <string>android.location.GpsSatellite</string>
          <string>android.location.Country</string>
          <string>java.text.DecimalFormat</string>
          <string>android.location.GpsStatus$Listener</string>
          <string>android.location.GeocoderParams</string>
          <string>android.location.GpsNavigationMessage$1</string>
          <string>android.location.FusedBatchOptions$1</string>
          <string>android.location.GpsStatus</string>
          <string>android.location.LocationManager$GnssStatusListenerTransport$Nmea</string>
          <string>android.location.GnssNavigationMessageCallbackTransport$ListenerTransport</string>
          <string>android.location.LocationManager$ListenerTransport$1</string>
          <string>android.location.CountryDetector$ListenerTransport</string>
          <string>android.location.LocationManager$ListenerTransport$2</string>
          <string>android.location.CountryDetector$ListenerTransport$1</string>
          <string>android.location.GnssNavigationMessage$1</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.restrictions.ss</name>
        <entities>
          <string>com.android.server.restrictions.RestrictionsManagerService$RestrictionsManagerImpl</string>
          <string>com.android.server.restrictions.RestrictionsManagerService</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.os.ss</name>
        <entities>
          <string>android.os.Bundle</string>
          <string>android.os.UpdateEngine$ErrorCodeConstants</string>
          <string>android.os.IProcessInfoService$Stub</string>
          <string>android.os.Parcelable$ClassLoaderCreator</string>
          <string>android.os.RemoteCallback</string>
          <string>android.os.AsyncTask$WorkerRunnable</string>
          <string>android.os.TokenWatcher</string>
          <string>android.os.CommonClock$1</string>
          <string>com.android.internal.os.IResultReceiver</string>
          <string>android.os.Handler</string>
          <string>java.lang.ArithmeticException</string>
          <string>android.os.FileUtils$NoImagePreloadHolder</string>
          <string>android.os.StrictMode$StrictModeDiskReadViolation</string>
          <string>android.os.Handler$BlockingRunnable</string>
          <string>android.util.Singleton</string>
          <string>android.os.UEventObserver$UEventThread</string>
          <string>android.os.BatteryProperty</string>
          <string>android.os.IUpdateEngine</string>
          <string>android.os.IMessenger$Stub$Proxy</string>
          <string>android.os.SystemService</string>
          <string>android.os.BadParcelableException</string>
          <string>android.os.MessageQueue$FileDescriptorRecord</string>
          <string>android.os.StrictMode$StrictModeNetworkViolation</string>
          <string>android.os.AsyncResult</string>
          <string>android.os.StrictMode$StrictModeResourceMismatchViolation</string>
          <string>android.os.StrictMode$ThreadSpanState</string>
          <string>java.net.DatagramSocket</string>
          <string>android.os.PerformanceCollector$PerformanceResultsWriter</string>
          <string>android.os.StrictMode$StrictModeDiskWriteViolation</string>
          <string>android.os.TransactionTracker</string>
          <string>android.os.ServiceManager</string>
          <string>android.os.FileUtils$1</string>
          <string>android.os.MessageQueue$OnFileDescriptorEventListener</string>
          <string>android.os.StrictMode$LogStackTrace</string>
          <string>android.os.DeadObjectException</string>
          <string>java.util.concurrent.ExecutionException</string>
          <string>android.os.UpdateEngine$1$2</string>
          <string>android.os.UpdateEngine$1$1</string>
          <string>android.os.ResultReceiver$MyRunnable</string>
          <string>android.os.LocaleList$1</string>
          <string>com.android.internal.util.XmlUtils$ReadMapCallback</string>
          <string>android.os.AsyncTask$1</string>
          <string>android.os.FileObserver</string>
          <string>android.os.AsyncTask$3</string>
          <string>android.os.AsyncTask$2</string>
          <string>android.os.StrictMode$ViolationInfo</string>
          <string>android.os.Trace</string>
          <string>java.util.zip.CheckedInputStream</string>
          <string>android.os.IServiceManager</string>
          <string>android.os.AsyncTask$SerialExecutor$1</string>
          <string>android.os.IPermissionController</string>
          <string>android.os.StrictMode$InstanceTracker</string>
          <string>android.os.PatternMatcher$1</string>
          <string>android.os.ISchedulingPolicyService$Stub</string>
          <string>android.os.PersistableBundle</string>
          <string>android.os.Debug</string>
          <string>android.os.MemoryFile$MemoryOutputStream</string>
          <string>java.lang.ThreadLocal</string>
          <string>android.os.IProcessInfoService</string>
          <string>android.os.AsyncTask</string>
          <string>android.os.PersistableBundle$MyReadMapCallback</string>
          <string>android.os.CommonClock$OnTimelineChangedListener</string>
          <string>android.os.RemoteCallbackList</string>
          <string>android.os.Binder$1</string>
          <string>android.os.PerformanceCollector</string>
          <string>android.os.Parcel$2</string>
          <string>android.os.Parcel$1</string>
          <string>android.os.ParcelFileDescriptor$OnCloseListener</string>
          <string>android.os.CountDownTimer$1</string>
          <string>android.os.ISchedulingPolicyService$Stub$Proxy</string>
          <string>android.os.Messenger$1</string>
          <string>android.os.StrictMode$1</string>
          <string>android.os.StrictMode$2</string>
          <string>android.os.StrictMode$3</string>
          <string>android.os.StrictMode$4</string>
          <string>android.os.StrictMode$5</string>
          <string>android.os.StrictMode$6</string>
          <string>java.util.concurrent.CompletableFuture</string>
          <string>android.os.StrictMode$7</string>
          <string>android.os.StrictMode$8</string>
          <string>libcore.io.Memory</string>
          <string>android.os.StrictMode$9</string>
          <string>android.os.Debug$DebugProperty</string>
          <string>android.os.Binder</string>
          <string>android.os.ResultReceiver$1</string>
          <string>android.os.ParcelableParcel</string>
          <string>android.os.Build</string>
          <string>dalvik.system.BlockGuard</string>
          <string>android.os.ISchedulingPolicyService</string>
          <string>android.os.StrictMode$VmPolicy$Builder</string>
          <string>android.os.StrictMode$StrictModeViolation</string>
          <string>android.os.ParcelUuid</string>
          <string>android.os.SynchronousResultReceiver</string>
          <string>android.os.Registrant</string>
          <string>android.os.StatFs</string>
          <string>android.os.CountDownTimer</string>
          <string>android.os.FileObserver$ObserverThread</string>
          <string>android.os.ParcelUuid$1</string>
          <string>android.os.BatteryStats</string>
          <string>android.os.CommonClock</string>
          <string>android.os.FileUriExposedException</string>
          <string>android.os.ParcelFileDescriptor</string>
          <string>android.os.Handler$MessengerImpl</string>
          <string>android.os.BatteryStats$TimerEntry</string>
          <string>android.os.NetworkOnMainThreadException</string>
          <string>android.os.Process</string>
          <string>android.os.BatteryProperties</string>
          <string>android.os.AsyncTask$SerialExecutor</string>
          <string>dalvik.bytecode.OpcodeInfo</string>
          <string>android.os.StrictMode$ThreadPolicy$Builder</string>
          <string>android.os.CommonTimeUtils</string>
          <string>android.os.CommonClock$TimelineChangedListener</string>
          <string>android.os.BatteryProperty$1</string>
          <string>android.os.IUpdateEngineCallback$Stub</string>
          <string>android.os.IMessenger$Stub</string>
          <string>android.os.StrictMode$ThreadPolicy</string>
          <string>android.os.BatteryProperties$1</string>
          <string>android.os.ParcelFileDescriptor$Status</string>
          <string>android.os.BatteryStats$BitDescription</string>
          <string>android.os.RegistrantList</string>
          <string>android.os.Message</string>
          <string>android.os.ResultReceiver$MyResultReceiver</string>
          <string>android.os.StrictMode$AndroidBlockGuardPolicy$1</string>
          <string>android.os.RemoteCallback$OnResultListener</string>
          <string>android.os.BaseBundle</string>
          <string>android.os.CpuUsageInfo$1</string>
          <string>android.os.RecoverySystem$ProgressListener</string>
          <string>android.os.PersistableBundle$1</string>
          <string>java.util.concurrent.FutureTask</string>
          <string>android.os.RecoverySystem$2$1</string>
          <string>android.os.MemoryFile$MemoryInputStream</string>
          <string>android.os.Parcel</string>
          <string>android.os.BaseBundle$NoImagePreloadHolder</string>
          <string>android.os.StrictMode$VmPolicy</string>
          <string>android.os.UserHandle</string>
          <string>android.view.IWindowManager</string>
          <string>com.android.internal.os.IResultReceiver$Stub$Proxy</string>
          <string>java.io.ObjectOutputStream</string>
          <string>android.os.RemoteCallbackList$Callback</string>
          <string>android.os.IMessenger</string>
          <string>android.os.AsyncTask$InternalHandler</string>
          <string>android.os.IProcessInfoService$Stub$Proxy</string>
          <string>android.os.AsyncTask$Status</string>
          <string>java.util.concurrent.Executor</string>
          <string>android.os.ServiceManagerProxy</string>
          <string>android.os.ServiceManagerNative</string>
          <string>android.os.WorkSource</string>
          <string>android.os.CommonTimeConfig$1</string>
          <string>android.os.Message$1</string>
          <string>android.os.RemoteCallback$1</string>
          <string>android.os.RemoteCallback$2</string>
          <string>dalvik.system.CloseGuard$Reporter</string>
          <string>android.os.RemoteCallback$3</string>
          <string>android.system.StructStatVfs</string>
          <string>android.os.ResultReceiver</string>
          <string>android.os.UpdateEngine$1</string>
          <string>android.os.IUpdateEngineCallback$Stub$Proxy</string>
          <string>android.os.IUpdateEngine$Stub</string>
          <string>android.os.IPermissionController$Stub$Proxy</string>
          <string>android.os.IPermissionController$Stub</string>
          <string>android.os.StrictMode$InstanceCountViolation</string>
          <string>android.os.SystemService$1</string>
          <string>android.os.Bundle$1</string>
          <string>android.os.Build$VERSION_CODES</string>
          <string>android.os.CancellationSignal</string>
          <string>dalvik.system.BlockGuard$BlockGuardPolicyException</string>
          <string>android.os.MemoryFile</string>
          <string>android.os.TokenWatcher$1</string>
          <string>android.os.AsyncTask$AsyncTaskResult</string>
          <string>android.os.Broadcaster$Registration</string>
          <string>android.os.UEventObserver$UEvent</string>
          <string>android.os.MessageQueue</string>
          <string>android.os.Broadcaster</string>
          <string>android.os.PatternMatcher</string>
          <string>android.os.CommonClock$OnServerDiedListener</string>
          <string>android.os.BatteryStats$1</string>
          <string>android.os.Trace$1</string>
          <string>android.os.CommonTimeConfig</string>
          <string>android.os.UpdateEngineCallback</string>
          <string>android.os.UserHandle$1</string>
          <string>java.util.concurrent.ThreadPoolExecutor</string>
          <string>android.os.CpuUsageInfo</string>
          <string>java.io.ObjectStreamClass</string>
          <string>android.os.ParcelableParcel$1</string>
          <string>android.os.RecoverySystem</string>
          <string>android.os.LocaleList</string>
          <string>java.util.zip.Checksum</string>
          <string>android.os.StrictMode$AndroidCloseGuardReporter</string>
          <string>com.android.internal.os.IResultReceiver$Stub</string>
          <string>android.os.IUpdateEngineCallback</string>
          <string>android.os.ZygoteStartFailedEx</string>
          <string>android.os.StrictMode$Span</string>
          <string>android.os.ParcelFileDescriptor$2</string>
          <string>android.os.ParcelFileDescriptor$1</string>
          <string>android.os.StrictMode$AndroidBlockGuardPolicy</string>
          <string>android.os.Messenger</string>
          <string>dalvik.system.BlockGuard$Policy</string>
          <string>android.os.RecoverySystem$3</string>
          <string>android.os.SystemService$State</string>
          <string>android.os.UpdateEngine$UpdateStatusConstants</string>
          <string>android.os.RecoverySystem$1</string>
          <string>android.os.RecoverySystem$2</string>
          <string>android.os.FileUtils</string>
          <string>android.os.StrictMode$StrictModeCustomViolation</string>
          <string>android.os.WorkSource$1</string>
          <string>android.os.StrictMode</string>
          <string>android.os.Debug$InstructionCount</string>
          <string>android.os.CancellationSignal$Transport</string>
          <string>android.os.TokenWatcher$Death</string>
          <string>android.os.UEventObserver</string>
          <string>android.os.UpdateEngine</string>
          <string>dalvik.system.VMDebug</string>
          <string>android.os.IUpdateEngine$Stub$Proxy</string>
          <string>android.os.ParcelFileDescriptor$FileDescriptorDetachedException</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.backup.ss</name>
        <entities>
          <string>com.android.server.backup.BackupManagerService$PerformAdbBackupTask</string>
          <string>java.io.BufferedInputStream</string>
          <string>android.app.backup.FullBackup</string>
          <string>javax.crypto.spec.SecretKeySpec</string>
          <string>android.app.IBackupAgent$Stub</string>
          <string>com.android.internal.backup.IBackupTransport$Stub$Proxy</string>
          <string>com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreInstallObserver</string>
          <string>java.io.DataOutputStream</string>
          <string>java.lang.Long</string>
          <string>com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask</string>
          <string>com.android.server.backup.BackupManagerService$ActiveRestoreSession</string>
          <string>java.lang.Thread</string>
          <string>com.android.server.backup.BackupManagerService$FullBackupEngine</string>
          <string>com.android.server.backup.BackupManagerService$FileMetadata</string>
          <string>com.android.server.backup.BackupManagerService$Lifecycle</string>
          <string>com.android.server.backup.BackupManagerService$FullRestoreEngine$RestoreFileRunnable</string>
          <string>android.app.backup.IRestoreSession$Stub$Proxy</string>
          <string>com.android.server.backup.BackupManagerService$BackupRestoreTask</string>
          <string>com.android.server.backup.PackageManagerBackupAgent$Metadata</string>
          <string>com.android.server.backup.BackupManagerService$ActiveRestoreSession$EndRestoreRunnable</string>
          <string>com.android.internal.backup.IObbBackupService</string>
          <string>com.android.server.backup.BackupUtils</string>
          <string>java.lang.Exception</string>
          <string>java.util.concurrent.CountDownLatch</string>
          <string>android.app.backup.BackupDataOutput</string>
          <string>com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask$SinglePackageBackupRunner</string>
          <string>android.app.backup.FullBackupAgent</string>
          <string>android.app.backup.BackupHelper</string>
          <string>com.android.server.backup.ShortcutBackupHelper</string>
          <string>com.android.server.backup.SystemBackupAgent</string>
          <string>com.android.server.backup.UsageStatsBackupHelper</string>
          <string>javax.crypto.SecretKey</string>
          <string>com.android.server.backup.BackupManagerService$Operation</string>
          <string>android.content.pm.PackageManager$LegacyPackageInstallObserver</string>
          <string>com.android.server.backup.BackupManagerService$5</string>
          <string>android.content.pm.MacAuthenticatedInputStream</string>
          <string>com.android.server.backup.BackupManagerService$BackupState</string>
          <string>android.content.pm.PackageManager$NameNotFoundException</string>
          <string>com.android.server.backup.BackupManagerService$PerformClearTask</string>
          <string>com.android.server.backup.BackupManagerService$UnifiedRestoreState</string>
          <string>com.android.server.backup.BackupManagerService$RestorePolicy</string>
          <string>com.android.server.backup.BackupManagerService$4</string>
          <string>com.android.server.backup.BackupManagerService$3</string>
          <string>java.util.zip.DeflaterOutputStream</string>
          <string>com.android.server.backup.BackupManagerService$2</string>
          <string>android.app.backup.IRestoreSession</string>
          <string>com.android.server.backup.BackupManagerService$1</string>
          <string>android.app.backup.BackupDataInputStream</string>
          <string>javax.crypto.SecretKeyFactory</string>
          <string>javax.crypto.spec.IvParameterSpec</string>
          <string>android.app.job.JobInfo$TriggerContentUri$1</string>
          <string>com.android.server.backup.BackupManagerService$TransportConnection</string>
          <string>javax.crypto.CipherOutputStream</string>
          <string>android.app.backup.IBackupManager</string>
          <string>com.android.internal.backup.IObbBackupService$Stub</string>
          <string>com.android.server.backup.BackupManagerService$BackupRequest</string>
          <string>android.app.backup.IBackupManager$Stub</string>
          <string>com.android.server.backup.BackupManagerService$FullRestoreEngine</string>
          <string>android.util.EventLog$Event</string>
          <string>android.util.EventLog</string>
          <string>android.app.backup.FileBackupHelper</string>
          <string>android.app.job.JobInfo$TriggerContentUri</string>
          <string>android.app.backup.BlobBackupHelper</string>
          <string>java.io.FileOutputStream</string>
          <string>com.android.server.backup.FullBackupJob</string>
          <string>java.io.IOException</string>
          <string>android.app.IBackupAgent</string>
          <string>android.os.PowerManager$WakeLock</string>
          <string>com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreFinishedRunnable</string>
          <string>android.app.backup.IBackupObserver$Stub</string>
          <string>com.android.server.backup.BackupManagerService</string>
          <string>com.android.server.backup.BackupManagerService$AdbRestoreFinishedLatch</string>
          <string>com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask$StreamFeederThread</string>
          <string>com.android.server.backup.BackupManagerService$ClearDataObserver</string>
          <string>android.app.job.JobInfo$Builder</string>
          <string>com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask</string>
          <string>android.app.backup.FullBackup$BackupScheme</string>
          <string>com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreFileRunnable</string>
          <string>com.android.server.backup.BackupManagerService$RestoreGetSetsParams</string>
          <string>android.content.pm.PackageManager</string>
          <string>com.android.server.backup.BackupManagerService$ClearRetryParams</string>
          <string>android.app.backup.IFullBackupRestoreObserver$Stub$Proxy</string>
          <string>java.util.Random</string>
          <string>com.android.server.backup.BackupManagerService$FullParams</string>
          <string>android.app.backup.BackupAgentHelper</string>
          <string>android.app.backup.IRestoreObserver$Stub$Proxy</string>
          <string>com.android.server.backup.KeyValueBackupJob</string>
          <string>java.lang.NoSuchFieldError</string>
          <string>com.android.server.backup.BackupManagerService$FullBackupObbConnection</string>
          <string>java.io.ByteArrayInputStream</string>
          <string>com.android.server.backup.PreferredActivityBackupHelper</string>
          <string>com.android.server.backup.BackupManagerService$PerformBackupTask</string>
          <string>com.android.server.backup.PermissionBackupHelper</string>
          <string>com.android.server.backup.BackupManagerService$FullRestoreEngine$RestoreInstallObserver</string>
          <string>android.app.backup.IBackupObserver</string>
          <string>android.app.backup.IRestoreSession$Stub</string>
          <string>android.app.backup.IBackupObserver$Stub$Proxy</string>
          <string>android.app.backup.SharedPreferencesBackupHelper</string>
          <string>com.android.server.backup.BackupManagerService$PerformAdbRestoreTask$RestoreDeleteObserver</string>
          <string>com.android.server.backup.BackupManagerService$FullBackupPreflight</string>
          <string>android.util.AndroidException</string>
          <string>javax.crypto.IllegalBlockSizeException</string>
          <string>com.android.server.backup.BackupManagerService$RestoreEngine</string>
          <string>java.util.zip.Deflater</string>
          <string>java.io.EOFException</string>
          <string>com.android.server.backup.PackageManagerBackupAgent</string>
          <string>com.android.server.backup.BackupManagerService$PerformInitializeTask</string>
          <string>com.android.server.AppWidgetBackupBridge</string>
          <string>java.security.Key</string>
          <string>com.android.server.backup.AccountSyncSettingsBackupHelper</string>
          <string>com.android.server.backup.BackupManagerService$PerformAdbRestoreTask</string>
          <string>android.app.backup.WallpaperBackupHelper</string>
          <string>com.android.server.backup.BackupManagerService$BackupParams</string>
          <string>android.app.backup.AbsoluteFileBackupHelper</string>
          <string>android.util.StringBuilderPrinter</string>
          <string>android.os.SELinux</string>
          <string>com.android.server.backup.BackupManagerService$FullRestoreEngine$RestoreDeleteObserver</string>
          <string>java.io.DataInputStream</string>
          <string>android.app.backup.IBackupManager$Stub$Proxy</string>
          <string>com.android.server.backup.Trampoline</string>
          <string>com.android.server.backup.BackupManagerService$ClearParams</string>
          <string>com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask$SinglePackageBackupPreflight</string>
          <string>java.util.zip.InflaterInputStream</string>
          <string>com.android.internal.backup.IObbBackupService$Stub$Proxy</string>
          <string>android.app.backup.IFullBackupRestoreObserver</string>
          <string>java.util.concurrent.atomic.AtomicBoolean</string>
          <string>com.android.server.backup.BackupManagerService$FullBackupEntry</string>
          <string>android.app.backup.IRestoreObserver$Stub</string>
          <string>android.app.admin.SecurityLogTags</string>
          <string>javax.crypto.Cipher</string>
          <string>com.android.server.backup.BackupManagerService$RunInitializeReceiver</string>
          <string>android.util.Slog</string>
          <string>java.util.HashSet</string>
          <string>javax.crypto.CipherInputStream</string>
          <string>com.android.server.backup.BackupManagerService$RunBackupReceiver</string>
          <string>javax.crypto.NoSuchPaddingException</string>
          <string>javax.crypto.spec.PBEKeySpec</string>
          <string>com.android.server.backup.BackupManagerService$PerformUnifiedRestoreTask$EngineThread</string>
          <string>com.android.server.backup.BackupManagerService$FullRestoreParams</string>
          <string>com.android.server.backup.BackupManagerService$FullBackupEngine$FullBackupRunner</string>
          <string>java.io.OutputStream</string>
          <string>android.app.backup.FileBackupHelperBase</string>
          <string>com.android.server.backup.BackupManagerService$FullBackupTask</string>
          <string>com.android.server.backup.NotificationBackupHelper</string>
          <string>com.android.server.backup.BackupManagerService$BackupHandler</string>
          <string>android.app.IBackupAgent$Stub$Proxy</string>
          <string>com.android.server.backup.BackupManagerService$ProvisionedObserver</string>
          <string>com.android.server.backup.BackupManagerService$FullBackupParams</string>
          <string>java.io.FileInputStream</string>
          <string>java.util.concurrent.TimeUnit</string>
          <string>android.app.backup.IRestoreObserver</string>
          <string>javax.crypto.BadPaddingException</string>
          <string>java.lang.InterruptedException</string>
          <string>com.android.internal.backup.IBackupTransport</string>
          <string>com.android.internal.backup.IBackupTransport$Stub</string>
          <string>android.app.backup.IFullBackupRestoreObserver$Stub</string>
          <string>java.io.FileDescriptor</string>
          <string>com.android.server.backup.BackupManagerService$RestoreParams</string>
          <string>android.webkit.EventLogTags</string>
          <string>java.io.InputStream</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.animation.ss</name>
        <entities>
          <string>android.animation.Keyframe$ObjectKeyframe</string>
          <string>android.animation.AnimationHandler$AnimationFrameCallbackProvider</string>
          <string>android.animation.Animator</string>
          <string>android.animation.Keyframe$FloatKeyframe</string>
          <string>android.animation.BidirectionalTypeConverter</string>
          <string>android.animation.PathKeyframes$IntKeyframesBase</string>
          <string>android.animation.PropertyValuesHolder$1</string>
          <string>android.animation.TypeEvaluator</string>
          <string>android.animation.StateListAnimator$Tuple</string>
          <string>android.animation.LayoutTransition$1</string>
          <string>android.animation.FloatEvaluator</string>
          <string>android.animation.LayoutTransition</string>
          <string>android.animation.LayoutTransition$2</string>
          <string>android.animation.LayoutTransition$3</string>
          <string>android.animation.PropertyValuesHolder</string>
          <string>android.animation.StateListAnimator</string>
          <string>android.animation.IntKeyframeSet</string>
          <string>android.animation.LayoutTransition$4</string>
          <string>android.animation.LayoutTransition$5</string>
          <string>android.animation.PropertyValuesHolder$FloatPropertyValuesHolder</string>
          <string>android.animation.PropertyValuesHolder$MultiIntValuesHolder</string>
          <string>android.animation.PropertyValuesHolder$PropertyValues$DataSource</string>
          <string>android.animation.IntEvaluator</string>
          <string>java.lang.IllegalAccessException</string>
          <string>android.animation.PropertyValuesHolder$PointFToIntArray</string>
          <string>android.animation.FloatKeyframeSet</string>
          <string>android.animation.TypeConverter</string>
          <string>android.view.View$OnLayoutChangeListener</string>
          <string>android.animation.AnimationHandler</string>
          <string>android.animation.PathKeyframes</string>
          <string>android.animation.TimeAnimator</string>
          <string>android.animation.LayoutTransition$TransitionListener</string>
          <string>android.util.PathParser$PathData</string>
          <string>android.animation.LayoutTransition$CleanupCallback</string>
          <string>android.animation.AnimatorInflater$PathDataEvaluator</string>
          <string>android.animation.Keyframes</string>
          <string>java.util.LinkedHashMap</string>
          <string>android.animation.Animator$AnimatorConstantState</string>
          <string>android.animation.PathKeyframes$1</string>
          <string>android.animation.PathKeyframes$2</string>
          <string>android.animation.Keyframe</string>
          <string>android.animation.PathKeyframes$3</string>
          <string>android.animation.StateListAnimator$1</string>
          <string>android.animation.PathKeyframes$4</string>
          <string>android.animation.FloatArrayEvaluator</string>
          <string>android.util.PathParser</string>
          <string>android.animation.AnimatorSet</string>
          <string>android.animation.PathKeyframes$FloatKeyframesBase</string>
          <string>android.animation.PropertyValuesHolder$PropertyValues</string>
          <string>java.lang.Number</string>
          <string>android.animation.AnimationHandler$MyFrameCallbackProvider</string>
          <string>android.animation.StateListAnimator$StateListAnimatorConstantState</string>
          <string>android.animation.PropertyValuesHolder$PointFToFloatArray</string>
          <string>android.animation.TimeAnimator$TimeListener</string>
          <string>android.animation.BidirectionalTypeConverter$InvertedConverter</string>
          <string>java.lang.NoSuchMethodError</string>
          <string>android.animation.AnimationHandler$AnimationFrameCallback</string>
          <string>android.animation.Keyframes$FloatKeyframes</string>
          <string>android.animation.KeyframeSet</string>
          <string>android.animation.PropertyValuesHolder$IntPropertyValuesHolder</string>
          <string>android.animation.AnimationHandler$1</string>
          <string>android.animation.AnimationHandler$2</string>
          <string>android.animation.Keyframe$IntKeyframe</string>
          <string>android.animation.AnimatorInflater</string>
          <string>android.animation.PropertyValuesHolder$MultiFloatValuesHolder</string>
          <string>android.animation.AnimatorSet$AnimatorSetListener</string>
          <string>android.animation.IntArrayEvaluator</string>
          <string>android.animation.Keyframes$IntKeyframes</string>
          <string>android.animation.PathKeyframes$SimpleKeyframes</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.am.ss</name>
        <entities>
          <string>com.android.server.am.ActivityManagerService$MemBinder</string>
          <string>android.app.IUiAutomationConnection$Stub$Proxy</string>
          <string>com.android.server.am.CompatModePackages</string>
          <string>android.content.IIntentReceiver$Stub</string>
          <string>com.android.server.am.UnsupportedDisplaySizeDialog</string>
          <string>android.os.DropBoxManager$Entry$1</string>
          <string>com.android.server.am.BroadcastQueue$BroadcastHandler</string>
          <string>com.android.server.am.UriPermissionOwner</string>
          <string>android.app.IApplicationThread</string>
          <string>android.app.ActivityManagerInternal</string>
          <string>android.system.StructUcred</string>
          <string>android.service.voice.IVoiceInteractionSession</string>
          <string>android.content.IIntentReceiver</string>
          <string>android.app.IActivityContainer</string>
          <string>com.android.server.am.ActivityManagerService$10</string>
          <string>com.android.server.am.ActivityManagerService$PendingAssistExtras</string>
          <string>com.android.internal.app.IVoiceInteractor</string>
          <string>com.android.server.am.ActivityManagerService$12</string>
          <string>com.android.server.am.ActivityManagerService$11</string>
          <string>android.os.SynchronousResultReceiver$Result</string>
          <string>com.android.server.am.ActivityManagerService$14</string>
          <string>com.android.server.am.ActivityManagerService$13</string>
          <string>com.android.server.am.ActivityManagerService$16</string>
          <string>com.android.server.am.ActivityManagerService$15</string>
          <string>java.nio.charset.CharsetDecoder</string>
          <string>com.android.server.am.ActivityStackSupervisor</string>
          <string>com.android.server.am.ActivityManagerService$SleepTokenImpl</string>
          <string>android.os.health.UidHealthStats</string>
          <string>com.android.server.am.UriPermission$Snapshot</string>
          <string>com.android.server.am.ActiveServices$ServiceRestarter</string>
          <string>com.android.server.am.AppWaitingForDebuggerDialog$1</string>
          <string>com.android.server.am.AppErrorDialog$Data</string>
          <string>com.android.server.am.InstrumentationReporter$MyThread</string>
          <string>com.android.server.am.ActivityManagerService$18</string>
          <string>com.android.server.am.StrictModeViolationDialog</string>
          <string>com.android.server.am.DumpHeapProvider</string>
          <string>com.android.server.am.ActivityManagerService$17</string>
          <string>com.android.server.am.RecentTasks</string>
          <string>com.android.server.am.AppErrors$BadProcessInfo</string>
          <string>com.android.server.am.ActivityManagerService$19</string>
          <string>com.android.server.am.TaskRecord</string>
          <string>com.android.server.am.ActivityManagerService$21</string>
          <string>com.android.server.am.ActivityManagerService$20</string>
          <string>com.android.server.am.LaunchingTaskPositioner</string>
          <string>com.android.server.am.ActivityManagerService$23</string>
          <string>com.android.server.am.ActivityManagerService$22</string>
          <string>com.android.server.am.ActivityManagerService$25</string>
          <string>com.android.server.am.ActivityManagerService$24</string>
          <string>com.android.server.am.AppNotRespondingDialog$1</string>
          <string>com.android.server.am.ActivityManagerService$27</string>
          <string>com.android.server.am.ActivityStack$ActivityState</string>
          <string>com.android.server.am.ActivityManagerService$26</string>
          <string>android.os.SystemClock</string>
          <string>com.android.server.am.ActiveServices$ServiceDumper</string>
          <string>android.app.ApplicationErrorReport$CrashInfo</string>
          <string>android.os.UpdateLock</string>
          <string>android.os.Process$ProcessStartResult</string>
          <string>com.android.server.am.ActivityManagerService$MemItem</string>
          <string>com.android.server.am.ProcessStatsService</string>
          <string>com.android.internal.util.ProgressReporter</string>
          <string>com.android.server.am.CoreSettingsObserver</string>
          <string>com.android.server.am.UriPermission$PersistedTimeComparator</string>
          <string>android.app.ActivityManager$ProcessErrorStateInfo</string>
          <string>com.android.server.am.ServiceRecord$StartItem</string>
          <string>android.service.voice.IVoiceInteractionSession$Stub</string>
          <string>java.util.concurrent.atomic.AtomicLong</string>
          <string>android.os.health.HealthKeys$Constants</string>
          <string>android.content.pm.ActivityInfo$WindowLayout</string>
          <string>android.os.health.HealthStatsWriter</string>
          <string>com.android.server.am.UserController$5$1</string>
          <string>android.os.BatteryStats$Counter</string>
          <string>android.os.health.ProcessHealthStats</string>
          <string>com.android.server.am.RecentTasks$1</string>
          <string>com.android.server.am.BackupRecord</string>
          <string>com.android.server.am.UidRecord</string>
          <string>android.app.ActivityManager$TaskThumbnailInfo</string>
          <string>com.android.server.am.ActivityManagerService$Association</string>
          <string>com.android.server.am.ActivityManagerService</string>
          <string>com.android.server.am.TaskPersister$WriteQueueItem</string>
          <string>dalvik.system.VMRuntime</string>
          <string>com.android.server.am.StrictModeViolationDialog$1</string>
          <string>com.android.server.firewall.IntentFirewall$AMSInterface</string>
          <string>com.android.server.am.ContentProviderConnection</string>
          <string>android.app.ActivityManager$TaskThumbnailInfo$1</string>
          <string>com.android.server.am.BroadcastStats$PackageEntry</string>
          <string>com.android.server.am.CompatModeDialog$1</string>
          <string>com.android.server.am.CompatModeDialog$2</string>
          <string>com.android.server.am.AppErrorDialog$1</string>
          <string>com.android.server.am.ActivityManagerService$GraphicsBinder</string>
          <string>com.android.server.am.ActivityManagerService$MainHandler$1</string>
          <string>com.android.server.am.ActiveServices$4</string>
          <string>java.lang.Process</string>
          <string>com.android.server.am.ActiveServices$3</string>
          <string>com.android.server.am.ActiveServices$2</string>
          <string>com.android.server.am.ActiveServices$1</string>
          <string>com.android.server.am.ProcessList</string>
          <string>com.android.server.am.InstrumentationReporter</string>
          <string>com.android.server.am.ActivityRecord$Token</string>
          <string>com.android.server.am.ActivityManagerService$DbBinder</string>
          <string>com.android.server.am.AppNotRespondingDialog</string>
          <string>com.android.server.am.ActivityManagerService$ProcessInfoService</string>
          <string>com.android.server.am.BatteryStatsService$WakeupReasonThread</string>
          <string>com.android.server.am.ResizeDockedStackTimeout$1</string>
          <string>com.android.server.am.AppErrorResult</string>
          <string>com.android.server.am.ActivityManagerService$1</string>
          <string>com.android.server.am.UserController$4$1</string>
          <string>com.android.server.am.ActivityManagerService$4</string>
          <string>com.android.server.am.UidRecord$ChangeItem</string>
          <string>com.android.server.am.ActivityManagerService$5</string>
          <string>com.android.server.am.ActivityManagerService$MainHandler</string>
          <string>com.android.server.am.ActivityManagerService$2</string>
          <string>android.app.BroadcastOptions</string>
          <string>com.android.server.am.ActivityManagerService$3</string>
          <string>com.android.server.am.ActivityManagerService$8</string>
          <string>com.android.internal.app.SystemUserHomeActivity</string>
          <string>com.android.server.am.ActivityManagerService$9</string>
          <string>com.android.server.am.ActivityManagerService$6</string>
          <string>com.android.server.am.ActivityManagerService$7</string>
          <string>android.view.IApplicationToken$Stub</string>
          <string>android.content.IIntentSender</string>
          <string>com.android.server.am.TaskPersister$1</string>
          <string>com.android.internal.app.IVoiceInteractionManagerService$Stub</string>
          <string>com.android.server.am.ActivityManagerService$Lifecycle</string>
          <string>java.nio.charset.CodingErrorAction</string>
          <string>java.lang.ProcessBuilder</string>
          <string>android.os.health.PidHealthStats</string>
          <string>android.os.health.ServiceHealthStats</string>
          <string>com.android.server.am.AppErrorDialog$2</string>
          <string>android.os.TransactionTooLargeException</string>
          <string>com.android.server.am.ResizeDockedStackTimeout</string>
          <string>com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler</string>
          <string>android.app.ActivityManager$RecentTaskInfo$1</string>
          <string>android.os.Debug$MemoryInfo</string>
          <string>com.android.server.am.FactoryErrorDialog</string>
          <string>com.android.server.am.ServiceRecord$3</string>
          <string>com.android.server.am.LockTaskNotify$H</string>
          <string>com.android.server.am.ServiceRecord$2</string>
          <string>com.android.server.am.ServiceRecord$1</string>
          <string>com.android.server.am.ActivityStackSupervisor$PendingActivityLaunch</string>
          <string>com.android.server.am.TaskPersister$ImageWriteQueueItem</string>
          <string>com.android.server.am.BroadcastRecord</string>
          <string>com.android.server.am.ActivityStackSupervisor$VirtualActivityDisplay</string>
          <string>com.android.server.am.ActivityManagerDebugConfig</string>
          <string>com.android.server.am.IntentBindRecord</string>
          <string>com.android.server.am.UriPermission</string>
          <string>com.android.server.am.ActivityManagerService$FontScaleSettingObserver</string>
          <string>com.android.server.am.ActivityManagerService$PermissionController</string>
          <string>com.android.server.am.ProcessStatsService$1</string>
          <string>android.view.IApplicationToken$Stub$Proxy</string>
          <string>com.android.server.am.ReceiverList</string>
          <string>com.android.server.am.TaskPersister$TaskWriteQueueItem</string>
          <string>com.android.server.am.BroadcastQueue</string>
          <string>com.android.internal.app.IVoiceInteractor$Stub</string>
          <string>com.android.server.am.UserState</string>
          <string>com.android.server.am.ActivityManagerService$7$1</string>
          <string>com.android.server.am.InstrumentationReporter$Report</string>
          <string>com.android.server.am.ActivityStack$ActivityStackHandler</string>
          <string>com.android.internal.app.IVoiceInteractionSessionShowCallback$Stub$Proxy</string>
          <string>com.android.server.am.ProcessStatsService$3</string>
          <string>android.os.health.HealthKeys</string>
          <string>com.android.server.am.ProcessStatsService$2</string>
          <string>java.io.PrintWriter</string>
          <string>com.android.server.am.NativeCrashListener</string>
          <string>android.os.DropBoxManager</string>
          <string>com.android.server.am.ActivityManagerService$NeededUriGrants</string>
          <string>com.android.server.am.ActivityManagerService$ItemMatcher</string>
          <string>com.android.server.am.LockTaskNotify</string>
          <string>com.android.server.am.BatteryStatsService$BatteryStatsHandler</string>
          <string>android.app.IActivityManager$WaitResult$1</string>
          <string>com.android.internal.os.ProcessCpuTracker$Stats</string>
          <string>android.os.Debug$MemoryInfo$1</string>
          <string>com.android.server.am.ActivityMetricsLogger</string>
          <string>com.android.server.am.ActivityStackSupervisor$ActivityDisplay</string>
          <string>com.android.server.am.ProcessMemInfo</string>
          <string>android.content.IIntentReceiver$Stub$Proxy</string>
          <string>com.android.server.am.ActiveServices$ServiceMap</string>
          <string>com.android.server.am.UnsupportedDisplaySizeDialog$_void__init__com_android_server_am_ActivityManagerService_service_android_content_Context_context_android_content_pm_ApplicationInfo_appInfo_LambdaImpl0</string>
          <string>com.android.internal.app.AssistUtils</string>
          <string>com.android.internal.app.IVoiceInteractor$Stub$Proxy</string>
          <string>android.app.IUiAutomationConnection</string>
          <string>com.android.server.am.ActivityManagerService$KillHandler</string>
          <string>com.android.server.am.AppBindRecord</string>
          <string>com.android.server.am.ServiceRecord</string>
          <string>com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer</string>
          <string>com.android.server.am.ActivityManagerService$GrantUri</string>
          <string>com.android.server.am.ActivityManagerService$UiHandler</string>
          <string>com.android.server.am.UserSwitchingDialog$1</string>
          <string>com.android.server.am.ActivityManagerService$IntentFirewallInterface</string>
          <string>android.util.DebugUtils</string>
          <string>com.android.server.am.ActivityStarter</string>
          <string>com.android.server.am.PendingIntentRecord$Key</string>
          <string>java.util.Map$Entry</string>
          <string>android.app.ActivityThread$ApplicationThread</string>
          <string>com.android.server.am.BatteryStatsService$1</string>
          <string>java.io.StringWriter</string>
          <string>com.android.server.am.ActivityManagerService$LocalService</string>
          <string>android.os.health.HealthKeys$Constant</string>
          <string>com.android.server.am.PendingIntentRecord</string>
          <string>com.android.server.am.BatteryStatsService</string>
          <string>com.android.server.am.CompatModeDialog</string>
          <string>com.android.server.am.BroadcastStats$ActionEntry</string>
          <string>com.android.server.am.UserSwitchingDialog</string>
          <string>com.android.internal.util.MemInfoReader</string>
          <string>com.android.server.am.ActivityManagerService$Identity</string>
          <string>android.app.ActivityThread$ApplicationThread$1</string>
          <string>com.android.server.am.UriPermissionOwner$ExternalToken</string>
          <string>com.android.server.am.BroadcastStats</string>
          <string>android.app.IStopUserCallback</string>
          <string>com.android.server.am.ActivityRecord</string>
          <string>com.android.server.am.LaunchWarningWindow</string>
          <string>com.android.server.am.ProcessRecord</string>
          <string>com.android.server.am.BaseErrorDialog</string>
          <string>com.android.server.am.BroadcastStats$1</string>
          <string>com.android.server.am.ActivityManagerService$AppDeathRecipient</string>
          <string>com.android.server.am.AppErrors</string>
          <string>com.android.server.am.UserController</string>
          <string>com.android.server.am.TaskPersister</string>
          <string>com.android.server.am.ActivityManagerService$ProcessChangeItem</string>
          <string>android.widget.CheckBox</string>
          <string>android.app.ActivityManager$RecentTaskInfo</string>
          <string>com.android.server.am.ActivityStackSupervisor$ActivityContainer</string>
          <string>com.android.server.am.NativeCrashListener$NativeCrashReporter</string>
          <string>com.android.server.am.FactoryErrorDialog$1</string>
          <string>com.android.internal.app.IVoiceInteractionSessionShowCallback$Stub</string>
          <string>com.android.server.am.ConnectionRecord</string>
          <string>java.nio.CharBuffer</string>
          <string>android.app.ActivityManagerInternal$SleepToken</string>
          <string>com.android.server.am.BroadcastQueue$1</string>
          <string>com.android.server.am.ProviderMap</string>
          <string>android.app.IActivityManager$WaitResult</string>
          <string>android.os.health.HealthKeys$SortedIntArray</string>
          <string>android.service.voice.IVoiceInteractionSession$Stub$Proxy</string>
          <string>com.android.server.am.ActivityManagerShellCommand</string>
          <string>android.system.UnixSocketAddress</string>
          <string>com.android.server.am.ActivityManagerService$CpuBinder</string>
          <string>com.android.server.am.AppTimeTracker</string>
          <string>com.android.server.am.CompatModePackages$CompatHandler</string>
          <string>android.view.ViewTreeObserver$OnWindowShownListener</string>
          <string>android.os.health.PackageHealthStats</string>
          <string>com.android.server.am.HealthStatsBatteryStatsWriter</string>
          <string>com.android.server.am.AppWaitingForDebuggerDialog</string>
          <string>com.android.server.am.ActiveServices$ServiceLookupResult</string>
          <string>com.android.internal.app.IVoiceInteractionSessionShowCallback</string>
          <string>com.android.server.am.ActivityStackSupervisor$FindTaskResult</string>
          <string>com.android.server.am.ActivityStack</string>
          <string>com.android.server.am.ActivityResult</string>
          <string>android.util.PrintWriterPrinter</string>
          <string>com.android.server.am.BroadcastFilter</string>
          <string>com.android.internal.app.IVoiceInteractionManagerService$Stub$Proxy</string>
          <string>com.android.server.am.ContentProviderRecord</string>
          <string>com.android.server.am.TaskPersister$LazyTaskWriterThread</string>
          <string>android.app.ApplicationErrorReport$AnrInfo</string>
          <string>com.android.server.am.AppErrorDialog</string>
          <string>com.android.server.am.UserController$3</string>
          <string>com.android.server.am.UserController$2</string>
          <string>com.android.server.am.UserController$5</string>
          <string>java.nio.charset.CoderResult</string>
          <string>com.android.server.am.UserController$4</string>
          <string>com.android.server.am.UserController$7</string>
          <string>com.android.server.am.UserController$6</string>
          <string>com.android.server.am.UserController$1</string>
          <string>com.android.server.am.ActivityManagerService$ForegroundToken</string>
          <string>android.app.ActivityManager$ProcessErrorStateInfo$1</string>
          <string>com.android.internal.app.ProcessMap</string>
          <string>com.android.server.am.ContentProviderRecord$ExternalProcessHandle</string>
          <string>com.android.server.am.BroadcastQueue$AppNotResponding</string>
          <string>com.android.server.am.ActivityStack$ScheduleDestroyArgs</string>
          <string>android.widget.CompoundButton$OnCheckedChangeListener</string>
          <string>com.android.server.am.ActivityManagerService$AppTaskImpl</string>
          <string>com.android.server.am.BaseErrorDialog$1</string>
          <string>com.android.internal.os.BatteryStatsImpl$ExternalStatsSync</string>
          <string>com.android.server.am.ActivityStartInterceptor</string>
          <string>com.android.server.am.EventLogTags</string>
          <string>com.android.server.am.ActiveServices</string>
          <string>com.android.server.am.PreBootBroadcaster</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.media.midi.ss</name>
        <entities>
          <string>android.media.midi.MidiDeviceInfo$PortInfo</string>
          <string>android.media.midi.MidiDevice</string>
          <string>android.media.midi.MidiOutputPort$1</string>
          <string>android.media.midi.MidiPortImpl</string>
          <string>android.media.midi.MidiManager$DeviceListener$1</string>
          <string>android.media.midi.MidiManager$DeviceCallback</string>
          <string>android.media.midi.MidiDeviceServer</string>
          <string>android.media.midi.MidiManager$DeviceListener$2</string>
          <string>android.media.midi.MidiManager$DeviceListener$3</string>
          <string>android.media.midi.MidiSender</string>
          <string>android.media.midi.MidiDeviceServer$PortClient</string>
          <string>android.media.midi.MidiDeviceService$1</string>
          <string>android.media.midi.IMidiManager</string>
          <string>android.media.midi.MidiManager$DeviceListener</string>
          <string>android.media.midi.MidiDeviceService</string>
          <string>android.media.midi.IMidiDeviceOpenCallback$Stub</string>
          <string>android.media.midi.MidiReceiver</string>
          <string>android.media.midi.MidiDeviceStatus$1</string>
          <string>android.media.midi.MidiManager</string>
          <string>android.media.midi.MidiManager$OnDeviceOpenedListener</string>
          <string>android.media.midi.MidiDeviceInfo$1</string>
          <string>android.media.midi.MidiDeviceStatus</string>
          <string>android.media.midi.MidiManager$3</string>
          <string>android.media.midi.MidiManager$2</string>
          <string>android.media.midi.MidiManager$1</string>
          <string>android.media.midi.MidiDeviceServer$OutputPortClient</string>
          <string>android.media.midi.MidiDevice$MidiConnection</string>
          <string>android.media.midi.MidiInputPort</string>
          <string>android.media.midi.MidiDeviceServer$InputPortClient</string>
          <string>java.io.Closeable</string>
          <string>android.media.midi.MidiDeviceInfo</string>
          <string>android.media.midi.MidiOutputPort</string>
          <string>android.media.midi.MidiDeviceServer$1</string>
          <string>java.util.concurrent.CopyOnWriteArrayList</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.net.dhcp.ss</name>
        <entities>
          <string>android.net.dhcp.DhcpOfferPacket</string>
          <string>android.net.dhcp.DhcpDeclinePacket</string>
          <string>com.android.internal.util.IState</string>
          <string>android.net.dhcp.DhcpClient$DhcpRenewingState</string>
          <string>android.net.dhcp.DhcpClient$LoggingState</string>
          <string>com.android.internal.util.State</string>
          <string>android.net.dhcp.DhcpClient$DhcpRebootingState</string>
          <string>android.net.dhcp.DhcpNakPacket</string>
          <string>android.net.dhcp.DhcpRequestPacket</string>
          <string>android.net.dhcp.DhcpClient$DhcpRebindingState</string>
          <string>android.net.dhcp.DhcpClient$DhcpInitRebootState</string>
          <string>java.nio.Buffer</string>
          <string>android.net.dhcp.DhcpClient$DhcpRequestingState</string>
          <string>android.net.dhcp.DhcpClient$ReceiveThread</string>
          <string>android.net.dhcp.DhcpClient$StoppedState</string>
          <string>android.net.dhcp.DhcpClient$DhcpReacquiringState</string>
          <string>android.net.dhcp.DhcpClient$ConfiguringInterfaceState</string>
          <string>android.net.dhcp.DhcpClient</string>
          <string>android.net.dhcp.DhcpInformPacket</string>
          <string>android.net.dhcp.DhcpAckPacket</string>
          <string>android.net.dhcp.DhcpDiscoverPacket</string>
          <string>android.net.dhcp.DhcpClient$DhcpInitState</string>
          <string>android.net.dhcp.DhcpClient$WaitBeforeRenewalState</string>
          <string>android.net.dhcp.DhcpPacket$ParseException</string>
          <string>android.net.dhcp.DhcpClient$DhcpHaveLeaseState</string>
          <string>android.net.dhcp.DhcpClient$DhcpSelectingState</string>
          <string>java.net.Inet4Address</string>
          <string>com.android.internal.util.WakeupMessage</string>
          <string>android.net.dhcp.DhcpClient$DhcpState</string>
          <string>android.system.PacketSocketAddress</string>
          <string>android.net.dhcp.DhcpClient$DhcpBoundState</string>
          <string>android.net.dhcp.DhcpClient$WaitBeforeStartState</string>
          <string>android.net.dhcp.DhcpPacket</string>
          <string>android.net.dhcp.DhcpClient$PacketRetransmittingState</string>
          <string>android.net.dhcp.DhcpClient$WaitBeforeOtherState</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.net.wifi.nan.ss</name>
        <entities>
          <string>android.net.wifi.nan.PublishSettings</string>
          <string>android.net.wifi.nan.SubscribeData$1</string>
          <string>android.net.wifi.nan.SubscribeData</string>
          <string>android.net.wifi.nan.WifiNanManager</string>
          <string>android.net.wifi.nan.TlvBufferUtils</string>
          <string>android.net.wifi.nan.TlvBufferUtils$TlvElement</string>
          <string>android.net.wifi.nan.PublishSettings$1</string>
          <string>android.net.wifi.nan.ConfigRequest$1</string>
          <string>android.net.wifi.nan.WifiNanEventListener</string>
          <string>android.net.wifi.nan.SubscribeSettings</string>
          <string>android.net.wifi.nan.SubscribeSettings$Builder</string>
          <string>android.net.wifi.nan.TlvBufferUtils$TlvIterable</string>
          <string>android.net.wifi.nan.TlvBufferUtils$TlvIterable$1</string>
          <string>android.net.wifi.nan.PublishData</string>
          <string>android.net.wifi.nan.ConfigRequest</string>
          <string>android.net.wifi.nan.WifiNanSubscribeSession</string>
          <string>android.net.wifi.nan.PublishData$1</string>
          <string>android.net.wifi.nan.PublishData$Builder</string>
          <string>android.net.wifi.nan.WifiNanSessionListener</string>
          <string>android.net.wifi.nan.WifiNanSessionListener$2</string>
          <string>android.net.wifi.nan.SubscribeSettings$1</string>
          <string>android.net.wifi.nan.WifiNanSessionListener$1</string>
          <string>android.net.wifi.nan.PublishSettings$Builder</string>
          <string>android.net.wifi.nan.SubscribeData$Builder</string>
          <string>android.net.wifi.nan.ConfigRequest$Builder</string>
          <string>android.net.wifi.nan.WifiNanEventListener$2</string>
          <string>android.net.wifi.nan.WifiNanEventListener$1</string>
          <string>android.net.wifi.nan.WifiNanPublishSession</string>
          <string>android.net.wifi.nan.WifiNanSession</string>
          <string>android.net.wifi.nan.TlvBufferUtils$TlvConstructor</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.hardware.camera2.legacy.ss</name>
        <entities>
          <string>java.lang.IllegalStateException</string>
          <string>android.hardware.camera2.legacy.RequestThreadManager</string>
          <string>android.hardware.camera2.legacy.CameraDeviceUserShim$CameraLooper</string>
          <string>android.hardware.camera2.legacy.LegacyCameraDevice$1$5</string>
          <string>android.hardware.camera2.legacy.LegacyCameraDevice$1$4</string>
          <string>android.hardware.camera2.legacy.LegacyCameraDevice$1$3</string>
          <string>android.hardware.camera2.legacy.CameraDeviceState$CameraDeviceStateListener</string>
          <string>android.hardware.camera2.legacy.LegacyCameraDevice$1$2</string>
          <string>android.hardware.camera2.legacy.LegacyFocusStateMapper</string>
          <string>android.hardware.camera2.legacy.LegacyCameraDevice$1$1</string>
          <string>android.hardware.camera2.legacy.ParameterUtils</string>
          <string>android.hardware.camera2.legacy.RequestHandlerThread</string>
          <string>android.hardware.camera2.legacy.CaptureCollector</string>
          <string>android.hardware.Camera$ShutterCallback</string>
          <string>android.hardware.camera2.legacy.LegacyRequestMapper</string>
          <string>android.hardware.camera2.legacy.CameraDeviceState$2</string>
          <string>android.hardware.Camera$Parameters</string>
          <string>android.hardware.camera2.legacy.CameraDeviceState</string>
          <string>android.hardware.camera2.legacy.CameraDeviceState$1</string>
          <string>android.hardware.camera2.legacy.RequestThreadManager$FpsCounter</string>
          <string>android.hardware.camera2.legacy.LegacyExceptionUtils$BufferQueueAbandonedException</string>
          <string>android.hardware.camera2.CaptureRequest$Key</string>
          <string>android.hardware.camera2.legacy.CameraDeviceState$9</string>
          <string>android.hardware.camera2.legacy.LegacyExceptionUtils</string>
          <string>android.hardware.camera2.ICameraDeviceCallbacks$Stub</string>
          <string>android.hardware.camera2.legacy.CameraDeviceState$8</string>
          <string>android.hardware.Camera$Area</string>
          <string>android.hardware.camera2.legacy.CameraDeviceState$7</string>
          <string>android.hardware.camera2.legacy.CameraDeviceState$6</string>
          <string>android.hardware.camera2.legacy.RequestThreadManager$3</string>
          <string>android.hardware.camera2.legacy.CameraDeviceState$5</string>
          <string>android.hardware.camera2.legacy.CameraDeviceUserShim</string>
          <string>android.hardware.camera2.legacy.RequestThreadManager$4</string>
          <string>android.hardware.camera2.legacy.CameraDeviceState$4</string>
          <string>android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread$CallbackHandler</string>
          <string>android.hardware.camera2.legacy.RequestThreadManager$5</string>
          <string>android.hardware.camera2.legacy.CameraDeviceState$3</string>
          <string>android.hardware.camera2.legacy.GLThreadManager$1</string>
          <string>android.hardware.camera2.legacy.LegacyCameraDevice$1</string>
          <string>android.hardware.Camera$AutoFocusMoveCallback</string>
          <string>android.hardware.camera2.legacy.LegacyFaceDetectMapper</string>
          <string>android.hardware.camera2.legacy.CameraDeviceUserShim$CameraCallbackThread</string>
          <string>android.hardware.camera2.legacy.ParameterUtils$ZoomData</string>
          <string>android.hardware.camera2.utils.ListUtils</string>
          <string>android.hardware.camera2.legacy.CaptureCollector$CaptureHolder</string>
          <string>android.hardware.camera2.utils.ArrayUtils</string>
          <string>android.hardware.camera2.legacy.LegacyMetadataMapper</string>
          <string>android.hardware.camera2.legacy.SizeAreaComparator</string>
          <string>android.hardware.camera2.legacy.GLThreadManager</string>
          <string>android.hardware.camera2.legacy.RequestHandlerThread$1</string>
          <string>android.hardware.camera2.legacy.LegacyCameraDevice</string>
          <string>android.hardware.camera2.CameraCharacteristics$Key</string>
          <string>android.hardware.Camera$Size</string>
          <string>android.hardware.camera2.legacy.SurfaceTextureRenderer</string>
          <string>android.hardware.camera2.legacy.BurstHolder</string>
          <string>android.hardware.camera2.legacy.RequestThreadManager$1</string>
          <string>android.hardware.camera2.utils.SizeAreaComparator</string>
          <string>android.hardware.camera2.legacy.RequestThreadManager$2</string>
          <string>android.hardware.camera2.legacy.LegacyResultMapper</string>
          <string>android.hardware.camera2.legacy.ParameterUtils$MeteringData</string>
          <string>android.hardware.camera2.legacy.PerfMeasurement</string>
          <string>android.hardware.Camera$ErrorCallback</string>
          <string>android.os.ServiceSpecificException</string>
          <string>android.hardware.Camera$FaceDetectionListener</string>
          <string>android.hardware.camera2.legacy.GLThreadManager$ConfigureHolder</string>
          <string>android.graphics.ImageFormat</string>
          <string>android.hardware.camera2.legacy.LegacyFaceDetectMapper$1</string>
          <string>android.hardware.Camera$Face</string>
          <string>android.hardware.Camera$PictureCallback</string>
          <string>android.hardware.camera2.legacy.RequestHolder</string>
          <string>android.hardware.camera2.legacy.SurfaceTextureRenderer$EGLSurfaceHolder</string>
          <string>android.hardware.camera2.legacy.LegacyFocusStateMapper$1</string>
          <string>android.hardware.camera2.legacy.ParameterUtils$WeightedRectangle</string>
          <string>android.hardware.Camera$AutoFocusCallback</string>
          <string>android.hardware.camera2.utils.ParamsUtils</string>
          <string>android.hardware.camera2.legacy.LegacyFocusStateMapper$2</string>
          <string>android.hardware.camera2.legacy.LegacyRequest</string>
          <string>android.hardware.camera2.ICameraDeviceCallbacks</string>
          <string>android.hardware.camera2.legacy.RequestHolder$Builder</string>
          <string>android.hardware.camera2.ICameraDeviceCallbacks$Stub$Proxy</string>
          <string>android.hardware.camera2.legacy.RequestQueue</string>
          <string>android.hardware.camera2.legacy.RequestThreadManager$ConfigureHolder</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.provider.ss</name>
        <entities>
          <string>android.provider.SearchRecentSuggestions</string>
          <string>android.provider.CalendarContract$EventsEntity$EntityIteratorImpl</string>
          <string>android.provider.ContactsContract$Data</string>
          <string>android.provider.ContactsContract$CommonDataKinds$Relation</string>
          <string>android.provider.ContactsContract$ProfileSyncState</string>
          <string>android.provider.SearchRecentSuggestions$1</string>
          <string>android.provider.CalendarContract$RemindersColumns</string>
          <string>android.provider.ContactsContract$ContactStatusColumns</string>
          <string>android.provider.MediaStore</string>
          <string>android.provider.CalendarContract$CalendarMetaDataColumns</string>
          <string>android.provider.SearchIndexablesContract$RawData</string>
          <string>android.provider.VoicemailContract$Voicemails</string>
          <string>android.provider.Contacts$ContactMethodsColumns</string>
          <string>android.provider.ContactsContract$StreamItems</string>
          <string>android.webkit.WebIconDatabase$IconListener</string>
          <string>android.provider.SyncStateContract$Helpers</string>
          <string>android.provider.BrowserContract$ImageMappings</string>
          <string>android.provider.CalendarContract$CalendarAlerts</string>
          <string>android.provider.MediaStore$Images$ImageColumns</string>
          <string>android.provider.ContactsContract$DisplayPhoto</string>
          <string>android.provider.Contacts$PresenceColumns</string>
          <string>android.provider.ContactsContract$CommonDataKinds$Note</string>
          <string>android.provider.ContactsContract$StreamItemPhotos</string>
          <string>android.provider.ContactsContract$RawContacts$Data</string>
          <string>android.provider.UserDictionary$Words</string>
          <string>android.provider.BrowserContract$History</string>
          <string>android.provider.BrowserContract$SyncState</string>
          <string>android.provider.ContactsContract$AggregationExceptions</string>
          <string>android.provider.ContactsContract$Contacts$Photo</string>
          <string>android.content.EntityIterator</string>
          <string>android.provider.ContactsContract$RawContactsEntity</string>
          <string>android.provider.Contacts$Settings</string>
          <string>android.provider.Contacts$Extensions</string>
          <string>android.provider.ContactsContract$Contacts$AggregationSuggestions</string>
          <string>android.provider.ContactsContract$ContactsColumns</string>
          <string>android.provider.Settings$GenerationTracker</string>
          <string>android.provider.CalendarContract$ColorsColumns</string>
          <string>android.provider.BrowserContract$BaseSyncColumns</string>
          <string>android.provider.BrowserContract$Images</string>
          <string>android.provider.ContactsContract$CommonDataKinds$BaseTypes</string>
          <string>android.provider.ContactsContract$DeletedContactsColumns</string>
          <string>android.provider.ContactsContract$Contacts$AggregationSuggestions$Builder</string>
          <string>android.provider.Settings</string>
          <string>android.provider.ContactsContract$CommonDataKinds$Contactables</string>
          <string>android.provider.ContactsContract$CommonDataKinds$StructuredName</string>
          <string>android.provider.ContactsContract$FullNameStyle</string>
          <string>android.provider.ContactsContract$MetadataSyncState</string>
          <string>android.provider.ContactsContract$SearchSnippets</string>
          <string>android.provider.ContactsContract$PinnedPositions</string>
          <string>android.provider.MediaStore$Images$Thumbnails</string>
          <string>android.provider.OpenableColumns</string>
          <string>android.provider.ContactsContract$DataColumns</string>
          <string>android.provider.ContactsContract$ContactOptionsColumns</string>
          <string>android.provider.Contacts</string>
          <string>android.provider.ContactsContract$SyncStateColumns</string>
          <string>android.provider.DocumentsContract</string>
          <string>android.provider.CalendarContract$Attendees</string>
          <string>android.provider.BrowserContract</string>
          <string>android.provider.UserDictionary</string>
          <string>android.provider.Contacts$People$ContactMethods</string>
          <string>android.provider.ContactsContract$CommonDataKinds$Event</string>
          <string>android.provider.ContactsContract$DisplayNameSources</string>
          <string>android.provider.CalendarContract</string>
          <string>android.provider.ContactsContract$DataUsageStatColumns</string>
          <string>android.provider.ContactsContract</string>
          <string>android.provider.CalendarContract$CalendarAlertsColumns</string>
          <string>android.provider.ContactsContract$DataUsageFeedback</string>
          <string>android.provider.Browser$BookmarkColumns</string>
          <string>android.provider.ContactsContract$CommonDataKinds$Im</string>
          <string>android.provider.ContactsContract$CommonDataKinds$Photo</string>
          <string>android.provider.CalendarContract$EventDays</string>
          <string>android.provider.ContactsContract$Contacts$Entity</string>
          <string>android.provider.BrowserContract$ChromeSyncColumns</string>
          <string>android.provider.BaseColumns</string>
          <string>android.provider.CalendarContract$AttendeesColumns</string>
          <string>android.provider.ContactsContract$CommonDataKinds$Website</string>
          <string>android.provider.BrowserContract$HistoryColumns</string>
          <string>android.provider.ContactsContract$PhoneticNameStyle</string>
          <string>android.provider.Contacts$SettingsColumns</string>
          <string>android.provider.CalendarContract$CalendarCache</string>
          <string>android.provider.ContactsContract$Groups</string>
          <string>android.provider.ContactsContract$Contacts</string>
          <string>android.provider.ContactsContract$RawContactsColumns</string>
          <string>android.provider.ContactsContract$CommonDataKinds$Identity</string>
          <string>android.provider.Settings$Bookmarks</string>
          <string>android.provider.CalendarContract$ExtendedProperties</string>
          <string>android.provider.BlockedNumberContract$SystemContract$BlockSuppressionStatus</string>
          <string>android.provider.ContactsContract$ContactCounts</string>
          <string>android.provider.ContactsContract$PhotoFiles</string>
          <string>android.provider.Contacts$ContactMethods</string>
          <string>android.provider.ContactsContract$Directory</string>
          <string>android.provider.CalendarContract$CalendarColumns</string>
          <string>android.provider.ContactsContract$RawContacts$DisplayPhoto</string>
          <string>android.provider.ContactsContract$RawContacts$EntityIteratorImpl</string>
          <string>android.provider.MediaStore$Video$Thumbnails</string>
          <string>android.provider.ContactsContract$Profile</string>
          <string>android.provider.ContactsContract$DeletedContacts</string>
          <string>android.provider.CalendarContract$Calendars</string>
          <string>android.provider.Contacts$Intents$UI</string>
          <string>android.os.OperationCanceledException</string>
          <string>android.provider.Contacts$Groups</string>
          <string>android.provider.Contacts$Intents$Insert</string>
          <string>android.graphics.PixelXorXfermode</string>
          <string>android.provider.ContactsContract$ContactNameColumns</string>
          <string>android.provider.BrowserContract$Searches</string>
          <string>android.provider.CalendarContract$SyncState</string>
          <string>android.provider.ContactsContract$PresenceColumns</string>
          <string>android.provider.ContactsContract$CommonDataKinds$Callable</string>
          <string>android.provider.ContactsContract$RawContacts$Entity</string>
          <string>android.provider.MediaStore$Images</string>
          <string>android.provider.MediaStore$InternalThumbnails</string>
          <string>android.provider.CalendarContract$Colors</string>
          <string>android.provider.Contacts$People</string>
          <string>android.provider.ContactsContract$SettingsColumns</string>
          <string>android.provider.ContactsContract$Contacts$StreamItems</string>
          <string>android.provider.SearchRecentSuggestions$SuggestionColumns</string>
          <string>android.provider.ContactsContract$CommonDataKinds</string>
          <string>android.provider.ContactsContract$PhoneLookup</string>
          <string>android.provider.Contacts$Phones</string>
          <string>android.provider.Contacts$PeopleColumns</string>
          <string>android.provider.SyncStateContract$Columns</string>
          <string>android.net.Uri$Builder</string>
          <string>android.provider.SearchIndexablesContract$XmlResource</string>
          <string>android.provider.BrowserContract$ImageMappingColumns</string>
          <string>android.provider.MediaStore$Video$VideoColumns</string>
          <string>android.provider.ContactsContract$CommonDataKinds$CommonColumns</string>
          <string>android.provider.Contacts$OrganizationColumns</string>
          <string>android.provider.SyncStateContract</string>
          <string>android.provider.ContactsContract$CommonDataKinds$Nickname</string>
          <string>android.content.CursorEntityIterator</string>
          <string>android.provider.CalendarContract$CalendarCacheColumns</string>
          <string>android.provider.CalendarContract$EventsRawTimes</string>
          <string>android.provider.CalendarContract$EventsColumns</string>
          <string>android.provider.ContactsContract$MetadataSyncStateColumns</string>
          <string>android.provider.CallLog$Calls</string>
          <string>android.provider.MediaStore$Video$Media</string>
          <string>android.provider.ContactsContract$Settings</string>
          <string>android.provider.DocumentsContract$Root</string>
          <string>android.graphics.BitmapFactory</string>
          <string>android.provider.ContactsContract$CommonDataKinds$GroupMembership</string>
          <string>android.provider.ContactsContract$PhotoFilesColumns</string>
          <string>android.provider.CalendarContract$CalendarEntity$EntityIteratorImpl</string>
          <string>android.provider.BrowserContract$Settings</string>
          <string>android.provider.CalendarContract$EventDaysColumns</string>
          <string>android.provider.CalendarContract$Instances</string>
          <string>android.provider.BrowserContract$SyncColumns</string>
          <string>android.provider.MediaStore$MediaColumns</string>
          <string>android.provider.Contacts$PhonesColumns</string>
          <string>android.provider.Contacts$Photos</string>
          <string>android.provider.ContactsContract$CommonDataKinds$Phone</string>
          <string>android.provider.ContactsContract$CommonDataKinds$Organization</string>
          <string>android.provider.BlockedNumberContract</string>
          <string>android.provider.ContactsContract$DataColumnsWithJoins</string>
          <string>android.provider.ContactsContract$SyncState</string>
          <string>android.provider.CallLog</string>
          <string>java.lang.Deprecated</string>
          <string>android.provider.CalendarContract$Reminders</string>
          <string>android.provider.Browser$SearchColumns</string>
          <string>android.provider.Contacts$ContactMethods$ProviderNames</string>
          <string>android.provider.VoicemailContract$Status</string>
          <string>android.provider.ContactsContract$Presence</string>
          <string>android.provider.ContactsContract$StreamItemsColumns</string>
          <string>android.provider.ContactsContract$RawContacts</string>
          <string>android.provider.ContactsContract$StatusUpdates</string>
          <string>android.provider.ContactsContract$Contacts$Data</string>
          <string>android.provider.SyncStateContract$Constants</string>
          <string>android.provider.Contacts$GroupMembership</string>
          <string>android.provider.BlockedNumberContract$SystemContract</string>
          <string>android.provider.ContactsContract$StreamItems$StreamItemPhotos</string>
          <string>android.provider.SearchIndexablesContract$BaseColumns</string>
          <string>android.provider.DocumentsContract$Document</string>
          <string>android.provider.ContactsContract$PhoneLookupColumns</string>
          <string>android.provider.MediaStore$Images$Media</string>
          <string>android.provider.Contacts$PhotosColumns</string>
          <string>android.provider.Browser</string>
          <string>android.provider.Contacts$ExtensionsColumns</string>
          <string>android.provider.CalendarContract$EventsEntity</string>
          <string>android.provider.CalendarContract$CalendarMetaData</string>
          <string>android.provider.BrowserContract$Bookmarks</string>
          <string>android.provider.CalendarContract$EventsRawTimesColumns</string>
          <string>android.provider.ContactsContract$Intents$Insert</string>
          <string>android.provider.BrowserContract$ImageColumns</string>
          <string>android.provider.ContactsContract$StreamItemPhotosColumns</string>
          <string>android.provider.MediaStore$Video</string>
          <string>android.provider.ContactsContract$ProviderStatus</string>
          <string>android.provider.ContactsContract$StatusColumns</string>
          <string>android.provider.ContactsContract$Groups$EntityIteratorImpl</string>
          <string>android.provider.ContactsContract$CommonDataKinds$StructuredPostal</string>
          <string>android.provider.BrowserContract$Accounts</string>
          <string>android.provider.BrowserContract$Combined</string>
          <string>android.provider.ContactsContract$BaseSyncColumns</string>
          <string>android.provider.CalendarContract$CalendarSyncColumns</string>
          <string>android.graphics.BitmapFactory$Options</string>
          <string>android.provider.ContactsContract$MetadataSync</string>
          <string>android.provider.Contacts$People$Extensions</string>
          <string>android.provider.Contacts$Intents</string>
          <string>android.provider.BlockedNumberContract$BlockedNumbers</string>
          <string>android.provider.ContactsContract$RawContacts$StreamItems</string>
          <string>android.provider.SearchIndexablesContract</string>
          <string>android.provider.Contacts$Organizations</string>
          <string>android.provider.ContactsContract$Intents</string>
          <string>android.provider.CalendarContract$CalendarEntity</string>
          <string>android.provider.SearchIndexablesContract$NonIndexableKey</string>
          <string>android.provider.SearchIndexableResource</string>
          <string>android.provider.Contacts$Presence</string>
          <string>android.provider.CalendarContract$SyncColumns</string>
          <string>android.database.Cursor</string>
          <string>android.provider.BrowserContract$CommonColumns</string>
          <string>android.provider.CalendarContract$Events</string>
          <string>android.provider.ContactsContract$SyncColumns</string>
          <string>android.provider.Contacts$People$Phones</string>
          <string>android.provider.ContactsContract$CommonDataKinds$Email</string>
          <string>android.provider.SearchIndexableData</string>
          <string>android.provider.CalendarContract$ExtendedPropertiesColumns</string>
          <string>android.provider.ContactsContract$GroupsColumns</string>
          <string>android.provider.ContactsContract$CommonDataKinds$SipAddress</string>
          <string>android.provider.ContactsContract$Authorization</string>
          <string>android.provider.VoicemailContract</string>
          <string>android.provider.Contacts$GroupsColumns</string>
          <string>android.provider.ContactsContract$MetadataSyncColumns</string>
          <string>android.content.ContentUris</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.audio.ss</name>
        <entities>
          <string>com.android.server.audio.AudioService$AudioHandler$1</string>
          <string>android.view.accessibility.AccessibilityManager$TouchExplorationStateChangeListener</string>
          <string>com.android.server.audio.AudioService$MyDisplayStatusCallback</string>
          <string>android.media.IAudioRoutesObserver$Stub$Proxy</string>
          <string>com.android.server.audio.AudioService</string>
          <string>com.android.server.audio.RecordingActivityMonitor$RecMonitorClient</string>
          <string>com.android.server.audio.AudioService$Lifecycle</string>
          <string>com.android.server.audio.AudioService$DeviceListSpec</string>
          <string>com.android.server.audio.AudioService$AudioHandler</string>
          <string>com.android.server.audio.FocusRequester</string>
          <string>com.android.server.audio.AudioService$SoundPoolCallback</string>
          <string>com.android.server.audio.RotationHelper$AudioWindowOrientationListener</string>
          <string>android.provider.Settings$System$Validator</string>
          <string>com.android.server.audio.RotationHelper$RotationCheckThread</string>
          <string>android.media.audiopolicy.IAudioPolicyCallback</string>
          <string>com.android.server.audio.AudioService$VolumeController</string>
          <string>com.android.server.audio.AudioService$AudioHandler$2</string>
          <string>android.provider.Settings$System</string>
          <string>android.provider.Settings$System$6</string>
          <string>com.android.server.audio.AudioService$StreamVolumeCommand</string>
          <string>android.media.AudioSystem$DynamicPolicyCallback</string>
          <string>android.provider.Settings$System$7</string>
          <string>com.android.server.audio.AudioService$VolumeStreamState</string>
          <string>android.provider.Settings$System$8</string>
          <string>android.provider.Settings$System$9</string>
          <string>android.provider.Settings$System$2</string>
          <string>com.android.server.audio.AudioService$ForceControlStreamClient</string>
          <string>android.provider.Settings$System$3</string>
          <string>android.provider.Settings$System$4</string>
          <string>android.media.IAudioFocusDispatcher</string>
          <string>android.provider.Settings$System$5</string>
          <string>android.media.SoundPool$OnLoadCompleteListener</string>
          <string>android.media.IVolumeController</string>
          <string>android.media.audiopolicy.IAudioPolicyCallback$Stub$Proxy</string>
          <string>com.android.server.audio.MediaFocusControl$AudioFocusDeathHandler</string>
          <string>android.media.IRecordingConfigDispatcher$Stub</string>
          <string>android.media.AudioSystem$ErrorCallback</string>
          <string>android.provider.Settings$System$InclusiveIntegerRangeValidator</string>
          <string>android.provider.Settings$NameValueCache</string>
          <string>android.media.audiopolicy.IAudioPolicyCallback$Stub</string>
          <string>com.android.server.audio.AudioService$LoadSoundEffectReply</string>
          <string>android.media.AudioSystem</string>
          <string>com.android.server.audio.AudioService$AudioServiceUserRestrictionsListener</string>
          <string>com.android.server.audio.AudioService$SetModeDeathHandler</string>
          <string>java.util.ConcurrentModificationException</string>
          <string>com.android.server.audio.AudioService$RmtSbmxFullVolDeathHandler</string>
          <string>android.media.AudioSystem$AudioRecordingCallback</string>
          <string>android.provider.Settings$System$InclusiveFloatRangeValidator</string>
          <string>com.android.server.audio.AudioService$ScoClient</string>
          <string>com.android.server.audio.AudioService$AudioSystemThread</string>
          <string>com.android.server.audio.AudioService$4</string>
          <string>com.android.server.audio.AudioService$3</string>
          <string>com.android.server.audio.AudioService$2</string>
          <string>com.android.server.audio.AudioService$1</string>
          <string>java.util.Stack</string>
          <string>com.android.server.audio.MediaFocusControl</string>
          <string>com.android.server.audio.AudioService$StreamOverride</string>
          <string>com.android.server.audio.AudioService$AudioServiceInternal</string>
          <string>com.android.server.audio.AudioService$WiredDeviceConnectionState</string>
          <string>android.provider.Settings$NameValueCache$_java_lang_String_getStringForUser_android_content_ContentResolver_cr_java_lang_String_name_int_userHandle_LambdaImpl0</string>
          <string>com.android.server.audio.AudioService$ControllerService</string>
          <string>android.media.IRecordingConfigDispatcher$Stub$Proxy</string>
          <string>com.android.server.audio.RecordingActivityMonitor</string>
          <string>com.android.server.audio.AudioService$SettingsObserver</string>
          <string>android.provider.Settings$System$1</string>
          <string>java.util.NoSuchElementException</string>
          <string>com.android.server.audio.AudioService$AudioServiceBroadcastReceiver</string>
          <string>com.android.server.audio.RotationHelper$AudioOrientationListener</string>
          <string>android.media.IAudioRoutesObserver</string>
          <string>com.android.server.audio.AudioService$AudioPolicyProxy</string>
          <string>android.provider.Settings$System$DiscreteValueValidator</string>
          <string>com.android.server.audio.MediaFocusControl$1</string>
          <string>android.media.IVolumeController$Stub$Proxy</string>
          <string>android.media.IRecordingConfigDispatcher</string>
          <string>android.provider.Settings$NameValueTable</string>
          <string>com.android.server.audio.AudioService$SoundPoolListenerThread</string>
          <string>android.hardware.hdmi.HdmiPlaybackClient$DisplayStatusCallback</string>
          <string>android.media.IVolumeController$Stub</string>
          <string>android.provider.Settings$Global</string>
          <string>android.media.IAudioRoutesObserver$Stub</string>
          <string>com.android.server.audio.RotationHelper</string>
          <string>android.media.SoundPool$Builder</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.fingerprint.ss</name>
        <entities>
          <string>com.android.server.fingerprint.FingerprintService$6</string>
          <string>com.android.server.fingerprint.FingerprintService$7</string>
          <string>com.android.server.fingerprint.FingerprintService$8</string>
          <string>com.android.server.fingerprint.FingerprintsUserState$1</string>
          <string>com.android.server.fingerprint.FingerprintService$9</string>
          <string>com.android.server.fingerprint.FingerprintService$2</string>
          <string>com.android.server.fingerprint.FingerprintService$3</string>
          <string>android.app.SynchronousUserSwitchObserver</string>
          <string>com.android.server.fingerprint.FingerprintService$4</string>
          <string>com.android.server.fingerprint.FingerprintsUserState</string>
          <string>com.android.server.fingerprint.FingerprintService$5</string>
          <string>android.hardware.fingerprint.IFingerprintServiceLockoutResetCallback$Stub</string>
          <string>com.android.server.fingerprint.FingerprintService$1</string>
          <string>android.hardware.fingerprint.IFingerprintDaemon</string>
          <string>android.hardware.fingerprint.IFingerprintDaemon$Stub$Proxy</string>
          <string>com.android.server.fingerprint.ClientMonitor</string>
          <string>com.android.server.fingerprint.FingerprintService$5$6</string>
          <string>com.android.server.fingerprint.FingerprintService$5$5</string>
          <string>com.android.server.fingerprint.FingerprintService$5$2</string>
          <string>com.android.server.fingerprint.FingerprintUtils</string>
          <string>com.android.server.fingerprint.FingerprintService$5$1</string>
          <string>com.android.server.fingerprint.FingerprintService$5$4</string>
          <string>com.android.server.fingerprint.FingerprintService$5$3</string>
          <string>android.hardware.fingerprint.IFingerprintServiceLockoutResetCallback</string>
          <string>com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper</string>
          <string>com.android.server.fingerprint.EnrollClient</string>
          <string>com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper$5</string>
          <string>com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper$4</string>
          <string>com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper$7</string>
          <string>com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper$6</string>
          <string>com.android.server.fingerprint.RemovalClient</string>
          <string>com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper$8</string>
          <string>android.hardware.fingerprint.IFingerprintDaemonCallback</string>
          <string>android.hardware.fingerprint.IFingerprintDaemon$Stub</string>
          <string>com.android.server.fingerprint.FingerprintService$FingerprintServiceLockoutResetMonitor</string>
          <string>android.hardware.fingerprint.IFingerprintDaemonCallback$Stub</string>
          <string>android.hardware.fingerprint.IFingerprintServiceLockoutResetCallback$Stub$Proxy</string>
          <string>com.android.server.fingerprint.FingerprintService$FingerprintServiceLockoutResetMonitor$1</string>
          <string>com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper$1</string>
          <string>com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper$3</string>
          <string>com.android.server.fingerprint.FingerprintService</string>
          <string>android.hardware.fingerprint.IFingerprintServiceReceiver</string>
          <string>com.android.server.fingerprint.FingerprintService$FingerprintServiceWrapper$2</string>
          <string>android.hardware.fingerprint.IFingerprintDaemonCallback$Stub$Proxy</string>
          <string>com.android.server.fingerprint.AuthenticationClient</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.job.controllers.ss</name>
        <entities>
          <string>com.android.server.job.controllers.BatteryController</string>
          <string>com.android.server.job.controllers.AppIdleController$1</string>
          <string>com.android.server.job.controllers.ConnectivityController$2</string>
          <string>com.android.server.job.controllers.DeviceIdleJobsController$1</string>
          <string>java.util.ListIterator</string>
          <string>com.android.server.job.controllers.DeviceIdleJobsController$2</string>
          <string>com.android.server.job.controllers.IdleController$IdlenessTracker</string>
          <string>com.android.server.job.controllers.AppIdleController</string>
          <string>com.android.server.job.controllers.DeviceIdleJobsController$3</string>
          <string>com.android.server.job.controllers.AppIdleController$PackageUpdateFunc</string>
          <string>com.android.server.job.controllers.BatteryController$ChargingTracker</string>
          <string>com.android.server.job.controllers.ConnectivityController$1</string>
          <string>com.android.server.job.StateChangedListener</string>
          <string>com.android.server.job.controllers.IdleController</string>
          <string>com.android.server.job.controllers.AppIdleController$GlobalUpdateFunc</string>
          <string>com.android.server.job.controllers.TimeController</string>
          <string>com.android.server.job.controllers.DeviceIdleJobsController</string>
          <string>com.android.server.job.controllers.AppIdleController$AppIdleStateChangeListener</string>
          <string>com.android.server.job.controllers.TimeController$2</string>
          <string>com.android.server.job.controllers.TimeController$1</string>
          <string>com.android.server.job.controllers.ConnectivityController</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.service.gatekeeper.ss</name>
        <entities>
          <string>android.service.gatekeeper.GateKeeperResponse</string>
          <string>android.service.gatekeeper.GateKeeperResponse$1</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.accounts.ss</name>
        <entities>
          <string>android.content.pm.XmlSerializerAndParser</string>
          <string>com.android.server.accounts.AccountManagerService$MessageHandler</string>
          <string>com.android.server.accounts.AccountManagerService$1$1</string>
          <string>com.android.server.accounts.TokenCache$TokenLruCache</string>
          <string>com.android.server.accounts.AccountManagerService$PreNDatabaseHelper</string>
          <string>com.android.server.accounts.TokenCache$Value</string>
          <string>javax.crypto.KeyGenerator</string>
          <string>com.android.server.accounts.AccountAuthenticatorCache</string>
          <string>com.android.server.accounts.AccountManagerService$UserAccounts</string>
          <string>java.security.GeneralSecurityException</string>
          <string>com.android.server.accounts.AccountManagerService$StartAccountSession</string>
          <string>android.accounts.IAccountAuthenticator$Stub$Proxy</string>
          <string>android.accounts.CantAddAccountActivity</string>
          <string>android.accounts.IAccountAuthenticatorResponse$Stub$Proxy</string>
          <string>com.android.server.accounts.TokenCache</string>
          <string>com.android.server.accounts.AccountManagerService$DeDatabaseHelper</string>
          <string>com.android.server.accounts.AccountManagerService$Session</string>
          <string>com.android.server.accounts.AccountManagerService</string>
          <string>com.android.server.accounts.CryptoHelper</string>
          <string>javax.crypto.Mac</string>
          <string>com.android.server.accounts.TokenCache$TokenLruCache$Evictor</string>
          <string>android.accounts.IAccountAuthenticatorResponse</string>
          <string>com.android.server.accounts.AccountManagerService$14</string>
          <string>com.android.server.accounts.AccountManagerService$13</string>
          <string>com.android.server.accounts.AccountManagerService$12</string>
          <string>android.accounts.IAccountAuthenticatorResponse$Stub</string>
          <string>com.android.server.accounts.AccountManagerService$CeDatabaseHelper</string>
          <string>com.android.server.accounts.AccountManagerService$11</string>
          <string>com.android.server.accounts.AccountManagerService$TestFeaturesSession</string>
          <string>com.android.server.accounts.AccountManagerService$DebugDbHelper</string>
          <string>android.database.sqlite.SQLiteOpenHelper</string>
          <string>com.android.server.accounts.AccountManagerService$15</string>
          <string>com.android.server.accounts.AccountManagerService$10</string>
          <string>android.accounts.IAccountAuthenticator$Stub</string>
          <string>com.android.server.accounts.AccountManagerService$9</string>
          <string>com.android.server.accounts.AccountManagerService$8</string>
          <string>com.android.server.accounts.AccountManagerService$GetAccountsByTypeAndFeatureSession</string>
          <string>com.android.server.accounts.IAccountAuthenticatorCache</string>
          <string>com.android.server.accounts.TokenCache$Key</string>
          <string>android.accounts.IAccountAuthenticator</string>
          <string>com.android.server.accounts.AccountManagerService$RemoveAccountSession</string>
          <string>com.android.server.accounts.AccountManagerService$3</string>
          <string>com.android.server.accounts.AccountManagerService$2</string>
          <string>android.database.sqlite.SQLiteDatabase$CursorFactory</string>
          <string>com.android.server.accounts.AccountAuthenticatorCache$MySerializer</string>
          <string>com.android.server.accounts.AccountManagerService$1</string>
          <string>com.android.server.accounts.AccountManagerService$Lifecycle</string>
          <string>com.android.server.accounts.AccountManagerService$7</string>
          <string>com.android.server.accounts.AccountManagerService$6</string>
          <string>com.android.server.accounts.AccountManagerService$5</string>
          <string>com.android.server.accounts.AccountManagerService$4</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.internal.app.procstats.ss</name>
        <entities>
          <string>com.android.internal.app.procstats.SysMemUsageTable</string>
          <string>com.android.internal.app.procstats.ServiceState</string>
          <string>com.android.internal.app.procstats.SparseMappingTable$Table</string>
          <string>com.android.internal.app.procstats.SparseMappingTable</string>
          <string>com.android.internal.app.procstats.ProcessStats$ProcessDataCollection</string>
          <string>com.android.internal.app.procstats.ProcessState</string>
          <string>com.android.internal.app.procstats.ProcessStats$PackageState</string>
          <string>com.android.internal.app.procstats.ProcessState$PssAggr</string>
          <string>com.android.internal.app.procstats.DumpUtils</string>
          <string>com.android.internal.app.procstats.PssTable</string>
          <string>com.android.internal.app.procstats.ProcessStats$ProcessStateHolder</string>
          <string>com.android.internal.app.procstats.ProcessState$1</string>
          <string>com.android.internal.app.procstats.DurationsTable</string>
          <string>com.android.internal.app.procstats.IProcessStats$Stub</string>
          <string>com.android.internal.app.procstats.IProcessStats</string>
          <string>com.android.internal.app.procstats.ProcessStats</string>
          <string>com.android.internal.app.procstats.IProcessStats$Stub$Proxy</string>
          <string>com.android.internal.app.procstats.ProcessStats$1</string>
          <string>com.android.internal.app.procstats.ProcessStats$TotalMemoryUseCollection</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.hardware.ss</name>
        <entities>
          <string>android.hardware.IConsumerIrService$Stub</string>
          <string>android.hardware.LegacySensorManager</string>
          <string>android.hardware.SystemSensorManager$TriggerEventQueue</string>
          <string>android.hardware.IConsumerIrService</string>
          <string>android.hardware.SensorListener</string>
          <string>android.hardware.ICameraServiceProxy$Stub</string>
          <string>android.hardware.SensorEventCallback</string>
          <string>android.hardware.ConsumerIrManager$CarrierFrequencyRange</string>
          <string>android.hardware.SensorAdditionalInfo</string>
          <string>android.hardware.SystemSensorManager$InjectEventQueue</string>
          <string>android.hardware.GeomagneticField</string>
          <string>android.hardware.ConsumerIrManager</string>
          <string>android.hardware.Camera$OnZoomChangeListener</string>
          <string>android.hardware.SerialPort</string>
          <string>android.hardware.Sensor</string>
          <string>android.hardware.SensorManager$DynamicSensorCallback</string>
          <string>android.hardware.IConsumerIrService$Stub$Proxy</string>
          <string>android.hardware.SensorEventListener2</string>
          <string>android.hardware.Camera$EventHandler</string>
          <string>android.hardware.Camera$PreviewCallback</string>
          <string>android.hardware.LegacySensorManager$LmsFilter</string>
          <string>android.hardware.SerialManager</string>
          <string>android.hardware.SystemSensorManager$2</string>
          <string>android.hardware.ICameraServiceProxy</string>
          <string>android.hardware.SystemSensorManager$1</string>
          <string>android.hardware.SystemSensorManager$BaseEventQueue</string>
          <string>android.hardware.LegacySensorManager$1</string>
          <string>android.hardware.LegacySensorManager$LegacyListener</string>
          <string>android.hardware.SystemSensorManager</string>
          <string>android.hardware.CameraInfo$1</string>
          <string>android.hardware.ICameraServiceProxy$Stub$Proxy</string>
          <string>android.hardware.CameraInfo</string>
          <string>android.hardware.GeomagneticField$LegendreTable</string>
          <string>android.hardware.Camera</string>
          <string>android.hardware.SystemSensorManager$SensorEventQueue</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.net.apf.ss</name>
        <entities>
          <string>android.net.apf.ApfGenerator$Instruction</string>
          <string>com.android.internal.util.HexDump</string>
          <string>android.net.apf.ApfGenerator$IllegalInstructionException</string>
          <string>android.net.apf.ApfFilter</string>
          <string>android.net.apf.ApfGenerator$ExtendedOpcodes</string>
          <string>android.net.apf.ApfFilter$ReceiveThread</string>
          <string>android.net.apf.ApfGenerator</string>
          <string>android.net.apf.ApfGenerator$Register</string>
          <string>android.net.apf.ApfGenerator$Opcodes</string>
          <string>com.android.internal.annotations.GuardedBy</string>
          <string>android.net.apf.ApfFilter$Ra</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.media.effect.effects.ss</name>
        <entities>
          <string>android.filterpacks.imageproc.FisheyeFilter</string>
          <string>android.media.effect.FilterGraphEffect</string>
          <string>android.media.effect.effects.DocumentaryEffect</string>
          <string>android.filterpacks.imageproc.FlipFilter</string>
          <string>android.filterpacks.imageproc.PosterizeFilter</string>
          <string>android.media.effect.effects.BlackWhiteEffect</string>
          <string>android.media.effect.effects.FlipEffect</string>
          <string>android.media.effect.effects.CropEffect</string>
          <string>android.filterfw.core.NativeProgram</string>
          <string>android.media.effect.effects.BrightnessEffect</string>
          <string>android.filterpacks.imageproc.BrightnessFilter</string>
          <string>android.media.effect.SingleFilterEffect</string>
          <string>android.media.effect.effects.SharpenEffect</string>
          <string>android.media.effect.effects.StraightenEffect</string>
          <string>android.media.effect.effects.VignetteEffect</string>
          <string>android.filterpacks.imageproc.TintFilter</string>
          <string>android.media.effect.effects.SaturateEffect</string>
          <string>android.filterfw.io.GraphReader</string>
          <string>android.filterpacks.imageproc.FillLightFilter</string>
          <string>android.media.effect.FilterEffect</string>
          <string>android.filterfw.core.RoundRobinScheduler</string>
          <string>android.filterfw.core.OneShotScheduler</string>
          <string>android.media.effect.effects.FisheyeEffect</string>
          <string>android.media.effect.effects.LomoishEffect</string>
          <string>android.media.effect.effects.DuotoneEffect</string>
          <string>android.media.effect.effects.BackDropperEffect</string>
          <string>android.media.effect.effects.FillLightEffect</string>
          <string>android.media.effect.effects.GrayscaleEffect</string>
          <string>android.filterpacks.imageproc.SharpenFilter</string>
          <string>android.media.effect.SizeChangeEffect</string>
          <string>android.media.effect.effects.ColorTemperatureEffect</string>
          <string>android.media.effect.Effect</string>
          <string>android.filterpacks.imageproc.RotateFilter</string>
          <string>android.filterpacks.imageproc.LomoishFilter</string>
          <string>android.filterpacks.videoproc.BackDropperFilter$LearningDoneListener</string>
          <string>android.media.effect.effects.RotateEffect</string>
          <string>android.filterpacks.imageproc.GrainFilter</string>
          <string>android.media.effect.effects.CrossProcessEffect</string>
          <string>android.filterpacks.imageproc.BlackWhiteFilter</string>
          <string>android.media.effect.effects.BitmapOverlayEffect</string>
          <string>android.filterpacks.imageproc.SepiaFilter</string>
          <string>android.filterpacks.imageproc.DuotoneFilter</string>
          <string>android.filterpacks.imageproc.NegativeFilter</string>
          <string>android.filterpacks.imageproc.CrossProcessFilter</string>
          <string>android.filterpacks.imageproc.ToGrayFilter</string>
          <string>android.media.effect.effects.AutoFixEffect</string>
          <string>android.filterpacks.imageproc.ColorTemperatureFilter</string>
          <string>android.filterpacks.imageproc.StraightenFilter</string>
          <string>android.filterpacks.imageproc.RedEyeFilter</string>
          <string>android.filterpacks.imageproc.DocumentaryFilter</string>
          <string>android.filterpacks.imageproc.VignetteFilter</string>
          <string>android.media.effect.effects.SepiaEffect</string>
          <string>android.filterpacks.imageproc.BitmapOverlayFilter</string>
          <string>android.media.effect.effects.TintEffect</string>
          <string>android.media.effect.effects.GrainEffect</string>
          <string>android.media.effect.effects.ContrastEffect</string>
          <string>android.filterpacks.imageproc.ContrastFilter</string>
          <string>android.filterpacks.imageproc.SimpleImageFilter</string>
          <string>android.media.effect.EffectUpdateListener</string>
          <string>android.media.effect.effects.PosterizeEffect</string>
          <string>android.media.effect.effects.NegativeEffect</string>
          <string>android.filterpacks.imageproc.AutoFixFilter</string>
          <string>android.filterpacks.videoproc.BackDropperFilter</string>
          <string>android.filterpacks.imageproc.SaturateFilter</string>
          <string>android.filterpacks.imageproc.CropRectFilter</string>
          <string>android.media.effect.effects.RedEyeEffect</string>
          <string>android.media.effect.effects.BackDropperEffect$1</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.media.audiofx.ss</name>
        <entities>
          <string>android.media.audiofx.Equalizer$Settings</string>
          <string>android.media.audiofx.AudioEffect$OnEnableStatusChangeListener</string>
          <string>android.media.audiofx.EnvironmentalReverb$Settings</string>
          <string>android.media.audiofx.BassBoost$Settings</string>
          <string>android.media.audiofx.LoudnessEnhancer$Settings</string>
          <string>android.media.audiofx.EnvironmentalReverb$OnParameterChangeListener</string>
          <string>android.media.audiofx.AudioEffect$Descriptor</string>
          <string>android.media.audiofx.PresetReverb$BaseParameterListener</string>
          <string>android.media.audiofx.Equalizer$BaseParameterListener</string>
          <string>android.media.audiofx.Virtualizer</string>
          <string>android.media.audiofx.BassBoost</string>
          <string>android.media.audiofx.BassBoost$OnParameterChangeListener</string>
          <string>android.media.audiofx.LoudnessEnhancer$OnParameterChangeListener</string>
          <string>android.media.audiofx.AudioEffect$OnControlStatusChangeListener</string>
          <string>android.media.audiofx.Visualizer$OnServerDiedListener</string>
          <string>android.media.audiofx.LoudnessEnhancer$BaseParameterListener</string>
          <string>android.media.audiofx.PresetReverb$Settings</string>
          <string>android.media.audiofx.PresetReverb$OnParameterChangeListener</string>
          <string>android.media.audiofx.EnvironmentalReverb</string>
          <string>android.media.audiofx.PresetReverb</string>
          <string>android.media.audiofx.BassBoost$BaseParameterListener</string>
          <string>android.media.audiofx.Virtualizer$BaseParameterListener</string>
          <string>android.media.audiofx.AudioEffect$NativeEventHandler</string>
          <string>android.media.audiofx.AudioEffect$OnParameterChangeListener</string>
          <string>android.media.audiofx.EnvironmentalReverb$BaseParameterListener</string>
          <string>android.media.audiofx.Virtualizer$OnParameterChangeListener</string>
          <string>android.media.audiofx.Virtualizer$Settings</string>
          <string>android.media.audiofx.Visualizer$NativeEventHandler</string>
          <string>android.media.audiofx.Visualizer$OnDataCaptureListener</string>
          <string>android.media.audiofx.Equalizer</string>
          <string>android.media.audiofx.Equalizer$OnParameterChangeListener</string>
          <string>android.media.audiofx.AudioEffect</string>
          <string>android.media.audiofx.Visualizer$MeasurementPeakRms</string>
          <string>android.media.audiofx.Visualizer</string>
          <string>android.media.audiofx.LoudnessEnhancer</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.internal.statusbar.ss</name>
        <entities>
          <string>com.android.internal.statusbar.StatusBarIcon</string>
          <string>com.android.internal.statusbar.NotificationVisibility$1</string>
          <string>com.android.internal.statusbar.NotificationVisibility</string>
          <string>com.android.internal.statusbar.StatusBarIcon$1</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.service.chooser.ss</name>
        <entities>
          <string>android.service.chooser.ChooserTargetService$IChooserTargetServiceWrapper</string>
          <string>android.service.chooser.ChooserTargetService</string>
          <string>android.service.chooser.ChooserTarget</string>
          <string>android.service.chooser.ChooserTarget$1</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.hardware.display.ss</name>
        <entities>
          <string>android.hardware.display.DisplayManagerGlobal$VirtualDisplayCallback</string>
          <string>android.hardware.display.WifiDisplay</string>
          <string>android.hardware.display.IDisplayManagerCallback$Stub</string>
          <string>android.hardware.display.DisplayManagerGlobal$DisplayManagerCallback</string>
          <string>android.hardware.display.IDisplayManagerCallback$Stub$Proxy</string>
          <string>android.hardware.display.DisplayManagerGlobal</string>
          <string>android.hardware.display.IDisplayManager$Stub$Proxy</string>
          <string>android.hardware.display.IVirtualDisplayCallback$Stub$Proxy</string>
          <string>android.media.projection.IMediaProjection$Stub$Proxy</string>
          <string>android.hardware.display.IDisplayManager$Stub</string>
          <string>android.hardware.display.WifiDisplay$1</string>
          <string>android.hardware.display.VirtualDisplay</string>
          <string>android.media.projection.IMediaProjection$Stub</string>
          <string>android.hardware.display.WifiDisplaySessionInfo$1</string>
          <string>android.hardware.display.WifiDisplayStatus</string>
          <string>android.hardware.display.WifiDisplaySessionInfo</string>
          <string>android.hardware.display.IVirtualDisplayCallback</string>
          <string>android.hardware.display.DisplayManagerGlobal$DisplayListenerDelegate</string>
          <string>android.hardware.display.IDisplayManager</string>
          <string>android.media.projection.IMediaProjection</string>
          <string>android.hardware.display.DisplayManagerGlobal$VirtualDisplayCallbackDelegate</string>
          <string>android.hardware.display.VirtualDisplay$Callback</string>
          <string>android.hardware.display.IVirtualDisplayCallback$Stub</string>
          <string>android.hardware.display.WifiDisplayStatus$1</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.security.net.config.ss</name>
        <entities>
          <string>java.security.cert.X509Certificate</string>
          <string>android.security.net.config.SystemCertificateSource</string>
          <string>android.security.net.config.SystemCertificateSource$NoPreloadHolder</string>
          <string>android.security.net.config.PinSet</string>
          <string>android.security.net.config.XmlConfigSource</string>
          <string>android.security.net.config.ConfigSource</string>
          <string>java.security.KeyStoreException</string>
          <string>android.security.net.config.DirectoryCertificateSource$CertSelector</string>
          <string>android.security.net.config.ApplicationConfig</string>
          <string>android.security.net.config.XmlConfigSource$ParserException</string>
          <string>android.security.net.config.UserCertificateSource$NoPreloadHolder</string>
          <string>android.security.net.config.NetworkSecurityConfigProvider</string>
          <string>com.android.org.conscrypt.CertPinManager</string>
          <string>com.android.org.conscrypt.TrustManagerImpl</string>
          <string>javax.net.ssl.TrustManagerFactorySpi</string>
          <string>android.security.net.config.RootTrustManagerFactorySpi</string>
          <string>java.security.KeyStore</string>
          <string>com.android.org.conscrypt.Hex</string>
          <string>android.security.net.config.NetworkSecurityTrustManager</string>
          <string>java.security.cert.TrustAnchor</string>
          <string>com.android.org.conscrypt.TrustedCertificateStore</string>
          <string>com.android.org.conscrypt.TrustedCertificateIndex</string>
          <string>android.security.net.config.ManifestConfigSource</string>
          <string>android.security.net.config.TrustedCertificateStoreAdapter</string>
          <string>android.security.net.config.KeyStoreConfigSource</string>
          <string>com.android.org.conscrypt.NativeCrypto</string>
          <string>android.security.net.config.Pin</string>
          <string>javax.net.ssl.SSLEngine</string>
          <string>javax.net.ssl.X509ExtendedTrustManager</string>
          <string>android.security.net.config.DirectoryCertificateSource$3</string>
          <string>android.security.net.config.TrustAnchor</string>
          <string>android.security.net.config.ConfigNetworkSecurityPolicy</string>
          <string>android.security.net.config.RootTrustManagerFactorySpi$ApplicationConfigParameters</string>
          <string>android.security.net.config.DirectoryCertificateSource$1</string>
          <string>android.security.net.config.DirectoryCertificateSource$2</string>
          <string>android.security.net.config.RootTrustManager</string>
          <string>android.security.net.config.Domain</string>
          <string>android.security.net.config.ManifestConfigSource$DefaultConfigSource</string>
          <string>java.security.PublicKey</string>
          <string>android.security.net.config.NetworkSecurityConfig$Builder</string>
          <string>android.security.net.config.NetworkSecurityConfig</string>
          <string>android.security.net.config.CertificatesEntryRef</string>
          <string>android.security.net.config.DirectoryCertificateSource</string>
          <string>android.security.net.config.ResourceCertificateSource</string>
          <string>javax.net.ssl.X509TrustManager</string>
          <string>javax.net.ssl.ManagerFactoryParameters</string>
          <string>android.security.net.config.NetworkSecurityConfig$1</string>
          <string>android.security.net.config.KeyStoreCertificateSource</string>
          <string>android.security.net.config.CertificateSource</string>
          <string>android.security.net.config.UserCertificateSource</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.test.ss</name>
        <entities>
          <string>android.webkit.JavascriptInterface</string>
          <string>android.test.suitebuilder.annotation.LargeTest</string>
          <string>android.annotation.FloatRange</string>
          <string>junit.framework.TestSuite</string>
          <string>android.annotation.IntegerRes</string>
          <string>junit.framework.TestResult</string>
          <string>android.annotation.StringDef</string>
          <string>java.lang.annotation.Documented</string>
          <string>android.annotation.LayoutRes</string>
          <string>android.annotation.TargetApi</string>
          <string>android.test.suitebuilder.annotation.MediumTest</string>
          <string>android.test.InstrumentationTestSuite</string>
          <string>android.annotation.DimenRes</string>
          <string>android.annotation.Nullable</string>
          <string>android.annotation.Size</string>
          <string>android.annotation.SystemApi</string>
          <string>android.annotation.WorkerThread</string>
          <string>android.annotation.NonNull</string>
          <string>android.annotation.TestApi</string>
          <string>android.test.AndroidTestCase</string>
          <string>android.test.suitebuilder.annotation.Suppress</string>
          <string>android.annotation.MenuRes</string>
          <string>android.test.suitebuilder.annotation.Smoke</string>
          <string>android.annotation.TransitionRes</string>
          <string>java.lang.annotation.Annotation</string>
          <string>android.annotation.IdRes</string>
          <string>android.annotation.UserIdInt</string>
          <string>android.annotation.UiThread</string>
          <string>android.annotation.CheckResult</string>
          <string>android.annotation.IntRange</string>
          <string>junit.framework.Test</string>
          <string>android.test.suitebuilder.annotation.SmallTest</string>
          <string>android.annotation.Widget</string>
          <string>android.annotation.RawRes</string>
          <string>android.annotation.MainThread</string>
          <string>java.lang.annotation.Retention</string>
          <string>android.annotation.CallSuper</string>
          <string>android.annotation.AnyRes</string>
          <string>android.annotation.StyleableRes</string>
          <string>android.annotation.ArrayRes</string>
          <string>android.test.PerformanceTestCase$Intermediates</string>
          <string>android.test.InstrumentationTestCase</string>
          <string>android.annotation.InterpolatorRes</string>
          <string>android.annotation.StyleRes</string>
          <string>android.test.InstrumentationTestCase$1</string>
          <string>android.test.InstrumentationTestCase$2</string>
          <string>android.test.UiThreadTest</string>
          <string>android.annotation.ColorRes</string>
          <string>junit.framework.TestCase</string>
          <string>android.annotation.BinderThread</string>
          <string>android.annotation.DrawableRes</string>
          <string>android.annotation.AnimatorRes</string>
          <string>com.android.internal.annotations.Immutable</string>
          <string>android.annotation.FractionRes</string>
          <string>android.annotation.StringRes</string>
          <string>android.test.FlakyTest</string>
          <string>java.lang.annotation.Target</string>
          <string>android.annotation.ColorInt</string>
          <string>android.test.PerformanceTestCase</string>
          <string>java.lang.annotation.ElementType</string>
          <string>android.test.RepetitiveTest</string>
          <string>android.annotation.AppIdInt</string>
          <string>android.annotation.AnimRes</string>
          <string>android.annotation.PluralsRes</string>
          <string>android.annotation.XmlRes</string>
          <string>android.annotation.AttrRes</string>
          <string>android.annotation.BoolRes</string>
          <string>java.lang.annotation.RetentionPolicy</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.database.ss</name>
        <entities>
          <string>android.database.sqlite.SQLiteFullException</string>
          <string>android.database.IContentObserver$Stub$Proxy</string>
          <string>android.database.sqlite.SQLiteAbortException</string>
          <string>android.database.sqlite.SQLiteDiskIOException</string>
          <string>android.database.sqlite.SQLiteDatabaseCorruptException</string>
          <string>android.database.sqlite.SQLiteProgram</string>
          <string>android.database.BulkCursorNative</string>
          <string>android.database.BulkCursorDescriptor</string>
          <string>android.database.AbstractCursor</string>
          <string>android.database.CursorWindow</string>
          <string>android.database.ContentObserver$Transport</string>
          <string>android.database.DatabaseUtils</string>
          <string>android.database.sqlite.SQLiteException</string>
          <string>android.database.IBulkCursor</string>
          <string>android.database.sqlite.SQLiteStatement</string>
          <string>android.database.CursorToBulkCursorAdaptor$ContentObserverProxy</string>
          <string>android.database.CursorToBulkCursorAdaptor</string>
          <string>android.database.CrossProcessCursor</string>
          <string>android.database.MergeCursor$1</string>
          <string>android.database.CursorJoiner</string>
          <string>android.database.BulkCursorProxy</string>
          <string>android.database.CrossProcessCursorWrapper</string>
          <string>android.database.ContentObservable</string>
          <string>android.database.CursorWindow$1</string>
          <string>android.database.ContentObserver</string>
          <string>android.database.ContentObserver$NotificationRunnable</string>
          <string>android.database.MergeCursor</string>
          <string>android.database.StaleDataException</string>
          <string>android.database.CursorWindowAllocationException</string>
          <string>android.database.CursorIndexOutOfBoundsException</string>
          <string>java.text.CollationKey</string>
          <string>android.database.MatrixCursor</string>
          <string>android.database.DatabaseUtils$InsertHelper</string>
          <string>android.database.sqlite.SQLiteConstraintException</string>
          <string>android.database.IContentObserver$Stub</string>
          <string>android.database.BulkCursorDescriptor$1</string>
          <string>android.database.MatrixCursor$RowBuilder</string>
          <string>android.database.CursorJoiner$Result</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.app.assist.ss</name>
        <entities>
          <string>android.app.assist.AssistStructure$ViewNode</string>
          <string>android.app.assist.AssistStructure$ParcelTransferReader</string>
          <string>android.app.assist.AssistContent</string>
          <string>android.app.assist.AssistStructure$1</string>
          <string>android.os.PooledStringReader</string>
          <string>android.app.assist.AssistStructure</string>
          <string>android.app.assist.AssistStructure$WindowNode</string>
          <string>android.app.assist.AssistStructure$SendChannel</string>
          <string>android.view.ViewStructure</string>
          <string>android.app.assist.AssistStructure$ParcelTransferWriter</string>
          <string>android.app.assist.AssistStructure$ViewNodeText</string>
          <string>android.app.assist.AssistStructure$ViewNodeBuilder</string>
          <string>android.app.assist.AssistStructure$ViewStackEntry</string>
          <string>android.app.assist.AssistContent$1</string>
          <string>android.os.PooledStringWriter</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.net.wifi.p2p.ss</name>
        <entities>
          <string>android.net.wifi.p2p.WifiP2pGroup</string>
          <string>android.net.wifi.p2p.WifiP2pWfdInfo$1</string>
          <string>android.net.wifi.p2p.WifiP2pGroup$1</string>
          <string>android.net.wifi.p2p.WifiP2pWfdInfo</string>
          <string>android.net.wifi.p2p.WifiP2pDeviceList$1</string>
          <string>android.net.wifi.p2p.WifiP2pConfig$1</string>
          <string>android.net.wifi.p2p.WifiP2pDeviceList</string>
          <string>android.net.wifi.p2p.WifiP2pGroupList$1</string>
          <string>android.net.wifi.p2p.WifiP2pInfo</string>
          <string>android.net.wifi.p2p.WifiP2pGroupList$2</string>
          <string>android.net.wifi.p2p.WifiP2pConfig</string>
          <string>android.net.wifi.p2p.WifiP2pDevice$1</string>
          <string>android.net.wifi.p2p.WifiP2pDevice</string>
          <string>android.net.wifi.p2p.WifiP2pInfo$1</string>
          <string>android.net.wifi.p2p.WifiP2pGroupList</string>
          <string>android.net.wifi.p2p.WifiP2pGroupList$GroupDeleteListener</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.hardware.hdmi.ss</name>
        <entities>
          <string>android.hardware.hdmi.HdmiControlManager</string>
          <string>android.hardware.hdmi.HdmiRecordSources$ChannelIdentifier</string>
          <string>android.hardware.hdmi.HdmiRecordListener$TimerStatusData</string>
          <string>android.hardware.hdmi.HdmiRecordSources$ExternalPhysicalAddress</string>
          <string>android.hardware.hdmi.HdmiRecordSources$AtscData</string>
          <string>android.hardware.hdmi.HdmiTimerRecordSources$Time</string>
          <string>android.hardware.hdmi.HdmiRecordSources</string>
          <string>android.hardware.hdmi.HdmiRecordSources$DigitalServiceIdentification</string>
          <string>android.hardware.hdmi.HdmiRecordSources$DigitalChannelData</string>
          <string>android.hardware.hdmi.HdmiRecordSources$OwnSource</string>
          <string>android.hardware.hdmi.HdmiControlManager$HotplugEventListener</string>
          <string>android.hardware.hdmi.HdmiTvClient$SelectCallback</string>
          <string>android.hardware.hdmi.HdmiTimerRecordSources</string>
          <string>android.hardware.hdmi.HdmiTimerRecordSources$TimerRecordSource</string>
          <string>android.hardware.hdmi.HdmiTvClient$InputChangeListener</string>
          <string>android.hardware.hdmi.HdmiDeviceInfo</string>
          <string>android.hardware.hdmi.HdmiTimerRecordSources$TimerInfo</string>
          <string>android.hardware.hdmi.HdmiHotplugEvent</string>
          <string>android.hardware.hdmi.HdmiTvClient</string>
          <string>android.hardware.hdmi.HdmiTimerRecordSources$Duration</string>
          <string>android.hardware.hdmi.HdmiTvClient$HdmiMhlVendorCommandListener</string>
          <string>android.hardware.hdmi.HdmiRecordListener</string>
          <string>android.hardware.hdmi.HdmiControlManager$1</string>
          <string>android.hardware.hdmi.HdmiRecordSources$DvbData</string>
          <string>android.hardware.hdmi.HdmiDeviceInfo$1</string>
          <string>android.hardware.hdmi.HdmiControlManager$VendorCommandListener</string>
          <string>android.hardware.hdmi.HdmiTimerRecordSources$ExternalSourceDecorator</string>
          <string>android.hardware.hdmi.HdmiRecordSources$ExternalPlugData</string>
          <string>android.hardware.hdmi.HdmiRecordSources$AnalogueServiceSource</string>
          <string>android.hardware.hdmi.HdmiClient$1</string>
          <string>android.hardware.hdmi.HdmiTvClient$4</string>
          <string>android.hardware.hdmi.HdmiTvClient$3</string>
          <string>android.hardware.hdmi.HdmiTvClient$2</string>
          <string>android.hardware.hdmi.HdmiTvClient$1</string>
          <string>android.hardware.hdmi.HdmiHotplugEvent$1</string>
          <string>android.hardware.hdmi.HdmiPlaybackClient</string>
          <string>android.hardware.hdmi.HdmiRecordSources$RecordSource</string>
          <string>android.hardware.hdmi.HdmiPortInfo</string>
          <string>android.hardware.hdmi.HdmiPlaybackClient$2</string>
          <string>android.hardware.hdmi.HdmiPlaybackClient$1</string>
          <string>android.hardware.hdmi.HdmiTimerRecordSources$TimeUnit</string>
          <string>android.hardware.hdmi.HdmiRecordSources$DigitalServiceSource</string>
          <string>android.hardware.hdmi.HdmiClient</string>
          <string>android.hardware.hdmi.HdmiPortInfo$1</string>
          <string>android.hardware.hdmi.HdmiRecordSources$AribData</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.devicepolicy.ss</name>
        <entities>
          <string>com.android.server.devicepolicy.DevicePolicyManagerService$MonitoringCertNotificationTask</string>
          <string>com.android.server.devicepolicy.DevicePolicyManagerService$SetupContentObserver</string>
          <string>com.android.server.devicepolicy.DevicePolicyManagerService$LocalService</string>
          <string>java.security.cert.CertificateFactory</string>
          <string>org.xmlpull.v1.XmlSerializer</string>
          <string>com.android.server.devicepolicy.DevicePolicyManagerService$8</string>
          <string>com.android.server.devicepolicy.DevicePolicyManagerService$7</string>
          <string>com.android.server.devicepolicy.DevicePolicyManagerService$6</string>
          <string>android.app.admin.SecurityLog</string>
          <string>com.android.server.devicepolicy.DevicePolicyManagerService$5</string>
          <string>com.android.server.devicepolicy.DevicePolicyManagerService$9</string>
          <string>com.android.server.devicepolicy.RemoteBugreportUtils</string>
          <string>com.android.server.devicepolicy.Owners</string>
          <string>android.app.admin.DevicePolicyManagerInternal</string>
          <string>com.android.server.devicepolicy.DevicePolicyManagerService$4</string>
          <string>com.android.server.devicepolicy.DevicePolicyManagerService$3</string>
          <string>android.media.IRingtonePlayer$Stub</string>
          <string>com.android.server.devicepolicy.DevicePolicyManagerService$2</string>
          <string>com.android.server.devicepolicy.DevicePolicyManagerService$1</string>
          <string>com.android.server.devicepolicy.DevicePolicyManagerService</string>
          <string>android.media.IAudioService</string>
          <string>android.app.NotificationManager</string>
          <string>com.android.server.devicepolicy.Owners$FileReadWriter</string>
          <string>android.security.IKeyChainService$Stub</string>
          <string>com.android.server.devicepolicy.Owners$ProfileOwnerReadWriter</string>
          <string>android.media.IAudioService$Stub</string>
          <string>android.app.admin.DevicePolicyManagerInternal$OnCrossProfileWidgetProvidersChangeListener</string>
          <string>com.android.server.devicepolicy.DevicePolicyManagerService$10</string>
          <string>com.android.server.devicepolicy.DevicePolicyManagerService$11</string>
          <string>android.media.IAudioService$Stub$Proxy</string>
          <string>com.android.server.devicepolicy.DevicePolicyManagerService$Lifecycle</string>
          <string>com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin</string>
          <string>android.media.IRingtonePlayer$Stub$Proxy</string>
          <string>com.android.server.devicepolicy.RemoteBugreportUtils$RemoteBugreportNotificationType</string>
          <string>com.android.server.devicepolicy.SecurityLogMonitor</string>
          <string>android.security.IKeyChainAliasCallback$Stub$Proxy</string>
          <string>android.provider.ContactsInternal</string>
          <string>android.media.IAudioFocusDispatcher$Stub</string>
          <string>android.app.admin.SecurityLog$SecurityEvent</string>
          <string>com.android.server.devicepolicy.DevicePolicyManagerService$DeviceOwnerPreConditionCode</string>
          <string>android.app.admin.DeviceAdminInfo$PolicyInfo</string>
          <string>com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin$TrustAgentInfo</string>
          <string>android.security.IKeyChainService</string>
          <string>android.security.KeyChain$KeyChainConnection</string>
          <string>android.os.UserManager</string>
          <string>com.android.server.devicepolicy.Owners$OwnerInfo</string>
          <string>android.media.IAudioFocusDispatcher$Stub$Proxy</string>
          <string>android.app.admin.SecurityLog$SecurityEvent$1</string>
          <string>com.android.server.devicepolicy.DevicePolicyManagerService$Injector</string>
          <string>com.android.server.devicepolicy.Owners$DeviceOwnerReadWriter</string>
          <string>com.android.server.devicepolicy.DevicePolicyManagerService$DevicePolicyData</string>
          <string>android.security.IKeyChainAliasCallback</string>
          <string>android.security.IKeyChainService$Stub$Proxy</string>
          <string>java.util.concurrent.locks.Lock</string>
          <string>com.android.server.devicepolicy.DevicePolicyManagerService$4$1</string>
          <string>android.security.IKeyChainAliasCallback$Stub</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.security.ss</name>
        <entities>
          <string>android.security.keystore.KeyPermanentlyInvalidatedException</string>
          <string>android.security.KeystoreArguments</string>
          <string>com.android.org.bouncycastle.util.io.pem.PemObject</string>
          <string>android.security.KeyChain</string>
          <string>android.security.KeyChain$AliasResponse</string>
          <string>android.security.KeystoreArguments$1</string>
          <string>android.security.KeyStore</string>
          <string>com.android.org.bouncycastle.util.io.pem.PemReader</string>
          <string>android.security.IKeystoreService$Stub</string>
          <string>android.security.KeyPairGeneratorSpec$Builder</string>
          <string>android.security.IKeystoreService$Stub$Proxy</string>
          <string>android.security.keystore.KeyExpiredException</string>
          <string>android.security.IKeystoreService</string>
          <string>android.security.KeyStoreParameter</string>
          <string>android.security.Credentials</string>
          <string>android.security.KeyStoreParameter$Builder</string>
          <string>com.android.org.bouncycastle.util.io.pem.PemObjectGenerator</string>
          <string>android.security.KeyChain$1</string>
          <string>android.security.KeyChainAliasCallback</string>
          <string>java.util.concurrent.BlockingQueue</string>
          <string>android.security.KeyPairGeneratorSpec</string>
          <string>android.security.NetworkSecurityPolicy</string>
          <string>android.security.FrameworkNetworkSecurityPolicy</string>
          <string>android.security.keystore.KeyNotYetValidException</string>
          <string>android.security.keystore.UserNotAuthenticatedException</string>
          <string>java.security.InvalidKeyException</string>
          <string>android.security.KeyChainException</string>
          <string>android.security.KeyStore$State</string>
          <string>com.android.org.bouncycastle.util.io.pem.PemWriter</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>org.apache.http.params.ss</name>
        <entities>
          <string>org.apache.http.params.HttpConnectionParams</string>
          <string>org.apache.http.params.CoreConnectionPNames</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.policy.ss</name>
        <entities>
          <string>com.android.server.policy.ImmersiveModeConfirmation$ClingWindowView$5</string>
          <string>com.android.server.policy.ImmersiveModeConfirmation$ClingWindowView$4</string>
          <string>com.android.server.policy.WindowOrientationListener</string>
          <string>com.android.server.policy.GlobalActions$SilentModeToggleAction</string>
          <string>com.android.server.policy.PhoneWindowManager$9</string>
          <string>com.android.server.policy.PhoneWindowManager$8</string>
          <string>com.android.server.statusbar.StatusBarManagerInternal</string>
          <string>com.android.server.policy.PhoneWindowManager$MyWakeGestureListener</string>
          <string>com.android.server.policy.WindowOrientationListener$OrientationSensorJudge$1</string>
          <string>com.android.server.policy.ImmersiveModeConfirmation$ClingWindowView$1</string>
          <string>com.android.server.policy.ImmersiveModeConfirmation$ClingWindowView$3</string>
          <string>com.android.server.policy.ImmersiveModeConfirmation$ClingWindowView$2</string>
          <string>com.android.server.policy.PhoneWindowManager$ScreenLockTimeout</string>
          <string>com.android.server.policy.EnableAccessibilityController$1</string>
          <string>android.content.res.Resources$NotFoundException</string>
          <string>com.android.server.policy.EnableAccessibilityController$2</string>
          <string>com.android.server.policy.GlobalActions$SinglePressAction</string>
          <string>com.android.server.policy.GlobalActions$BugReportAction</string>
          <string>com.android.internal.app.AlertController$RecycleListView</string>
          <string>com.android.server.policy.GlobalActions$12</string>
          <string>com.android.server.policy.PhoneWindowManager$MyOrientationListener</string>
          <string>com.android.server.policy.WindowOrientationListener$AccelSensorJudge</string>
          <string>com.android.server.policy.GlobalActions$10</string>
          <string>com.android.server.policy.BurnInProtectionHelper$1</string>
          <string>com.android.server.policy.GlobalActions$11</string>
          <string>android.os.FactoryTest</string>
          <string>android.app.IUiModeManager$Stub$Proxy</string>
          <string>com.android.server.policy.WindowOrientationListener$OrientationJudge</string>
          <string>com.android.server.policy.PhoneWindowManager</string>
          <string>com.android.server.policy.ImmersiveModeConfirmation</string>
          <string>android.view.accessibility.IAccessibilityManager$Stub$Proxy</string>
          <string>com.android.server.policy.SystemGesturesPointerEventListener$Callbacks</string>
          <string>com.android.server.policy.ImmersiveModeConfirmation$ClingWindowView$5$1</string>
          <string>android.view.ViewTreeObserver$OnComputeInternalInsetsListener</string>
          <string>android.os.PowerManagerInternal</string>
          <string>android.service.dreams.IDreamManager</string>
          <string>com.android.server.policy.PhoneWindowManager$MyOrientationListener$1</string>
          <string>com.android.server.policy.GlobalActions$GlobalActionsDialog</string>
          <string>com.android.server.policy.PhoneWindowManager$HdmiControl$1</string>
          <string>com.android.server.policy.WakeGestureListener</string>
          <string>com.android.internal.app.AlertController$AlertParams$OnPrepareListViewListener</string>
          <string>com.android.server.policy.LogDecelerateInterpolator</string>
          <string>com.android.server.policy.GlobalKeyManager</string>
          <string>com.android.server.policy.GlobalActions$ToggleAction$State</string>
          <string>android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy</string>
          <string>android.view.ViewTreeObserver$InternalInsetsInfo</string>
          <string>com.android.server.policy.ImmersiveModeConfirmation$ClingWindowView</string>
          <string>com.android.server.policy.GlobalActions$9</string>
          <string>com.android.server.policy.GlobalActions$7</string>
          <string>com.android.server.policy.GlobalActions$8</string>
          <string>com.android.server.policy.GlobalActions$5</string>
          <string>com.android.server.policy.PhoneWindowManager$1</string>
          <string>com.android.server.policy.SystemGesturesPointerEventListener$FlingGestureDetector</string>
          <string>com.android.server.policy.ShortcutManager</string>
          <string>com.android.server.policy.GlobalActions$6</string>
          <string>com.android.server.policy.GlobalActions$3</string>
          <string>com.android.server.policy.GlobalActions$MyAdapter</string>
          <string>com.android.server.policy.PhoneWindowManager$3</string>
          <string>com.android.server.policy.GlobalActions$4</string>
          <string>com.android.server.policy.PhoneWindowManager$2</string>
          <string>android.speech.tts.TextToSpeech$OnInitListener</string>
          <string>com.android.server.policy.GlobalActions$1</string>
          <string>com.android.server.policy.PhoneWindowManager$5</string>
          <string>com.android.server.policy.StatusBarController</string>
          <string>com.android.server.policy.GlobalActions$2</string>
          <string>com.android.server.policy.PhoneWindowManager$4</string>
          <string>com.android.server.policy.PhoneWindowManager$7</string>
          <string>com.android.server.policy.PhoneWindowManager$6</string>
          <string>android.service.dreams.IDreamManager$Stub</string>
          <string>android.view.WindowManagerPolicy$InputConsumer</string>
          <string>com.android.server.policy.PhoneWindowManager$PolicyHandler</string>
          <string>com.android.internal.app.AlertController$CheckedItemAdapter</string>
          <string>android.hardware.TriggerEvent</string>
          <string>com.android.server.policy.GlobalActions$GlobalActionsDialog$1</string>
          <string>com.android.server.policy.GlobalActions$SilentModeTriStateAction</string>
          <string>com.android.server.policy.GlobalActions$Action</string>
          <string>com.android.server.policy.PhoneWindowManager$ScreenshotRunnable</string>
          <string>com.android.internal.util.ScreenShapeHelper</string>
          <string>com.android.internal.app.AlertController$AlertParams</string>
          <string>android.view.WindowManagerPolicy$WindowState</string>
          <string>com.android.server.policy.ImmersiveModeConfirmation$2</string>
          <string>android.view.accessibility.IAccessibilityInteractionConnection</string>
          <string>com.android.server.policy.ImmersiveModeConfirmation$1</string>
          <string>com.android.server.policy.PolicyControl$Filter</string>
          <string>com.android.server.policy.SystemGesturesPointerEventListener</string>
          <string>com.android.server.policy.ImmersiveModeConfirmation$H</string>
          <string>com.android.server.policy.PhoneWindowManager$21$1</string>
          <string>com.android.server.policy.GlobalActions$LongPressAction</string>
          <string>android.service.dreams.IDreamManager$Stub$Proxy</string>
          <string>android.app.IUiModeManager$Stub</string>
          <string>android.hardware.TriggerEventListener</string>
          <string>android.content.ServiceConnection</string>
          <string>android.animation.ArgbEvaluator</string>
          <string>com.android.server.policy.PolicyControl</string>
          <string>com.android.server.policy.StatusBarController$1$3</string>
          <string>com.android.server.policy.StatusBarController$1$4</string>
          <string>android.view.accessibility.IAccessibilityInteractionConnection$Stub</string>
          <string>com.android.server.policy.EnableAccessibilityController</string>
          <string>android.content.DialogInterface$OnKeyListener</string>
          <string>com.android.server.policy.PhoneWindowManager$17$1</string>
          <string>com.android.server.policy.WindowOrientationListener$OrientationSensorJudge</string>
          <string>com.android.server.policy.StatusBarController$1$1</string>
          <string>com.android.server.policy.StatusBarController$1$2</string>
          <string>android.view.accessibility.IAccessibilityManager$Stub</string>
          <string>com.android.server.policy.BurnInProtectionHelper</string>
          <string>android.widget.BaseAdapter</string>
          <string>android.util.MutableBoolean</string>
          <string>com.android.server.policy.BarController</string>
          <string>com.android.server.policy.GlobalActions</string>
          <string>android.database.Observable</string>
          <string>com.android.server.policy.PhoneWindowManager$19</string>
          <string>com.android.server.policy.PhoneWindowManager$HdmiControl</string>
          <string>com.android.server.policy.PhoneWindowManager$SettingsObserver</string>
          <string>android.app.IActivityManager</string>
          <string>com.android.internal.app.AlertController$AlertParams$1</string>
          <string>com.android.server.policy.GlobalActions$PowerAction</string>
          <string>com.android.internal.app.AlertController$AlertParams$2</string>
          <string>com.android.server.policy.PhoneWindowManager$22</string>
          <string>com.android.internal.app.AlertController$AlertParams$3</string>
          <string>android.hardware.SensorEvent</string>
          <string>com.android.internal.app.AlertController$AlertParams$4</string>
          <string>android.widget.AdapterView$OnItemLongClickListener</string>
          <string>android.app.IUiModeManager</string>
          <string>android.view.accessibility.IAccessibilityManager</string>
          <string>com.android.server.policy.PhoneWindowManager$20</string>
          <string>com.android.server.policy.StatusBarController$1</string>
          <string>android.widget.FrameLayout$LayoutParams</string>
          <string>com.android.server.policy.PhoneWindowManager$21</string>
          <string>com.android.server.policy.PhoneWindowManager$HideNavInputEventReceiver</string>
          <string>android.view.KeyCharacterMap$FallbackAction</string>
          <string>android.hardware.hdmi.HdmiPlaybackClient$OneTouchPlayCallback</string>
          <string>android.database.DataSetObservable</string>
          <string>com.android.server.policy.PhoneWindowManager$13</string>
          <string>com.android.server.policy.PhoneWindowManager$14</string>
          <string>android.view.WindowManagerPolicy$WindowManagerFuncs</string>
          <string>com.android.server.policy.BarController$1</string>
          <string>com.android.server.policy.PhoneWindowManager$11</string>
          <string>com.android.server.policy.PhoneWindowManager$12</string>
          <string>com.android.server.policy.PhoneWindowManager$17</string>
          <string>com.android.server.policy.PhoneWindowManager$18</string>
          <string>com.android.server.policy.PhoneWindowManager$15</string>
          <string>com.android.server.policy.PhoneWindowManager$16</string>
          <string>com.android.server.policy.WakeGestureListener$2</string>
          <string>com.android.server.policy.GlobalActions$ToggleAction</string>
          <string>com.android.server.policy.WakeGestureListener$1</string>
          <string>com.android.server.policy.ShortcutManager$ShortcutInfo</string>
          <string>com.android.server.policy.PhoneWindowManager$10</string>
          <string>com.android.server.policy.GlobalActions$BugReportAction$1</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.graphics.ss</name>
        <entities>
          <string>android.graphics.Rect</string>
          <string>android.graphics.PointF</string>
          <string>android.graphics.Paint$NoImagePreloadHolder</string>
          <string>android.graphics.Rasterizer</string>
          <string>java.nio.channels.FileChannel$MapMode</string>
          <string>android.graphics.Atlas$SlicePolicy</string>
          <string>android.graphics.Picture$RecordingCanvas</string>
          <string>android.graphics.Paint$FontMetrics</string>
          <string>android.graphics.LayerRasterizer</string>
          <string>android.graphics.FontListParser</string>
          <string>android.graphics.FontListParser$Font</string>
          <string>android.graphics.Canvas</string>
          <string>android.graphics.Matrix</string>
          <string>android.graphics.Canvas$VertexMode</string>
          <string>android.graphics.FontListParser$Family</string>
          <string>android.graphics.RectF</string>
          <string>android.graphics.Bitmap$1</string>
          <string>android.graphics.Rect$UnflattenHelper</string>
          <string>android.graphics.SurfaceTexture$OutOfResourcesException</string>
          <string>android.graphics.Rect$1</string>
          <string>android.graphics.Region</string>
          <string>android.graphics.Atlas$Policy</string>
          <string>android.graphics.Atlas$SlicePolicy$ShorterFreeAxisSplitDecision</string>
          <string>android.graphics.Interpolator</string>
          <string>android.graphics.Matrix$ScaleToFit</string>
          <string>android.graphics.Region$1</string>
          <string>android.graphics.Atlas$SlicePolicy$LongerFreeAxisSplitDecision</string>
          <string>android.graphics.Paint</string>
          <string>java.lang.ArrayStoreException</string>
          <string>android.graphics.Typeface</string>
          <string>android.graphics.TemporaryBuffer</string>
          <string>android.graphics.Path</string>
          <string>android.graphics.FontListParser$Axis</string>
          <string>android.graphics.SurfaceTexture$1</string>
          <string>android.graphics.PathDashPathEffect$Style</string>
          <string>libcore.util.NativeAllocationRegistry</string>
          <string>android.graphics.Point$1</string>
          <string>android.graphics.Path$Op</string>
          <string>android.graphics.AvoidXfermode</string>
          <string>android.graphics.Atlas</string>
          <string>android.graphics.Atlas$SlicePolicy$Cell</string>
          <string>android.graphics.AvoidXfermode$Mode</string>
          <string>android.graphics.FontListParser$Config</string>
          <string>android.graphics.FontListParser$Alias</string>
          <string>android.graphics.Canvas$NoImagePreloadHolder</string>
          <string>android.graphics.Atlas$SlicePolicy$MaxAreaSplitDecision</string>
          <string>android.graphics.Atlas$Entry</string>
          <string>android.graphics.SurfaceTexture</string>
          <string>android.graphics.Atlas$SlicePolicy$MinAreaSplitDecision</string>
          <string>android.graphics.PathDashPathEffect</string>
          <string>android.graphics.Point</string>
          <string>android.graphics.PointF$1</string>
          <string>android.graphics.RectF$1</string>
          <string>android.graphics.Picture</string>
          <string>android.graphics.Bitmap</string>
          <string>android.graphics.Atlas$SlicePolicy$SplitDecision</string>
          <string>android.graphics.Matrix$1</string>
          <string>android.graphics.FontFamily</string>
          <string>java.nio.MappedByteBuffer</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.media.ss</name>
        <entities>
          <string>android.media.MediaRouterClientState</string>
          <string>android.media.MediaPlayer$OnInfoListener</string>
          <string>android.media.Cea708CCParser$CaptionPenColor</string>
          <string>java.util.Vector</string>
          <string>android.media.ClosedCaptionRenderer</string>
          <string>android.media.TimedText$HyperText</string>
          <string>android.media.PlaybackParams</string>
          <string>android.media.RemoteDisplay$2</string>
          <string>android.media.MediaPlayer$OnSubtitleDataListener</string>
          <string>android.media.RemoteDisplay$1</string>
          <string>android.media.AudioManager$RecordConfigChangeCallbackData</string>
          <string>android.media.RemoteDisplay$3</string>
          <string>android.media.RemoteControlClient$OnMetadataUpdateListener</string>
          <string>android.media.IMediaHTTPConnection$Stub$Proxy</string>
          <string>android.media.MediaHTTPConnection</string>
          <string>android.media.AudioManager$OnAmPortUpdateListener</string>
          <string>android.media.MediaRecorder</string>
          <string>java.nio.ByteOrder</string>
          <string>android.media.WebVttRenderingWidget$CueLayout</string>
          <string>android.media.Cea708CCParser$CaptionPenAttr</string>
          <string>android.media.Cea608CCParser$DisplayListener</string>
          <string>android.media.MediaMetadataEditor</string>
          <string>android.media.SyncParams</string>
          <string>android.media.MediaCodec$Callback</string>
          <string>android.media.Rating</string>
          <string>android.media.TextTrackCueSpan</string>
          <string>android.media.ExifInterface</string>
          <string>android.media.AudioRecord$NativeEventHandler</string>
          <string>android.media.MediaDataSource</string>
          <string>android.media.MediaDescription$1</string>
          <string>android.media.AudioManager$2</string>
          <string>android.media.DrmInitData</string>
          <string>android.media.AudioManager$1</string>
          <string>android.media.MediaRecorder$EventHandler</string>
          <string>android.media.ResourceBusyException</string>
          <string>android.media.WebVttRenderingWidget$SpanLayout</string>
          <string>android.media.TextTrackCue</string>
          <string>android.media.AsyncPlayer$Command</string>
          <string>android.media.JetPlayer</string>
          <string>android.media.Cea708CCParser$CaptionWindow</string>
          <string>android.media.RemoteController$OnClientUpdateListener</string>
          <string>android.media.DecoderCapabilities</string>
          <string>android.media.MediaScanner$WplHandler</string>
          <string>android.media.TtmlUtils</string>
          <string>android.media.MediaFile</string>
          <string>android.media.MediaTimeProvider</string>
          <string>android.media.Cea608CCParser$MutableBackgroundColorSpan</string>
          <string>android.media.ImageWriter</string>
          <string>android.media.MediaScanner$MediaBulkDeleter</string>
          <string>android.media.Cea608CCParser$CCMemory</string>
          <string>android.media.IMediaScannerListener$Stub$Proxy</string>
          <string>android.media.MediaSync$1</string>
          <string>android.media.MediaSync$3</string>
          <string>android.media.MediaSync$2</string>
          <string>android.media.ClosedCaptionWidget$ClosedCaptionLayout</string>
          <string>android.media.JetPlayer$NativeEventHandler</string>
          <string>android.media.AudioRecord$NativeRoutingEventHandlerDelegate$1</string>
          <string>android.media.PlayerBase</string>
          <string>android.media.MediaInserter</string>
          <string>android.media.AudioAttributes$Builder</string>
          <string>android.media.SubtitleTrack$CueList$EntryIterator</string>
          <string>android.media.MediaRecorder$VideoEncoder</string>
          <string>android.media.MediaRecorder$OnErrorListener</string>
          <string>libcore.io.Libcore</string>
          <string>android.media.AudioRecord$NativeRoutingEventHandlerDelegate</string>
          <string>android.media.MediaMuxer</string>
          <string>android.media.MediaActionSound</string>
          <string>android.media.ImageWriter$ListenerHandler</string>
          <string>android.media.MediaCrypto</string>
          <string>android.media.AudioManager$ServiceEventHandlerDelegate</string>
          <string>android.media.AudioFormat$1</string>
          <string>android.media.IMediaHTTPConnection</string>
          <string>android.media.EncoderCapabilities$VideoEncoderCap</string>
          <string>android.media.TimedText$Justification</string>
          <string>android.media.MediaPlayer</string>
          <string>android.media.Tokenizer$OnTokenListener</string>
          <string>android.media.AudioTrack$OnPlaybackPositionUpdateListener</string>
          <string>android.media.MediaRouterClientState$1</string>
          <string>android.media.ExifInterface$ByteOrderAwarenessDataInputStream</string>
          <string>android.media.Cea708CCParser</string>
          <string>android.media.AudioPortEventHandler$1</string>
          <string>android.media.MediaCodec$PersistentSurface</string>
          <string>android.media.JetPlayer$OnJetEventListener</string>
          <string>android.media.UnsupportedSchemeException</string>
          <string>android.os.HandlerThread</string>
          <string>android.media.session.MediaController$TransportControls</string>
          <string>android.media.MediaPlayer$OnSeekCompleteListener</string>
          <string>android.media.MediaDrm$Certificate</string>
          <string>android.media.UnstyledTextExtractor</string>
          <string>android.hardware.Camera$CameraInfo</string>
          <string>android.media.IMediaResourceMonitor$Stub</string>
          <string>android.media.MediaCodec$CryptoInfo</string>
          <string>android.media.TtmlRenderingWidget</string>
          <string>android.media.Cea608CCParser$PAC</string>
          <string>android.media.Cea708CCWidget$ScaledLayout$1</string>
          <string>android.media.MediaScannerConnection$MediaScannerConnectionClient</string>
          <string>android.media.MediaDrm$OnExpirationUpdateListener</string>
          <string>android.media.MediaDrm$OnKeyStatusChangeListener</string>
          <string>android.media.MediaCodec$CryptoException</string>
          <string>android.media.WebVttRenderingWidget$1</string>
          <string>android.media.AudioPortEventHandler</string>
          <string>com.android.internal.widget.SubtitleView</string>
          <string>java.net.UnknownServiceException</string>
          <string>android.media.MediaCodec$EventHandler</string>
          <string>android.media.Cea608CaptionTrack</string>
          <string>android.media.TimedText$CharPos</string>
          <string>android.media.MediaSync</string>
          <string>android.media.MiniThumbFile</string>
          <string>android.media.MediaFormat</string>
          <string>android.media.AsyncPlayer$Thread</string>
          <string>android.media.AudioFormat</string>
          <string>android.media.SoundPool$EventHandler</string>
          <string>java.lang.AssertionError</string>
          <string>android.media.MediaCodec$BufferMap</string>
          <string>android.media.AudioTrackRoutingProxy</string>
          <string>android.media.AudioManager$NativeEventHandlerDelegate$1</string>
          <string>android.media.MediaPlayer$4</string>
          <string>android.media.TtmlCue</string>
          <string>android.media.MediaPlayer$2</string>
          <string>android.media.MediaPlayer$3</string>
          <string>android.media.MediaPlayer$1</string>
          <string>android.media.MediaCodecList</string>
          <string>android.media.MediaCodec$MediaImage</string>
          <string>android.media.SubtitleData</string>
          <string>android.media.AudioMixPortConfig</string>
          <string>android.media.IMediaScannerListener</string>
          <string>android.media.AudioRecord</string>
          <string>android.media.SubtitleTrack</string>
          <string>android.text.Layout$Alignment</string>
          <string>android.media.DeniedByServerException</string>
          <string>android.media.SubtitleTrack$1</string>
          <string>android.media.SubtitleTrack$Cue</string>
          <string>android.media.MediaDrm$EventHandler</string>
          <string>android.media.ImageWriter$WriterSurfaceImage</string>
          <string>android.media.CamcorderProfile</string>
          <string>android.media.MediaCodec$MediaImage$MediaPlane</string>
          <string>android.media.MediaCodecInfo$CodecProfileLevel</string>
          <string>android.media.MediaPlayer$TimeProvider$EventHandler</string>
          <string>android.media.MediaDrm$KeyStatus</string>
          <string>android.media.TtmlTrack</string>
          <string>android.media.TtmlNodeListener</string>
          <string>android.media.IMediaScannerListener$Stub</string>
          <string>android.media.AudioAttributes$1</string>
          <string>android.media.MediaCodecInfo</string>
          <string>android.media.MediaMuxer$OutputFormat</string>
          <string>android.media.WebVttParser$1</string>
          <string>android.media.WebVttParser$2</string>
          <string>android.media.WebVttParser$3</string>
          <string>android.media.WebVttParser$4</string>
          <string>android.media.AudioRouting$OnRoutingChangedListener</string>
          <string>android.media.MediaPlayer$OnTimedMetaDataAvailableListener</string>
          <string>android.media.WebVttParser$5</string>
          <string>android.media.WebVttParser$6</string>
          <string>android.media.AudioPort</string>
          <string>android.media.MediaRouter$UserRouteInfo$SessionVolumeProvider$2</string>
          <string>android.media.MediaScanner$PlaylistEntry</string>
          <string>android.media.MediaRouter$UserRouteInfo$SessionVolumeProvider$1</string>
          <string>android.media.MediaPlayer$OnTimedTextListener</string>
          <string>android.media.MediaMetadata$1</string>
          <string>android.media.Tokenizer$TagTokenizer</string>
          <string>android.media.ImageWriter$OnImageReleasedListener</string>
          <string>android.media.Cea708CCParser$DisplayListener</string>
          <string>android.media.SubtitleController</string>
          <string>android.media.Utils$2</string>
          <string>android.media.AudioFocusInfo$1</string>
          <string>android.media.MediaCodec</string>
          <string>android.media.Utils$1</string>
          <string>android.media.MediaPlayer$TimeProvider</string>
          <string>android.media.MediaCodecInfo$CodecCapabilities</string>
          <string>android.media.AudioRecordRoutingProxy</string>
          <string>java.util.SortedMap</string>
          <string>android.media.MediaDrm$MediaDrmStateException</string>
          <string>android.media.MediaDescription</string>
          <string>android.media.TextTrackRegion</string>
          <string>android.media.MediaCodecInfo$Feature</string>
          <string>android.media.AsyncPlayer</string>
          <string>java.text.ParsePosition</string>
          <string>android.media.DecoderCapabilities$VideoDecoder</string>
          <string>android.media.AudioTimestamp</string>
          <string>android.media.IMediaHTTPService$Stub$Proxy</string>
          <string>android.media.NotProvisionedException</string>
          <string>android.media.MediaCodec$BufferMap$CodecBuffer</string>
          <string>android.media.MediaScannerConnection$1</string>
          <string>android.media.AudioRoutesInfo</string>
          <string>android.media.MediaMetadata$Builder</string>
          <string>android.media.AudioTrack$NativeRoutingEventHandlerDelegate$1</string>
          <string>android.media.Cea708CCParser$CaptionEvent</string>
          <string>android.media.MediaDrm$KeyRequest</string>
          <string>android.media.MediaRouter$UserRouteInfo</string>
          <string>android.media.MediaRecorder$VideoSource</string>
          <string>android.media.AudioTrack$NativeRoutingEventHandlerDelegate</string>
          <string>android.media.Cea708CCWidget$CCView</string>
          <string>android.media.ImageWriter$WriterSurfaceImage$SurfacePlane</string>
          <string>android.media.ThumbnailUtils</string>
          <string>android.media.EncoderCapabilities</string>
          <string>android.media.MediaDrm</string>
          <string>android.media.MediaExtractor$1</string>
          <string>android.media.MediaExtractor$2</string>
          <string>android.media.Cea708CCParser$CaptionColor</string>
          <string>android.media.RemoteControlClient$OnPlaybackPositionUpdateListener</string>
          <string>android.media.IMediaScannerService$Stub</string>
          <string>android.media.AudioManager$AudioRecordingCallback</string>
          <string>android.media.AudioRecordingConfiguration$1</string>
          <string>android.media.SRTRenderer</string>
          <string>android.media.AudioDevicePort</string>
          <string>android.media.AudioManager$AudioRecordingCallbackInfo</string>
          <string>android.media.VolumePolicy</string>
          <string>android.media.WebVttTrack</string>
          <string>android.media.WebVttParser</string>
          <string>android.media.AudioManager$ServiceEventHandlerDelegate$1</string>
          <string>android.media.AudioMixPort</string>
          <string>android.media.AudioDeviceInfo</string>
          <string>android.media.RemoteDisplayState$1</string>
          <string>android.media.MediaDrm$CertificateRequest</string>
          <string>android.media.DecoderCapabilities$AudioDecoder</string>
          <string>android.media.SoundPool</string>
          <string>android.media.Cea608CCWidget$CCLayout</string>
          <string>android.media.AudioTrack$OnRoutingChangedListener</string>
          <string>android.view.accessibility.CaptioningManager$CaptioningChangeListener</string>
          <string>android.media.IMediaHTTPService</string>
          <string>android.media.MediaCodec$OnFrameRenderedListener</string>
          <string>android.media.Cea608CCWidget$CCLineBox</string>
          <string>android.media.ImageReader$OnImageAvailableListener</string>
          <string>android.media.AudioRecordingConfiguration</string>
          <string>android.media.TtmlParser</string>
          <string>android.media.AudioGainConfig</string>
          <string>android.media.MediaExtractor</string>
          <string>android.media.MediaSync$AudioBuffer</string>
          <string>android.media.MediaDrm$ProvisionRequest</string>
          <string>android.media.ExifInterface$ExifTag</string>
          <string>android.media.AudioRecord$Builder</string>
          <string>android.media.SubtitleTrack$CueList</string>
          <string>android.media.SubtitleController$Anchor</string>
          <string>android.media.Cea608CCParser$CCLineBuilder</string>
          <string>android.media.AudioManager$OnAudioPortUpdateListener</string>
          <string>android.media.WebVttRenderingWidget</string>
          <string>android.media.FaceDetector$Face</string>
          <string>android.media.IMediaResourceMonitor</string>
          <string>android.media.MediaPlayer$OnBufferingUpdateListener</string>
          <string>android.media.ClosedCaptionWidget</string>
          <string>android.media.Ringtone$MyOnCompletionListener</string>
          <string>android.media.Ringtone</string>
          <string>android.media.AudioGain</string>
          <string>android.media.MediaScannerConnection$ClientProxy</string>
          <string>android.media.MediaRecorder$AudioSource</string>
          <string>android.media.RemoteController$EventHandler</string>
          <string>android.media.AudioPatch</string>
          <string>java.nio.channels.FileLock</string>
          <string>android.media.ImageUtils</string>
          <string>android.media.AudioRoutesInfo$1</string>
          <string>android.media.Image</string>
          <string>android.media.IMediaResourceMonitor$Stub$Proxy</string>
          <string>android.media.PlayerBase$1</string>
          <string>android.media.RemoteController</string>
          <string>android.media.MediaRouter$VolumeCallback</string>
          <string>android.media.MediaScannerClient</string>
          <string>android.media.TtmlNode</string>
          <string>android.media.SubtitleTrack$Run</string>
          <string>android.media.RemoteController$MetadataEditor</string>
          <string>android.media.PlaybackParams$1</string>
          <string>android.media.MediaScanner</string>
          <string>android.media.MediaDrmException</string>
          <string>android.media.IRemoteVolumeObserver$Stub$Proxy</string>
          <string>java.util.UUID</string>
          <string>android.media.SubtitleController$Listener</string>
          <string>android.media.AudioManager$NativeEventHandlerDelegate</string>
          <string>java.net.CookieManager</string>
          <string>android.media.Cea608CCParser</string>
          <string>android.media.MediaRouter</string>
          <string>android.media.IMediaHTTPConnection$Stub</string>
          <string>android.media.TtmlRenderer</string>
          <string>android.media.RemoteController$MediaControllerCallback</string>
          <string>android.media.AudioHandle</string>
          <string>android.media.Cea708CaptionTrack</string>
          <string>android.media.ExifInterface$Rational</string>
          <string>android.media.ImageReader$SurfaceImage$SurfacePlane</string>
          <string>android.media.Cea708CCWidget$ScaledLayout$ScaledLayoutParams</string>
          <string>android.media.AudioManager</string>
          <string>android.media.DrmInitData$SchemeInitData</string>
          <string>android.media.Cea708CCParser$1</string>
          <string>android.media.MediaPlayer$2$1</string>
          <string>android.media.AudioAttributes</string>
          <string>android.media.Utils</string>
          <string>android.media.MediaRecorder$OnInfoListener</string>
          <string>android.media.Cea608CCParser$CCData</string>
          <string>android.media.TimedText</string>
          <string>android.media.RemoteDisplay</string>
          <string>android.media.MediaPlayer$EventHandler</string>
          <string>android.media.MediaPlayer$TrackInfo$1</string>
          <string>android.media.MediaHTTPService</string>
          <string>android.mtp.MtpConstants</string>
          <string>android.media.EncoderCapabilities$AudioEncoderCap</string>
          <string>android.media.IMediaScannerService</string>
          <string>android.media.WebVttCueListener</string>
          <string>android.media.AudioDevicePortConfig</string>
          <string>android.media.Tokenizer</string>
          <string>android.media.RemoteControlClient$1</string>
          <string>android.media.MediaSync$Callback</string>
          <string>android.media.MediaCodec$BufferInfo</string>
          <string>android.media.MediaScanner$FileEntry</string>
          <string>android.media.ClosedCaptionWidget$1</string>
          <string>android.media.AudioRouting</string>
          <string>android.media.MediaCodecInfo$VideoCapabilities</string>
          <string>android.media.FaceDetector</string>
          <string>android.media.MediaDescription$Builder</string>
          <string>android.media.AudioDeviceCallback</string>
          <string>android.media.IMediaScannerService$Stub$Proxy</string>
          <string>android.media.SubtitleController$2</string>
          <string>android.media.Cea708CCWidget</string>
          <string>android.media.SubtitleController$1</string>
          <string>android.media.Cea608CCWidget</string>
          <string>android.media.RemoteControlClient$OnGetPlaybackPositionListener</string>
          <string>android.media.MediaScannerConnection</string>
          <string>android.media.AudioRecord$OnRecordPositionUpdateListener</string>
          <string>android.media.VolumePolicy$1</string>
          <string>android.media.MediaCodecInfo$EncoderCapabilities</string>
          <string>java.io.FilterOutputStream</string>
          <string>android.media.Cea708CCWidget$CCLayout</string>
          <string>android.media.AudioManager$OnAudioFocusChangeListener</string>
          <string>android.media.MediaPlayer$OnErrorListener</string>
          <string>android.media.IRemoteVolumeObserver</string>
          <string>java.lang.Double</string>
          <string>android.media.MediaRecorder$AudioEncoder</string>
          <string>android.media.AudioRecord$OnRoutingChangedListener</string>
          <string>android.media.Cea608CCParser$StyleCode</string>
          <string>android.media.MediaSyncEvent</string>
          <string>android.media.MediaDrm$CryptoSession</string>
          <string>libcore.io.Os</string>
          <string>android.media.TimedText$Style</string>
          <string>android.media.MediaPlayer$TrackInfo</string>
          <string>android.media.MediaCryptoException</string>
          <string>android.media.MediaRouter$VolumeCallbackInfo</string>
          <string>android.media.TimedText$Karaoke</string>
          <string>android.media.MediaRouter$CallbackInfo</string>
          <string>java.lang.NumberFormatException</string>
          <string>android.media.MediaDrm$OnEventListener</string>
          <string>android.media.RemoteController$TopTransportSessionListener</string>
          <string>android.media.MediaCodec$CryptoInfo$Pattern</string>
          <string>android.view.accessibility.CaptioningManager$CaptionStyle</string>
          <string>java.lang.Comparable</string>
          <string>android.media.ImageReader$ListenerHandler</string>
          <string>android.media.MediaMetadata</string>
          <string>android.media.Tokenizer$DataTokenizer</string>
          <string>android.media.Cea708CCParser$Const</string>
          <string>android.media.RemoteControlClient$MetadataEditor</string>
          <string>android.media.MediaScanner$MyMediaScannerClient</string>
          <string>android.media.AudioTrack$NativePositionEventHandlerDelegate$1</string>
          <string>android.media.Cea708CCWidget$CCHandler</string>
          <string>android.media.Cea708CCWidget$ScaledLayout</string>
          <string>android.media.MediaCodecInfo$AudioCapabilities</string>
          <string>android.media.Image$Plane</string>
          <string>android.media.TimedText$Font</string>
          <string>android.media.ImageReader$SurfaceImage</string>
          <string>android.media.AudioFocusInfo</string>
          <string>android.media.MediaScannerConnection$OnScanCompletedListener</string>
          <string>android.media.ExifInterface$ExifAttribute</string>
          <string>android.media.RemoteDisplay$Listener</string>
          <string>android.media.Cea708CCParser$CaptionWindowAttr</string>
          <string>android.media.AudioPortConfig</string>
          <string>android.media.MediaActionSound$SoundState</string>
          <string>android.media.SRTTrack</string>
          <string>android.media.MediaSync$OnErrorListener</string>
          <string>android.media.WebVttParser$Phase</string>
          <string>android.media.ExifInterface$ByteOrderAwarenessDataOutputStream</string>
          <string>android.media.SubtitleTrack$CueList$1</string>
          <string>android.media.MediaRecorder$OutputFormat</string>
          <string>android.media.Tokenizer$TokenizerPhase</string>
          <string>android.media.AudioTrack$NativePositionEventHandlerDelegate</string>
          <string>java.net.NoRouteToHostException</string>
          <string>android.media.Rating$1</string>
          <string>android.media.RemoteController$PlaybackInfo</string>
          <string>android.media.Cea708CaptionRenderer</string>
          <string>android.media.ThumbnailUtils$SizedThumbnailBitmap</string>
          <string>android.media.MediaMetadataRetriever</string>
          <string>android.media.IRemoteVolumeObserver$Stub</string>
          <string>android.util.Pair</string>
          <string>android.media.MediaTimestamp</string>
          <string>android.media.AudioTrack</string>
          <string>android.media.MediaCodec$CodecException</string>
          <string>android.media.MediaTimeProvider$OnMediaTimeListener</string>
          <string>java.net.CookieHandler</string>
          <string>android.media.RemoteDisplayState</string>
          <string>org.xml.sax.ContentHandler</string>
          <string>android.media.AudioTrack$Builder</string>
          <string>android.media.MediaActionSound$1</string>
          <string>android.media.Cea708CCWidget$CCWindowLayout</string>
          <string>android.media.ImageReader</string>
          <string>android.media.SoundPool$1</string>
          <string>android.media.MediaRouter$UserRouteInfo$SessionVolumeProvider</string>
          <string>android.media.IMediaHTTPService$Stub</string>
          <string>android.media.RemoteControlClient</string>
          <string>java.nio.NioUtils</string>
          <string>android.media.MediaFile$MediaFileType</string>
          <string>android.media.WebVttRenderingWidget$RegionLayout</string>
          <string>android.media.TimedMetaData</string>
          <string>android.media.Cea708CCParser$CaptionPenLocation</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.nfc.tech.ss</name>
        <entities>
          <string>android.nfc.tech.BasicTagTechnology</string>
          <string>android.nfc.tech.TagTechnology</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.media.session.ss</name>
        <entities>
          <string>android.media.VolumeProvider</string>
          <string>android.media.session.MediaSessionManager$OnActiveSessionsChangedListener</string>
          <string>android.media.session.ISessionManager$Stub$Proxy</string>
          <string>android.media.session.MediaController$MessageHandler</string>
          <string>android.media.session.MediaController$Callback</string>
          <string>android.media.session.MediaSession$Callback</string>
          <string>android.media.session.MediaSessionLegacyHelper</string>
          <string>android.media.session.MediaSession$QueueItem</string>
          <string>android.media.session.MediaSession$1</string>
          <string>android.media.session.MediaSession</string>
          <string>android.media.session.MediaSessionManager$SessionsChangedWrapper</string>
          <string>android.media.session.MediaSessionManager$SessionsChangedWrapper$1</string>
          <string>android.media.session.MediaSessionLegacyHelper$SessionHolder$SessionCallback</string>
          <string>android.media.session.MediaSessionManager$SessionsChangedWrapper$1$1</string>
          <string>android.media.session.MediaController</string>
          <string>android.media.session.MediaSessionLegacyHelper$MediaButtonListener</string>
          <string>android.media.session.PlaybackState$1</string>
          <string>android.media.session.ISessionManager$Stub</string>
          <string>android.media.session.MediaSession$Command</string>
          <string>android.media.session.ParcelableVolumeInfo</string>
          <string>android.media.session.MediaController$CallbackStub</string>
          <string>android.media.session.MediaSession$CallbackMessageHandler</string>
          <string>android.media.session.MediaController$PlaybackInfo</string>
          <string>android.media.VolumeProvider$Callback</string>
          <string>android.media.session.MediaSessionLegacyHelper$SessionHolder</string>
          <string>android.media.session.MediaSession$CallbackStub</string>
          <string>android.media.session.ParcelableVolumeInfo$1</string>
          <string>android.media.session.PlaybackState</string>
          <string>android.media.session.ISessionManager</string>
          <string>android.media.session.IActiveSessionsListener$Stub</string>
          <string>android.media.session.MediaSession$QueueItem$1</string>
          <string>android.media.session.MediaSessionManager</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.text.ss</name>
        <entities>
          <string>android.text.AlteredCharSequence$AlteredSpanned</string>
          <string>android.text.LoginFilter$PasswordFilterGMail</string>
          <string>android.text.style.LineHeightSpan</string>
          <string>android.text.HtmlToSpannedConverter$Strikethrough</string>
          <string>android.text.HtmlToSpannedConverter$Sub</string>
          <string>android.text.style.AbsoluteSizeSpan</string>
          <string>android.text.Selection</string>
          <string>java.lang.Character</string>
          <string>android.text.HtmlToSpannedConverter$Italic</string>
          <string>android.text.style.ForegroundColorSpan</string>
          <string>android.text.TextUtils$TruncateAt</string>
          <string>android.text.TextUtils$EllipsizeCallback</string>
          <string>java.lang.StringIndexOutOfBoundsException</string>
          <string>android.text.style.MetricAffectingSpan</string>
          <string>android.text.HtmlToSpannedConverter$Heading</string>
          <string>android.text.BidiFormatter$DirectionalityEstimator</string>
          <string>android.text.style.LineBackgroundSpan</string>
          <string>android.text.Layout</string>
          <string>android.text.style.LeadingMarginSpan$Standard</string>
          <string>android.text.style.WrapTogetherSpan</string>
          <string>android.text.TextPaint</string>
          <string>android.text.Html</string>
          <string>android.text.style.SuperscriptSpan</string>
          <string>android.text.Html$ImageGetter</string>
          <string>android.text.style.LeadingMarginSpan$LeadingMarginSpan2</string>
          <string>android.text.StaticLayout$Builder</string>
          <string>android.text.Layout$Ellipsizer</string>
          <string>android.text.NoCopySpan</string>
          <string>org.xml.sax.Locator</string>
          <string>android.text.LoginFilter$UsernameFilterGeneric</string>
          <string>android.text.HtmlToSpannedConverter$Alignment</string>
          <string>android.text.style.DrawableMarginSpan</string>
          <string>org.xml.sax.XMLReader</string>
          <string>android.text.SpannableStringBuilder</string>
          <string>android.text.TextDirectionHeuristics</string>
          <string>android.text.style.UpdateAppearance</string>
          <string>android.text.HtmlToSpannedConverter$Bullet</string>
          <string>android.text.AndroidCharacter</string>
          <string>android.text.Annotation</string>
          <string>android.text.style.AlignmentSpan$Standard</string>
          <string>android.text.ParcelableSpan</string>
          <string>android.text.TextUtils$StringSplitter</string>
          <string>android.text.style.StyleSpan</string>
          <string>android.text.TextUtils</string>
          <string>android.text.TextDirectionHeuristics$TextDirectionHeuristicLocale</string>
          <string>android.text.PackedIntVector</string>
          <string>android.text.LoginFilter$UsernameFilterGMail</string>
          <string>android.text.TextUtils$1</string>
          <string>android.text.TextDirectionHeuristics$AnyStrong</string>
          <string>android.text.BidiFormatter$Builder</string>
          <string>android.text.style.LeadingMarginSpan</string>
          <string>android.text.style.StrikethroughSpan</string>
          <string>android.text.BidiFormatter</string>
          <string>android.text.style.AlignmentSpan</string>
          <string>android.text.Html$HtmlParser</string>
          <string>org.xml.sax.SAXNotSupportedException</string>
          <string>android.text.style.UnderlineSpan</string>
          <string>android.text.HtmlToSpannedConverter$Small</string>
          <string>android.text.style.TypefaceSpan</string>
          <string>android.text.HtmlToSpannedConverter$Background</string>
          <string>android.text.style.QuoteSpan</string>
          <string>android.text.AlteredCharSequence</string>
          <string>android.text.PackedObjectVector</string>
          <string>android.text.TextDirectionHeuristics$TextDirectionHeuristicImpl</string>
          <string>android.text.style.LocaleSpan</string>
          <string>org.ccil.cowan.tagsoup.HTMLSchema</string>
          <string>android.text.Selection$PositionIterator</string>
          <string>java.util.IdentityHashMap</string>
          <string>android.text.Selection$START</string>
          <string>android.text.AndroidBidi</string>
          <string>android.text.TextUtils$Reverser</string>
          <string>android.text.style.LineHeightSpan$WithDensity</string>
          <string>android.text.style.SubscriptSpan</string>
          <string>android.text.style.ReplacementSpan</string>
          <string>android.text.Layout$SpannedEllipsizer</string>
          <string>android.text.HtmlToSpannedConverter$Bold</string>
          <string>android.text.StaticLayout</string>
          <string>android.text.DynamicLayout</string>
          <string>com.android.internal.util.GrowingArrayUtils</string>
          <string>android.text.LoginFilter</string>
          <string>android.text.TextDirectionHeuristics$FirstStrong</string>
          <string>android.text.style.RasterizerSpan</string>
          <string>android.graphics.Paint$FontMetricsInt</string>
          <string>android.text.HtmlToSpannedConverter$Big</string>
          <string>android.text.Html$TagHandler</string>
          <string>android.text.TextDirectionHeuristic</string>
          <string>org.xml.sax.SAXNotRecognizedException</string>
          <string>android.text.DynamicLayout$ChangeWatcher</string>
          <string>android.text.HtmlToSpannedConverter$Underline</string>
          <string>android.text.HtmlToSpannedConverter$Href</string>
          <string>org.xml.sax.Attributes</string>
          <string>android.text.HtmlToSpannedConverter$Newline</string>
          <string>android.text.HtmlToSpannedConverter$Blockquote</string>
          <string>android.text.StaticLayout$LineBreaks</string>
          <string>android.text.MeasuredText</string>
          <string>android.text.TextDirectionHeuristics$TextDirectionHeuristicInternal</string>
          <string>org.ccil.cowan.tagsoup.Parser</string>
          <string>android.text.style.RelativeSizeSpan</string>
          <string>android.text.style.BulletSpan</string>
          <string>android.text.style.BackgroundColorSpan</string>
          <string>android.text.style.IconMarginSpan</string>
          <string>android.text.style.ScaleXSpan</string>
          <string>android.text.TextDirectionHeuristics$TextDirectionAlgorithm</string>
          <string>android.text.HtmlToSpannedConverter$Foreground</string>
          <string>android.text.style.MetricAffectingSpan$Passthrough</string>
          <string>android.text.HtmlToSpannedConverter$Font</string>
          <string>android.text.HtmlToSpannedConverter$Super</string>
          <string>android.text.Layout$Directions</string>
          <string>android.text.HtmlToSpannedConverter</string>
          <string>android.text.style.MaskFilterSpan</string>
          <string>android.text.Selection$END</string>
          <string>android.text.HtmlToSpannedConverter$Monospace</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.os.storage.ss</name>
        <entities>
          <string>android.os.storage.VolumeInfo$2</string>
          <string>android.os.storage.StorageManager$ObbActionListener</string>
          <string>android.os.storage.StorageManager$ObbListenerDelegate</string>
          <string>android.os.storage.StorageManager$StorageEventListenerDelegate</string>
          <string>android.os.storage.StorageManager</string>
          <string>android.os.storage.DiskInfo$1</string>
          <string>android.os.storage.VolumeInfo$1</string>
          <string>android.os.storage.IObbActionListener$Stub$Proxy</string>
          <string>android.os.storage.VolumeInfo</string>
          <string>android.os.storage.VolumeRecord$1</string>
          <string>java.io.CharArrayWriter</string>
          <string>android.os.storage.OnObbStateChangeListener</string>
          <string>android.os.storage.DiskInfo</string>
          <string>android.os.storage.StorageVolume</string>
          <string>android.os.storage.IObbActionListener$Stub</string>
          <string>android.os.storage.VolumeRecord</string>
          <string>android.os.storage.StorageManager$ObbListenerDelegate$1</string>
          <string>android.os.storage.StorageVolume$1</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.android.server.ss</name>
        <entities>
          <string>android.app.trust.IStrongAuthTracker$Stub</string>
          <string>com.android.server.BluetoothManagerService$3</string>
          <string>android.app.IAlarmListener$Stub$Proxy</string>
          <string>com.android.server.BluetoothManagerService$2</string>
          <string>com.android.server.BluetoothManagerService$1</string>
          <string>com.android.server.location.LocationRequestStatistics</string>
          <string>com.android.server.AssetAtlasService$Configuration</string>
          <string>com.android.server.BluetoothManagerService$BluetoothHandler</string>
          <string>com.android.server.DeviceIdleController</string>
          <string>com.android.server.AppOpsService$ClientState</string>
          <string>android.app.trust.IStrongAuthTracker$Stub$Proxy</string>
          <string>com.android.server.UiModeManagerService</string>
          <string>android.os.IProgressListener</string>
          <string>com.android.server.Watchdog$HandlerChecker</string>
          <string>com.android.server.NativeDaemonConnector$NativeDaemonArgumentException</string>
          <string>com.android.internal.telephony.PhoneConstants$DataState</string>
          <string>com.android.server.BatteryService$4</string>
          <string>com.android.server.BatteryService$3</string>
          <string>com.android.internal.textservice.ISpellCheckerSessionListener</string>
          <string>com.android.server.BatteryService$2</string>
          <string>com.android.server.BatteryService$1</string>
          <string>com.android.server.BatteryService$8</string>
          <string>com.android.server.BatteryService$7</string>
          <string>com.android.server.MountService$ObbState</string>
          <string>com.android.server.BatteryService$6</string>
          <string>com.android.server.ServiceWatcher$2</string>
          <string>com.android.internal.telephony.PhoneConstants$State</string>
          <string>com.android.server.BatteryService$5</string>
          <string>com.android.server.ServiceWatcher$1</string>
          <string>com.android.server.BatteryService$9</string>
          <string>android.os.IUpdateLock$Stub</string>
          <string>com.android.server.CountryDetectorService</string>
          <string>java.util.concurrent.ArrayBlockingQueue</string>
          <string>com.android.server.NetworkManagementService$1</string>
          <string>com.android.server.NetworkManagementService$2</string>
          <string>android.os.IUpdateLock</string>
          <string>com.android.server.MountService$MountServiceHandler</string>
          <string>java.util.zip.GZIPOutputStream</string>
          <string>com.android.server.AssetAtlasService</string>
          <string>com.android.server.ConnectivityService$NetworkStateTrackerHandler</string>
          <string>com.android.internal.textservice.ITextServicesSessionListener$Stub</string>
          <string>com.android.server.SamplingProfilerService$SamplingProfilerSettingsObserver</string>
          <string>com.android.server.AlarmManagerService$IncreasingTimeOrder</string>
          <string>com.android.server.ConsumerIrService</string>
          <string>com.android.server.Watchdog$1</string>
          <string>android.bluetooth.IBluetoothCallback$Stub$Proxy</string>
          <string>com.android.server.ConnectivityService$NotificationType</string>
          <string>com.android.internal.textservice.ISpellCheckerSessionListener$Stub$Proxy</string>
          <string>com.android.internal.view.IInputContext</string>
          <string>com.android.server.AppOpsService$Ops</string>
          <string>com.android.server.DiskStatsService</string>
          <string>com.android.server.GestureLauncherService</string>
          <string>com.android.internal.app.IAppOpsService$Stub$Proxy</string>
          <string>android.net.NetworkConfig</string>
          <string>com.android.server.NetworkManagementSocketTagger$SocketTags</string>
          <string>android.os.BatteryManagerInternal</string>
          <string>com.android.server.IntentResolver</string>
          <string>com.android.server.LocationManagerService$LocationWorkerHandler</string>
          <string>com.android.server.AlarmManagerService$BatchTimeOrder</string>
          <string>com.android.server.MountService$MountServiceInternalImpl</string>
          <string>com.android.server.CertBlacklister$BlacklistObserver</string>
          <string>com.android.server.LocationManagerService$6</string>
          <string>com.android.server.LocationManagerService$5</string>
          <string>com.android.server.LocationManagerService$4</string>
          <string>com.android.server.LocationManagerService$3</string>
          <string>com.android.server.GraphicsStatsService$ActiveBuffer</string>
          <string>com.android.server.LocationManagerService$2</string>
          <string>com.android.server.LocationManagerService$1</string>
          <string>android.net.NetworkScorerAppManager$NetworkScorerAppData</string>
          <string>com.android.server.WiredAccessoryManager$WiredAccessoryObserver$UEventInfo</string>
          <string>android.os.storage.IObbActionListener</string>
          <string>com.android.server.InputMethodManagerService$ClientState</string>
          <string>android.os.IMaintenanceActivityListener$Stub</string>
          <string>android.app.AppOpsManager$PackageOps$1</string>
          <string>android.security.keystore.KeyProtection</string>
          <string>android.bluetooth.IBluetoothStateChangeCallback$Stub$Proxy</string>
          <string>com.android.internal.app.IAppOpsCallback</string>
          <string>com.android.server.BatteryService$BinderService</string>
          <string>com.android.server.DockObserver$1</string>
          <string>com.android.server.DockObserver$2</string>
          <string>com.android.server.TextServicesManagerService</string>
          <string>android.os.IProgressListener$Stub</string>
          <string>com.android.server.DeviceIdleController$MotionListener</string>
          <string>com.android.server.DeviceIdleController$MyHandler</string>
          <string>com.android.server.AppOpsService$ChangeRec</string>
          <string>android.bluetooth.IBluetoothGatt$Stub$Proxy</string>
          <string>com.android.server.TelephonyRegistry</string>
          <string>com.android.server.ResettableTimeout$T</string>
          <string>com.android.server.NativeDaemonConnector$Command</string>
          <string>com.android.server.INativeDaemonConnectorCallbacks</string>
          <string>com.android.server.GraphicsStatsService</string>
          <string>javax.crypto.spec.GCMParameterSpec</string>
          <string>com.android.internal.telephony.DefaultPhoneNotifier</string>
          <string>com.android.internal.util.LocalLog</string>
          <string>com.android.server.AssetAtlasService$Renderer</string>
          <string>com.android.server.TelephonyRegistry$LogSSC</string>
          <string>com.android.server.LockSettingsService$SynchronizedStrongAuthTracker</string>
          <string>com.android.internal.view.IInputMethodManager$Stub$Proxy</string>
          <string>com.android.internal.app.IAppOpsCallback$Stub$Proxy</string>
          <string>com.android.server.ConnectivityService$3</string>
          <string>com.android.server.ConnectivityService$2</string>
          <string>com.android.server.ConnectivityService$1</string>
          <string>com.android.server.AttributeCache$Entry</string>
          <string>com.android.server.LocalServices</string>
          <string>android.os.CommonTimeConfig$OnServerDiedListener</string>
          <string>com.android.internal.app.IAppOpsService</string>
          <string>com.android.server.LockSettingsService</string>
          <string>android.bluetooth.IBluetoothManagerCallback$Stub</string>
          <string>android.app.IAlarmCompleteListener</string>
          <string>android.location.IGeocodeProvider$Stub$Proxy</string>
          <string>com.android.internal.view.IInputMethodSession</string>
          <string>com.android.server.SamplingProfilerService</string>
          <string>com.android.server.NetworkScoreService$1</string>
          <string>com.android.server.ConnectivityService$NetworkFactoryInfo</string>
          <string>android.app.AppOpsManager$OpEntry</string>
          <string>com.android.server.TextServicesManagerService$TextServicesMonitor</string>
          <string>com.android.server.NetworkTimeUpdateService$MyHandler</string>
          <string>com.android.server.TextServicesManagerService$InternalDeathRecipient</string>
          <string>android.location.IGeocodeProvider$Stub</string>
          <string>com.android.server.VibratorService</string>
          <string>com.android.server.NsdService$NsdStateMachine</string>
          <string>com.android.internal.os.HandlerCaller$Callback</string>
          <string>com.android.internal.widget.ILockSettings</string>
          <string>com.android.server.GestureLauncherService$GestureEventListener</string>
          <string>com.android.internal.view.IInputMethod$Stub$Proxy</string>
          <string>android.bluetooth.IBluetoothGattServerCallback$Stub$Proxy</string>
          <string>com.android.server.DeviceIdleController$BinderService</string>
          <string>android.bluetooth.IBluetoothGatt</string>
          <string>com.android.server.RecoverySystemService</string>
          <string>com.android.server.InputMethodManagerService</string>
          <string>com.android.server.NativeDaemonConnector</string>
          <string>com.android.server.AppOpsService$Op</string>
          <string>com.android.server.location.LocationBlacklist</string>
          <string>com.android.internal.view.IInputMethodManager$Stub</string>
          <string>com.android.server.NetworkScoreService$NetworkScorerPackageMonitor</string>
          <string>com.android.server.NetworkManagementService$NetdCallbackReceiver$1</string>
          <string>android.app.AlarmManager$AlarmClockInfo$1</string>
          <string>com.android.server.CountryDetectorService$Receiver</string>
          <string>android.app.IAlarmCompleteListener$Stub</string>
          <string>com.android.server.SensorNotificationService</string>
          <string>com.android.server.TelephonyRegistry$Record</string>
          <string>android.net.INetd$Stub$Proxy</string>
          <string>com.android.server.InputMethodManagerService$1</string>
          <string>com.android.server.InputMethodManagerService$2</string>
          <string>com.android.server.InputMethodManagerService$3</string>
          <string>android.bluetooth.IBluetoothProfileServiceConnection$Stub</string>
          <string>com.android.server.InputMethodManagerService$4</string>
          <string>android.graphics.Atlas$Type</string>
          <string>com.android.server.InputMethodManagerService$5</string>
          <string>com.android.server.InputMethodManagerService$6</string>
          <string>com.android.internal.view.IInputMethodClient</string>
          <string>com.android.server.UpdateLockService$LockWatcher</string>
          <string>com.android.server.AlarmManagerService$AlarmThread</string>
          <string>com.android.internal.textservice.ITextServicesSessionListener</string>
          <string>com.android.server.NativeDaemonConnector$SensitiveArg</string>
          <string>com.android.server.NsdService$ClientInfo</string>
          <string>com.android.server.AttributeCache</string>
          <string>com.android.server.DropBoxManagerService$FileList</string>
          <string>com.android.server.AppOpsService$Shell</string>
          <string>com.android.internal.telephony.IMms$Stub</string>
          <string>android.os.DropBoxManager$Entry</string>
          <string>com.android.server.os.SchedulingPolicyService</string>
          <string>com.android.server.PersistentDataBlockService</string>
          <string>com.android.server.MmsServiceBroker$BinderService</string>
          <string>com.android.server.NsdService$NsdStateMachine$1</string>
          <string>com.android.server.LockSettingsStorage$Callback</string>
          <string>java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock</string>
          <string>com.android.server.LockGuard</string>
          <string>java.lang.NullPointerException</string>
          <string>com.android.server.ConnectivityService$SettingsObserver</string>
          <string>com.android.server.MountServiceIdler</string>
          <string>com.android.server.location.LocationRequestStatistics$PackageProviderKey</string>
          <string>com.android.server.PinnerService$BinderService</string>
          <string>com.android.server.InputMethodManagerService$SessionState</string>
          <string>android.bluetooth.IBluetoothProfileServiceConnection$Stub$Proxy</string>
          <string>android.bluetooth.IBluetoothManagerCallback$Stub$Proxy</string>
          <string>com.android.server.NativeDaemonConnector$ResponseQueue</string>
          <string>com.android.server.NetworkManagementSocketTagger</string>
          <string>com.android.server.BootReceiver</string>
          <string>com.android.server.MmsServiceBroker</string>
          <string>com.android.server.TelephonyRegistry$2</string>
          <string>com.android.server.CountryDetectorService$2</string>
          <string>com.android.server.IntentResolver$IteratorWrapper</string>
          <string>com.android.server.CountryDetectorService$1</string>
          <string>com.android.server.TelephonyRegistry$1</string>
          <string>com.android.server.NsdService$NativeResponseCode</string>
          <string>com.android.server.WiredAccessoryManager$WiredAccessoryObserver</string>
          <string>com.android.server.NativeDaemonConnectorException</string>
          <string>com.android.server.MasterClearReceiver</string>
          <string>com.android.server.AlarmManagerService$UidObserver</string>
          <string>android.bluetooth.IBluetoothCallback$Stub</string>
          <string>com.android.server.AppOpsService</string>
          <string>com.android.server.DropBoxManagerService$1$1</string>
          <string>android.bluetooth.IBluetooth</string>
          <string>android.content.pm.PackageManager$OnPermissionsChangedListener</string>
          <string>com.android.server.DropBoxManagerService$EntryFile</string>
          <string>android.os.IProgressListener$Stub$Proxy</string>
          <string>com.android.server.BluetoothService</string>
          <string>com.android.server.ContextHubSystemService</string>
          <string>com.android.server.MmsServiceBroker$1</string>
          <string>com.android.server.LockSettingsStrongAuth$1</string>
          <string>com.android.server.AppOpsService$Restriction</string>
          <string>com.android.server.AnyMotionDetector$Vector3</string>
          <string>android.os.INetworkActivityListener</string>
          <string>com.android.server.MountService$MountObbAction</string>
          <string>android.os.IMaintenanceActivityListener$Stub$Proxy</string>
          <string>com.android.server.MmsServiceBroker$2</string>
          <string>com.android.server.LockSettingsStrongAuth</string>
          <string>com.android.server.MmsServiceBroker$3</string>
          <string>com.android.server.NetworkManagementSocketTagger$1</string>
          <string>com.android.server.AlarmManagerService$1</string>
          <string>com.android.server.PersistentDataBlockService$1</string>
          <string>com.android.server.TextServicesManagerService$TextServicesSettings</string>
          <string>com.android.server.MountService$ObbActionHandler</string>
          <string>com.android.server.AlarmManagerService$3</string>
          <string>com.android.internal.app.IAppOpsCallback$Stub</string>
          <string>com.android.server.AlarmManagerService$2</string>
          <string>com.android.server.SerialService</string>
          <string>com.android.server.AlarmManagerService$Batch</string>
          <string>com.android.server.AlarmManagerService$WakeupEvent</string>
          <string>android.app.AlarmManager$AlarmClockInfo</string>
          <string>com.android.server.AlarmManagerService$UninstallReceiver</string>
          <string>com.android.server.AttributeCache$Package</string>
          <string>com.android.server.LocationManagerService</string>
          <string>com.android.server.MountService$DefaultContainerConnection</string>
          <string>android.app.IAlarmManager$Stub</string>
          <string>android.bluetooth.IBluetooth$Stub$Proxy</string>
          <string>com.android.internal.textservice.ISpellCheckerService</string>
          <string>com.android.server.NativeDaemonConnector$NativeDaemonFailureException</string>
          <string>com.android.server.location.PassiveProvider</string>
          <string>android.location.IGeocodeProvider</string>
          <string>com.android.server.NetworkManagementService$IdleTimerParams</string>
          <string>com.android.server.VibratorService$3</string>
          <string>com.android.server.VibratorService$4</string>
          <string>com.android.server.LockSettingsService$CredentialUtil</string>
          <string>com.android.server.VibratorService$1</string>
          <string>com.android.server.VibratorService$2</string>
          <string>android.app.AppOpsManager$PackageOps</string>
          <string>com.android.internal.view.IInputContext$Stub$Proxy</string>
          <string>android.bluetooth.IBluetoothGatt$Stub</string>
          <string>android.bluetooth.IBluetoothProfileServiceConnection</string>
          <string>com.android.server.BluetoothManagerService$BluetoothServiceConnection</string>
          <string>java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock</string>
          <string>com.android.server.TextServicesManagerService$Lifecycle</string>
          <string>com.android.server.location.GeocoderProxy</string>
          <string>com.android.internal.os.IDropBoxManagerService$Stub$Proxy</string>
          <string>com.android.server.MountService$3</string>
          <string>com.android.server.MountService$2</string>
          <string>com.android.server.MountService$1</string>
          <string>android.app.IAlarmManager$Stub$Proxy</string>
          <string>com.android.server.LocationManagerService$UpdateRecord</string>
          <string>android.location.ILocationListener</string>
          <string>com.android.server.AlarmManagerService$FilterStats</string>
          <string>android.app.PendingIntent$CanceledException</string>
          <string>com.android.server.Watchdog</string>
          <string>com.android.server.SamplingProfilerService$1</string>
          <string>com.android.server.BluetoothManagerService</string>
          <string>com.android.server.MountService$UnmountObbAction</string>
          <string>com.android.server.NetworkTimeUpdateService$SettingsObserver</string>
          <string>android.location.LocationProvider</string>
          <string>com.android.internal.view.IInputContextCallback$Stub$Proxy</string>
          <string>android.net.LinkProperties$CompareResult</string>
          <string>java.security.KeyStore$SecretKeyEntry</string>
          <string>com.android.server.InputMethodManagerService$MethodCallback</string>
          <string>com.android.server.TextServicesManagerService$SpellCheckerBindGroup</string>
          <string>com.android.server.EntropyMixer</string>
          <string>com.android.server.ConnectivityService$InternalHandler</string>
          <string>com.android.server.NetworkScoreService</string>
          <string>com.android.server.NsdService$NativeCallbackReceiver</string>
          <string>com.android.internal.textservice.ITextServicesSessionListener$Stub$Proxy</string>
          <string>com.android.server.location.LocationProviderInterface</string>
          <string>com.android.server.SystemServiceManager</string>
          <string>java.util.StringTokenizer</string>
          <string>com.android.internal.view.IInputContextCallback</string>
          <string>com.android.server.CertBlacklister$BlacklistObserver$1</string>
          <string>com.android.server.CountryDetectorService$1$1</string>
          <string>com.android.server.CommonTimeManagementService$InterfaceScoreRule</string>
          <string>java.lang.StackTraceElement</string>
          <string>com.android.server.MountService$VoldResponseCode</string>
          <string>com.android.internal.telephony.IMms</string>
          <string>com.android.server.AssetAtlasService$ComputeWorker</string>
          <string>com.android.server.LockSettingsStorage$Cache$CacheKey</string>
          <string>android.bluetooth.IBluetoothManager$Stub$Proxy</string>
          <string>android.location.CountryListener</string>
          <string>com.android.server.VibratorService$VibrateThread</string>
          <string>com.android.server.VibratorService$VibrationInfo</string>
          <string>com.android.server.HardwarePropertiesManagerService</string>
          <string>com.android.server.ConnectivityService</string>
          <string>com.android.server.AppOpsService$1$1</string>
          <string>com.android.server.ConnectivityService$NetworkRequestType</string>
          <string>com.android.server.ServiceWatcher</string>
          <string>com.android.internal.view.IInputMethod$Stub</string>
          <string>com.android.server.NsdService$NsdStateMachine$DefaultState</string>
          <string>com.android.server.AnyMotionDetector$RunningSignalStats</string>
          <string>com.android.server.AnyMotionDetector$DeviceIdleCallback</string>
          <string>com.android.server.NsdService</string>
          <string>com.android.server.PinnerService</string>
          <string>java.util.Date</string>
          <string>com.android.server.BootReceiver$2</string>
          <string>com.android.server.BootReceiver$1</string>
          <string>android.app.IAlarmListener</string>
          <string>com.android.server.Watchdog$BinderThreadMonitor</string>
          <string>com.android.server.NetworkScoreService$ScoringServiceConnection</string>
          <string>com.android.server.BatteryService$Led</string>
          <string>com.android.internal.widget.ILockSettings$Stub</string>
          <string>android.bluetooth.IBluetoothManagerCallback</string>
          <string>com.android.internal.textservice.ISpellCheckerSessionListener$Stub</string>
          <string>android.bluetooth.IBluetoothManager$Stub</string>
          <string>com.android.server.AppOpsService$ClientRestrictionState</string>
          <string>com.android.server.DeviceIdleController$LocalService</string>
          <string>com.android.server.AppOpsService$ClientRestrictionState$_void_binderDied__LambdaImpl0</string>
          <string>com.android.server.NetworkManagementService$NetdResponseCode</string>
          <string>com.android.server.location.MockProvider</string>
          <string>android.net.NetworkInfo$State</string>
          <string>com.android.server.InputMethodManagerService$SettingsObserver</string>
          <string>com.android.server.BatteryService$LocalService</string>
          <string>com.android.server.CommonTimeManagementService$5</string>
          <string>com.android.internal.app.DisableCarModeActivity</string>
          <string>com.android.server.CommonTimeManagementService$1</string>
          <string>com.android.server.NativeDaemonConnector$1</string>
          <string>com.android.server.CommonTimeManagementService$2</string>
          <string>com.android.server.CommonTimeManagementService$3</string>
          <string>android.content.DialogInterface$OnCancelListener</string>
          <string>com.android.server.InputMethodManagerService$Lifecycle</string>
          <string>com.android.server.CommonTimeManagementService$4</string>
          <string>com.android.internal.view.IInputContext$Stub</string>
          <string>com.android.server.BatteryService$Shell</string>
          <string>com.android.server.DockObserver$BinderService</string>
          <string>com.android.server.AlarmManagerService$IdleDispatchEntry</string>
          <string>com.android.server.LockSettingsService$Lifecycle</string>
          <string>dalvik.system.SocketTagger</string>
          <string>com.android.server.UiModeManagerService$1</string>
          <string>com.android.server.ConnectivityService$ReapUnvalidatedNetworks</string>
          <string>com.android.server.UiModeManagerService$4</string>
          <string>com.android.server.UiModeManagerService$5</string>
          <string>com.android.server.AlarmManagerService$Alarm</string>
          <string>com.android.server.UiModeManagerService$2</string>
          <string>com.android.server.UiModeManagerService$3</string>
          <string>android.net.INetd$Stub</string>
          <string>com.android.server.WiredAccessoryManager$1</string>
          <string>com.android.server.LockSettingsStorage$Cache</string>
          <string>com.android.server.AnyMotionDetector$3</string>
          <string>android.net.NetworkScorerAppManager</string>
          <string>com.android.server.AlarmManagerService$LocalService</string>
          <string>com.android.server.AlarmManagerService$InFlight</string>
          <string>com.android.server.AnyMotionDetector$1</string>
          <string>com.android.server.AnyMotionDetector$2</string>
          <string>com.android.server.MasterClearReceiver$1</string>
          <string>java.util.LinkedList</string>
          <string>com.android.server.MasterClearReceiver$WipeAdoptableDisksTask</string>
          <string>com.android.internal.app.IAppOpsService$Stub</string>
          <string>com.android.server.InputMethodManagerService$LocalServiceImpl</string>
          <string>com.android.server.VibratorService$Vibration</string>
          <string>com.android.server.NativeDaemonEvent</string>
          <string>com.android.server.Watchdog$RebootRequestReceiver</string>
          <string>android.net.INetd</string>
          <string>com.android.server.InputMethodManagerService$ImmsBroadcastReceiver</string>
          <string>com.android.server.DropBoxManagerService$1</string>
          <string>com.android.server.DropBoxManagerService$2</string>
          <string>com.android.server.InputMethodManagerService$InputMethodFileManager</string>
          <string>com.android.server.DropBoxManagerService$3</string>
          <string>java.util.Comparator</string>
          <string>com.android.server.DropBoxManagerService$4</string>
          <string>android.os.IMaintenanceActivityListener</string>
          <string>com.android.server.BluetoothManagerService$ClientDeathRecipient</string>
          <string>com.android.server.InputMethodManagerService$ImeSubtypeListAdapter</string>
          <string>com.android.server.TextServicesManagerService$InternalServiceConnection</string>
          <string>android.bluetooth.IBluetoothCallback</string>
          <string>com.android.server.AlarmManagerService$InteractiveStateReceiver</string>
          <string>com.android.server.AlarmManagerService</string>
          <string>com.android.server.EntropyMixer$2</string>
          <string>com.android.server.EntropyMixer$1</string>
          <string>com.android.server.DockObserver</string>
          <string>android.util.SparseLongArray</string>
          <string>com.android.server.LockSettingsStorage$CredentialHash</string>
          <string>com.android.server.DropBoxManagerService</string>
          <string>com.android.server.SystemServer$2</string>
          <string>android.util.TimeUtils</string>
          <string>com.android.server.SystemServer$1</string>
          <string>com.android.server.UpdateLockService</string>
          <string>android.bluetooth.IBluetoothGattServerCallback$Stub</string>
          <string>com.android.server.AssetAtlasService$WorkerResult</string>
          <string>java.net.InterfaceAddress</string>
          <string>com.android.server.ConnectivityService$ValidationLog</string>
          <string>com.android.server.GraphicsStatsService$HistoricalData</string>
          <string>com.android.server.Watchdog$Monitor</string>
          <string>com.android.server.AlarmManagerService$Constants</string>
          <string>java.security.KeyStore$ProtectionParameter</string>
          <string>com.android.server.RecoverySystemService$BinderService</string>
          <string>com.android.server.WiredAccessoryManager</string>
          <string>java.security.KeyStore$Entry</string>
          <string>android.bluetooth.IBluetooth$Stub</string>
          <string>com.android.internal.view.IInputSessionCallback$Stub</string>
          <string>android.graphics.Xfermode</string>
          <string>com.android.server.InputMethodManagerService$MyPackageMonitor</string>
          <string>com.android.server.NetworkManagementService</string>
          <string>com.android.server.BatteryService</string>
          <string>com.android.server.MountServiceIdler$1</string>
          <string>com.android.server.BatteryService$BatteryListener</string>
          <string>com.android.server.DeviceIdleController$Constants</string>
          <string>com.android.internal.os.IDropBoxManagerService$Stub</string>
          <string>java.text.SimpleDateFormat</string>
          <string>com.android.server.MountService$Callbacks</string>
          <string>java.util.concurrent.locks.ReentrantReadWriteLock</string>
          <string>com.android.server.AlarmManagerService$PriorityClass</string>
          <string>com.android.server.SystemServer</string>
          <string>com.android.internal.telephony.IMms$Stub$Proxy</string>
          <string>com.android.server.AlarmManagerService$AlarmHandler</string>
          <string>com.android.server.AppOpsService$2</string>
          <string>com.android.server.AppOpsService$1</string>
          <string>com.android.server.InputMethodManagerService$HardKeyboardBehavior</string>
          <string>android.app.trust.IStrongAuthTracker</string>
          <string>android.security.keystore.KeyProtection$Builder</string>
          <string>com.android.server.MountService$ObbAction</string>
          <string>java.io.DataOutput</string>
          <string>com.android.server.MountService$Lifecycle</string>
          <string>com.android.server.MountService</string>
          <string>com.android.internal.view.IInputSessionCallback$Stub$Proxy</string>
          <string>android.app.IAlarmListener$Stub</string>
          <string>com.android.internal.os.IDropBoxManagerService</string>
          <string>com.android.internal.textservice.ISpellCheckerService$Stub</string>
          <string>com.android.server.RandomBlock</string>
          <string>com.android.server.GestureLauncherService$2</string>
          <string>com.android.server.GestureLauncherService$1</string>
          <string>android.graphics.PorterDuffXfermode</string>
          <string>com.android.server.location.LocationRequestStatistics$PackageStatistics</string>
          <string>com.android.server.LockSettingsStorage$DatabaseHelper</string>
          <string>com.android.server.IntentResolver$1</string>
          <string>com.android.server.NetworkTimeUpdateService$1</string>
          <string>com.android.server.NetworkTimeUpdateService$2</string>
          <string>libcore.util.HexEncoding</string>
          <string>com.android.server.NetworkTimeUpdateService$3</string>
          <string>com.android.server.NetworkTimeUpdateService</string>
          <string>com.android.server.TextServicesManagerService$TextServicesBroadcastReceiver</string>
          <string>com.android.server.DeviceIdleController$Shell</string>
          <string>com.android.internal.view.IInputContextCallback$Stub</string>
          <string>com.android.server.NativeDaemonConnector$ResponseQueue$PendingCmd</string>
          <string>android.app.AlarmManager$OnAlarmListener</string>
          <string>com.android.server.NsdService$NsdStateMachine$EnabledState</string>
          <string>android.app.IAlarmCompleteListener$Stub$Proxy</string>
          <string>com.android.server.CertBlacklister</string>
          <string>com.android.server.InputMethodManagerService$HardKeyboardListener</string>
          <string>com.android.server.LockSettingsStorage</string>
          <string>android.os.IUpdateLock$Stub$Proxy</string>
          <string>com.android.server.AppOpsService$Callback</string>
          <string>com.android.server.LockSettingsService$GateKeeperDiedRecipient</string>
          <string>com.android.server.NsdService$NsdStateMachine$DisabledState</string>
          <string>com.android.server.BluetoothManagerService$ProfileServiceConnections</string>
          <string>com.android.server.LockSettingsService$1</string>
          <string>com.android.server.SystemService</string>
          <string>com.android.server.AnyMotionDetector</string>
          <string>com.android.server.LockSettingsService$3</string>
          <string>com.android.server.LockSettingsService$2</string>
          <string>com.android.server.LockSettingsService$5</string>
          <string>com.android.server.ConnectivityService$LegacyTypeTracker</string>
          <string>com.android.server.LockSettingsService$4</string>
          <string>com.android.server.LockSettingsService$6</string>
          <string>android.app.AlertDialog</string>
          <string>com.android.server.DeviceIdleController$8</string>
          <string>com.android.server.DeviceIdleController$7</string>
          <string>com.android.internal.textservice.ISpellCheckerService$Stub$Proxy</string>
          <string>android.bluetooth.IBluetoothGattServerCallback</string>
          <string>android.util.MutableLong</string>
          <string>com.android.server.DeviceIdleController$2</string>
          <string>com.android.server.DeviceIdleController$1</string>
          <string>android.app.AppOpsManager$OpEntry$1</string>
          <string>com.android.server.DeviceIdleController$6</string>
          <string>com.android.server.DeviceIdleController$5</string>
          <string>com.android.server.DeviceIdleController$4</string>
          <string>com.android.server.DeviceIdleController$3</string>
          <string>com.android.server.AppOpsService$UidState</string>
          <string>com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings</string>
          <string>com.android.server.NetworkManagementService$NetdCallbackReceiver</string>
          <string>com.android.internal.view.IInputMethod</string>
          <string>com.android.server.ConnectivityService$NetworkRequestInfo</string>
          <string>java.util.HashMap</string>
          <string>com.android.internal.view.IInputMethodSession$Stub$Proxy</string>
          <string>com.android.internal.widget.ILockSettings$Stub$Proxy</string>
          <string>com.android.server.NsdService$NativeEvent</string>
          <string>com.android.internal.view.IInputSessionCallback</string>
          <string>com.android.server.AlarmManagerService$DeliveryTracker</string>
          <string>com.android.server.NativeDaemonTimeoutException</string>
          <string>com.android.server.LockGuard$LockInfo</string>
          <string>android.service.dreams.Sandman</string>
          <string>com.android.server.VibratorService$SettingsObserver</string>
          <string>android.bluetooth.IBluetoothStateChangeCallback</string>
          <string>com.android.server.ResettableTimeout</string>
          <string>com.android.server.CommonTimeManagementService</string>
          <string>com.android.server.AlarmManagerService$BroadcastStats</string>
          <string>com.android.server.LocationManagerService$Receiver</string>
          <string>com.android.server.AlarmManagerService$ClockReceiver</string>
          <string>android.util.ContainerHelpers</string>
          <string>com.android.server.AssetAtlasService$2</string>
          <string>com.android.server.AssetAtlasService$1</string>
          <string>android.bluetooth.IBluetoothStateChangeCallback$Stub</string>
          <string>android.os.storage.MountServiceInternal</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.net.ss</name>
        <entities>
          <string>com.android.org.conscrypt.OpenSSLContextImpl</string>
          <string>android.net.IpPrefix$1</string>
          <string>android.net.ScoredNetwork</string>
          <string>android.net.InterfaceConfiguration</string>
          <string>android.net.Uri</string>
          <string>android.net.NetworkCapabilities</string>
          <string>android.net.StaticIpConfiguration</string>
          <string>android.net.LocalSocketImpl$SocketOutputStream</string>
          <string>android.util.MutableInt</string>
          <string>android.net.DhcpResults$1</string>
          <string>java.net.Proxy</string>
          <string>com.android.org.conscrypt.FileClientSessionCache</string>
          <string>android.net.EthernetManager$2</string>
          <string>android.net.NetworkPolicy$1</string>
          <string>android.net.EthernetManager$1</string>
          <string>android.net.ConnectivityManager</string>
          <string>android.net.Uri$1</string>
          <string>android.net.UrlQuerySanitizer$ValueSanitizer</string>
          <string>android.net.WifiKey</string>
          <string>android.net.ProxyInfo$1</string>
          <string>android.graphics.ColorMatrixColorFilter</string>
          <string>android.net.WifiLinkQualityInfo</string>
          <string>android.net.Network</string>
          <string>android.net.NetworkStatsHistory$1</string>
          <string>android.net.DhcpInfo$1</string>
          <string>android.net.ConnectivityManager$PacketKeepaliveCallback</string>
          <string>com.android.okhttp.internal.Internal</string>
          <string>android.net.NetworkStatsHistory$ParcelUtils</string>
          <string>android.net.ScoredNetwork$1</string>
          <string>java.net.DatagramPacket</string>
          <string>android.net.VpnService$Callback</string>
          <string>android.net.ConnectivityManager$PacketKeepalive$1</string>
          <string>android.net.Uri$AbstractHierarchicalUri</string>
          <string>android.net.SSLSessionCache</string>
          <string>android.net.Uri$AbstractPart</string>
          <string>android.net.EthernetManager</string>
          <string>android.net.ConnectivityManager$OnNetworkActiveListener</string>
          <string>android.net.LinkAddress$1</string>
          <string>android.net.ConnectivityManager$NoPreloadHolder</string>
          <string>android.net.ConnectivityManager$LegacyRequest$1</string>
          <string>java.util.RandomAccess</string>
          <string>android.net.ConnectivityMetricsEvent</string>
          <string>android.net.NetworkMisc$1</string>
          <string>android.net.NetworkFactory</string>
          <string>libcore.net.UriCodec</string>
          <string>android.system.StructLinger</string>
          <string>android.net.SSLCertificateSocketFactory</string>
          <string>android.net.CaptivePortal$1</string>
          <string>android.net.InterfaceConfiguration$1</string>
          <string>android.net.NetworkState</string>
          <string>android.net.IEthernetServiceListener$Stub</string>
          <string>android.net.Network$1</string>
          <string>android.net.ConnectivityManager$PacketKeepalive</string>
          <string>android.net.NetworkPolicy</string>
          <string>com.android.okhttp.ConnectionPool</string>
          <string>android.net.NetworkQuotaInfo$1</string>
          <string>android.net.UrlQuerySanitizer$ParameterValuePair</string>
          <string>android.net.NetworkRequest$1</string>
          <string>android.net.Network$2</string>
          <string>android.net.ConnectivityManager$2</string>
          <string>java.lang.ArrayIndexOutOfBoundsException</string>
          <string>android.net.NetworkRequest</string>
          <string>java.net.UnknownHostException</string>
          <string>android.net.ConnectivityManager$1</string>
          <string>android.net.SntpClient$InvalidServerReplyException</string>
          <string>android.net.UrlQuerySanitizer</string>
          <string>android.net.NetworkQuotaInfo</string>
          <string>android.net.IEthernetServiceListener$Stub$Proxy</string>
          <string>libcore.net.event.NetworkEventDispatcher</string>
          <string>android.net.Network$NetworkBoundSocketFactory</string>
          <string>android.net.NetworkKey</string>
          <string>android.net.NetworkState$1</string>
          <string>android.net.UidRange</string>
          <string>com.android.okhttp.OkHttpClient</string>
          <string>android.net.Uri$Part$EmptyPart</string>
          <string>android.net.EthernetManager$Listener</string>
          <string>android.net.PacProxySelector</string>
          <string>java.net.SocketAddress</string>
          <string>android.net.NetworkCapabilities$1</string>
          <string>android.net.NetworkTemplate$1</string>
          <string>java.util.AbstractList</string>
          <string>android.net.IEthernetServiceListener</string>
          <string>android.net.RouteInfo$1</string>
          <string>android.net.LinkProperties</string>
          <string>android.net.Uri$PathSegments</string>
          <string>android.net.StaticIpConfiguration$1</string>
          <string>java.net.ProxySelector</string>
          <string>android.net.NetworkKey$1</string>
          <string>android.net.NetworkStats</string>
          <string>android.net.LinkQualityInfo$1</string>
          <string>android.net.RouteInfo</string>
          <string>com.android.org.conscrypt.OpenSSLSocketImpl</string>
          <string>android.net.Uri$PathPart</string>
          <string>android.net.ConnectivityManager$LegacyRequest</string>
          <string>android.net.Proxy</string>
          <string>java.net.URI</string>
          <string>com.android.org.conscrypt.SSLClientSessionCache</string>
          <string>javax.net.ssl.SSLSessionContext</string>
          <string>android.net.ProxyInfo</string>
          <string>com.android.okhttp.internal.Network</string>
          <string>android.net.Uri$HierarchicalUri</string>
          <string>android.net.ConnectivityManager$CallbackHandler</string>
          <string>android.net.IpConfiguration</string>
          <string>android.net.IpPrefix</string>
          <string>android.net.NetworkInfo</string>
          <string>java.net.InetSocketAddress</string>
          <string>android.net.NetworkStatsHistory$DataStreamUtils</string>
          <string>android.net.RssiCurve</string>
          <string>javax.net.SocketFactory</string>
          <string>android.net.PskKeyManager</string>
          <string>android.net.ConnectivityMetricsEvent$1</string>
          <string>android.net.LocalSocketImpl</string>
          <string>com.android.org.conscrypt.ClientSessionContext</string>
          <string>android.net.WifiKey$1</string>
          <string>android.net.DataUsageRequest$1</string>
          <string>com.android.okhttp.OkUrlFactory</string>
          <string>com.android.okhttp.HttpHandler</string>
          <string>android.net.IpConfiguration$IpAssignment</string>
          <string>android.net.SSLCertificateSocketFactory$1</string>
          <string>android.net.Uri$StringUri</string>
          <string>android.graphics.EmbossMaskFilter</string>
          <string>com.android.org.conscrypt.PSKKeyManager</string>
          <string>android.net.IpConfiguration$ProxySettings</string>
          <string>android.net.Uri$PathSegmentsBuilder</string>
          <string>android.net.VpnService</string>
          <string>java.net.Proxy$Type</string>
          <string>android.net.Uri$AbstractPart$Representation</string>
          <string>android.net.UidRange$1</string>
          <string>android.net.LocalSocketImpl$SocketInputStream</string>
          <string>android.net.LinkProperties$1</string>
          <string>android.net.RssiCurve$1</string>
          <string>android.net.DataUsageRequest</string>
          <string>android.net.DhcpInfo</string>
          <string>com.android.okhttp.HttpsHandler</string>
          <string>android.net.MobileLinkQualityInfo</string>
          <string>android.net.VpnService$Builder</string>
          <string>android.net.ConnectivityManager$OnStartTetheringCallback</string>
          <string>android.net.NetworkInfo$1</string>
          <string>android.net.SntpClient</string>
          <string>android.net.Uri$Part</string>
          <string>android.net.IpConfiguration$1</string>
          <string>android.net.LinkAddress</string>
          <string>android.net.NetworkFactory$NetworkRequestInfo</string>
          <string>android.net.NetworkMisc</string>
          <string>android.net.DhcpResults</string>
          <string>android.net.CaptivePortal</string>
          <string>android.net.NetworkStats$1</string>
          <string>android.net.LinkQualityInfo</string>
          <string>android.net.NetworkStatsHistory</string>
          <string>android.net.UrlQuerySanitizer$IllegalCharacterValueSanitizer</string>
          <string>android.net.NetworkTemplate</string>
          <string>android.net.Uri$OpaqueUri</string>
          <string>javax.net.ssl.SSLPeerUnverifiedException</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>android.transition.ss</name>
        <entities>
          <string>android.animation.Animator$AnimatorPauseListener</string>
          <string>android.transition.ArcMotion</string>
          <string>android.transition.TranslationAnimationCreator</string>
          <string>android.transition.ChangeTransform$2</string>
          <string>android.transition.ChangeTransform$3</string>
          <string>android.transition.TransitionManager</string>
          <string>android.view.ViewOverlay</string>
          <string>android.transition.Crossfade$1</string>
          <string>android.transition.ChangeScroll</string>
          <string>android.transition.Transition$1</string>
          <string>android.transition.Crossfade$2</string>
          <string>android.transition.Transition$2</string>
          <string>android.transition.ChangeText$6</string>
          <string>android.transition.Transition$3</string>
          <string>android.transition.ChangeText$5</string>
          <string>android.transition.ChangeTransform$1</string>
          <string>android.transition.Slide$CalculateSlideHorizontal</string>
          <string>android.transition.ChangeImageTransform</string>
          <string>android.view.ViewOverlay$OverlayViewGroup</string>
          <string>android.transition.Transition</string>
          <string>android.transition.ChangeText$4</string>
          <string>android.transition.TransitionSet</string>
          <string>android.transition.ChangeText$3</string>
          <string>android.transition.TransitionManager$MultiListener$1</string>
          <string>android.transition.ChangeText$2</string>
          <string>android.transition.ChangeText$1</string>
          <string>android.transition.Slide$CalculateSlideVertical</string>
          <string>android.transition.ChangeBounds$2</string>
          <string>android.transition.ChangeBounds$1</string>
          <string>android.transition.ChangeBounds$10</string>
          <string>android.transition.TransitionSet$TransitionSetListener</string>
          <string>android.transition.ChangeBounds$4</string>
          <string>android.transition.ChangeBounds$3</string>
          <string>android.transition.Explode</string>
          <string>android.transition.ChangeText</string>
          <string>android.transition.PatternPathMotion</string>
          <string>android.transition.ChangeBounds$6</string>
          <string>android.transition.Transition$ArrayListManager</string>
          <string>android.transition.ChangeBounds$5</string>
          <string>android.transition.ChangeBounds$8</string>
          <string>android.transition.ChangeTransform$PathAnimatorMatrix</string>
          <string>android.transition.ChangeBounds$7</string>
          <string>android.transition.ChangeBounds$9</string>
          <string>android.transition.Transition$AnimationInfo</string>
          <string>android.transition.VisibilityPropagation</string>
          <string>android.transition.Visibility</string>
          <string>android.transition.Slide$CalculateSlide</string>
          <string>android.transition.PathMotion</string>
          <string>android.transition.Slide$5</string>
          <string>android.animation.RectEvaluator</string>
          <string>android.transition.Slide$6</string>
          <string>android.transition.Crossfade</string>
          <string>android.transition.Slide$3</string>
          <string>android.transition.Slide$4</string>
          <string>android.transition.Slide$1</string>
          <string>android.transition.ChangeTransform$Transforms</string>
          <string>android.transition.Slide$2</string>
          <string>android.transition.ChangeBounds</string>
          <string>android.transition.Visibility$DisappearListener</string>
          <string>android.transition.TransitionPropagation</string>
          <string>android.transition.ChangeTransform$GhostListener</string>
          <string>android.transition.TransitionValues</string>
          <string>android.transition.Fade$FadeAnimatorListener</string>
          <string>android.transition.TransitionUtils</string>
          <string>android.transition.ChangeBounds$ViewBounds</string>
          <string>android.transition.Fade$1</string>
          <string>android.transition.SidePropagation</string>
          <string>android.transition.TransitionValuesMaps</string>
          <string>android.transition.TranslationAnimationCreator$TransitionPositionListener</string>
          <string>android.transition.ChangeImageTransform$1</string>
          <string>android.transition.ChangeTransform</string>
          <string>android.transition.ChangeImageTransform$2</string>
          <string>android.transition.ChangeClipBounds</string>
          <string>android.graphics.PathMeasure</string>
          <string>android.transition.Slide</string>
          <string>android.transition.Recolor</string>
          <string>android.transition.TransitionManager$MultiListener</string>
          <string>android.transition.Visibility$VisibilityInfo</string>
          <string>android.transition.TransitionInflater</string>
          <string>android.transition.TransitionSet$1</string>
          <string>android.transition.Visibility$1</string>
          <string>android.view.GhostView</string>
          <string>android.transition.Fade</string>
          <string>android.transition.AutoTransition</string>
          <string>android.transition.TransitionUtils$MatrixEvaluator</string>
          <string>android.transition.CircularPropagation</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
    </clusters>
  </edu.usc.softarch.arcade.antipattern.detection.BdcSmell>
  <edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
    <clusters>
      <edu.usc.softarch.arcade.facts.ConcernCluster reference="../../../edu.usc.softarch.arcade.antipattern.detection.BdcSmell/clusters/edu.usc.softarch.arcade.facts.ConcernCluster[6]"/>
    </clusters>
  </edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
  <edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
    <clusters>
      <edu.usc.softarch.arcade.facts.ConcernCluster reference="../../../edu.usc.softarch.arcade.antipattern.detection.BdcSmell/clusters/edu.usc.softarch.arcade.facts.ConcernCluster[7]"/>
    </clusters>
  </edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
  <edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
    <clusters>
      <edu.usc.softarch.arcade.facts.ConcernCluster reference="../../../edu.usc.softarch.arcade.antipattern.detection.BdcSmell/clusters/edu.usc.softarch.arcade.facts.ConcernCluster[8]"/>
    </clusters>
  </edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
  <edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
    <clusters>
      <edu.usc.softarch.arcade.facts.ConcernCluster reference="../../../edu.usc.softarch.arcade.antipattern.detection.BdcSmell/clusters/edu.usc.softarch.arcade.facts.ConcernCluster[9]"/>
    </clusters>
  </edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
  <edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
    <clusters>
      <edu.usc.softarch.arcade.facts.ConcernCluster reference="../../../edu.usc.softarch.arcade.antipattern.detection.BdcSmell/clusters/edu.usc.softarch.arcade.facts.ConcernCluster[37]"/>
    </clusters>
  </edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
  <edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
    <clusters>
      <edu.usc.softarch.arcade.facts.ConcernCluster reference="../../../edu.usc.softarch.arcade.antipattern.detection.BdcSmell/clusters/edu.usc.softarch.arcade.facts.ConcernCluster[48]"/>
    </clusters>
  </edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
  <edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
    <clusters>
      <edu.usc.softarch.arcade.facts.ConcernCluster reference="../../../edu.usc.softarch.arcade.antipattern.detection.BdcSmell/clusters/edu.usc.softarch.arcade.facts.ConcernCluster[51]"/>
    </clusters>
  </edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
  <edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
    <clusters>
      <edu.usc.softarch.arcade.facts.ConcernCluster reference="../../../edu.usc.softarch.arcade.antipattern.detection.BdcSmell/clusters/edu.usc.softarch.arcade.facts.ConcernCluster[55]"/>
    </clusters>
  </edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
  <edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
    <clusters>
      <edu.usc.softarch.arcade.facts.ConcernCluster reference="../../../edu.usc.softarch.arcade.antipattern.detection.BdcSmell/clusters/edu.usc.softarch.arcade.facts.ConcernCluster[59]"/>
    </clusters>
  </edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
  <edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
    <clusters>
      <edu.usc.softarch.arcade.facts.ConcernCluster reference="../../../edu.usc.softarch.arcade.antipattern.detection.BdcSmell/clusters/edu.usc.softarch.arcade.facts.ConcernCluster[67]"/>
    </clusters>
  </edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
  <edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
    <clusters>
      <edu.usc.softarch.arcade.facts.ConcernCluster reference="../../../edu.usc.softarch.arcade.antipattern.detection.BdcSmell/clusters/edu.usc.softarch.arcade.facts.ConcernCluster[72]"/>
    </clusters>
  </edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
  <edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
    <clusters>
      <edu.usc.softarch.arcade.facts.ConcernCluster reference="../../../edu.usc.softarch.arcade.antipattern.detection.BdcSmell/clusters/edu.usc.softarch.arcade.facts.ConcernCluster[82]"/>
    </clusters>
  </edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
  <edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
    <clusters>
      <edu.usc.softarch.arcade.facts.ConcernCluster reference="../../../edu.usc.softarch.arcade.antipattern.detection.BdcSmell/clusters/edu.usc.softarch.arcade.facts.ConcernCluster[91]"/>
    </clusters>
  </edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
  <edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
    <clusters>
      <edu.usc.softarch.arcade.facts.ConcernCluster reference="../../../edu.usc.softarch.arcade.antipattern.detection.BdcSmell/clusters/edu.usc.softarch.arcade.facts.ConcernCluster[100]"/>
    </clusters>
  </edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
  <edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
    <clusters>
      <edu.usc.softarch.arcade.facts.ConcernCluster reference="../../../edu.usc.softarch.arcade.antipattern.detection.BdcSmell/clusters/edu.usc.softarch.arcade.facts.ConcernCluster[111]"/>
    </clusters>
  </edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
  <edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
    <clusters>
      <edu.usc.softarch.arcade.facts.ConcernCluster reference="../../../edu.usc.softarch.arcade.antipattern.detection.BdcSmell/clusters/edu.usc.softarch.arcade.facts.ConcernCluster[112]"/>
    </clusters>
  </edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
  <edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
    <clusters>
      <edu.usc.softarch.arcade.facts.ConcernCluster reference="../../../edu.usc.softarch.arcade.antipattern.detection.BdcSmell/clusters/edu.usc.softarch.arcade.facts.ConcernCluster[120]"/>
    </clusters>
  </edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
  <edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
    <clusters>
      <edu.usc.softarch.arcade.facts.ConcernCluster reference="../../../edu.usc.softarch.arcade.antipattern.detection.BdcSmell/clusters/edu.usc.softarch.arcade.facts.ConcernCluster[128]"/>
    </clusters>
  </edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
  <edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
    <clusters>
      <edu.usc.softarch.arcade.facts.ConcernCluster reference="../../../edu.usc.softarch.arcade.antipattern.detection.BdcSmell/clusters/edu.usc.softarch.arcade.facts.ConcernCluster[139]"/>
    </clusters>
  </edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
  <edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
    <clusters>
      <edu.usc.softarch.arcade.facts.ConcernCluster reference="../../../edu.usc.softarch.arcade.antipattern.detection.BdcSmell/clusters/edu.usc.softarch.arcade.facts.ConcernCluster[147]"/>
    </clusters>
  </edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
  <edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
    <clusters>
      <edu.usc.softarch.arcade.facts.ConcernCluster reference="../../../edu.usc.softarch.arcade.antipattern.detection.BdcSmell/clusters/edu.usc.softarch.arcade.facts.ConcernCluster[148]"/>
    </clusters>
  </edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
  <edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
    <clusters>
      <edu.usc.softarch.arcade.facts.ConcernCluster reference="../../../edu.usc.softarch.arcade.antipattern.detection.BdcSmell/clusters/edu.usc.softarch.arcade.facts.ConcernCluster[159]"/>
    </clusters>
  </edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
  <edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
    <clusters>
      <edu.usc.softarch.arcade.facts.ConcernCluster reference="../../../edu.usc.softarch.arcade.antipattern.detection.BdcSmell/clusters/edu.usc.softarch.arcade.facts.ConcernCluster[160]"/>
    </clusters>
  </edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
  <edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
    <clusters>
      <edu.usc.softarch.arcade.facts.ConcernCluster reference="../../../edu.usc.softarch.arcade.antipattern.detection.BdcSmell/clusters/edu.usc.softarch.arcade.facts.ConcernCluster[162]"/>
    </clusters>
  </edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
  <edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
    <clusters>
      <edu.usc.softarch.arcade.facts.ConcernCluster reference="../../../edu.usc.softarch.arcade.antipattern.detection.BdcSmell/clusters/edu.usc.softarch.arcade.facts.ConcernCluster[166]"/>
    </clusters>
  </edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
  <edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
    <clusters>
      <edu.usc.softarch.arcade.facts.ConcernCluster reference="../../../edu.usc.softarch.arcade.antipattern.detection.BdcSmell/clusters/edu.usc.softarch.arcade.facts.ConcernCluster[187]"/>
    </clusters>
  </edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
  <edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
    <clusters>
      <edu.usc.softarch.arcade.facts.ConcernCluster reference="../../../edu.usc.softarch.arcade.antipattern.detection.BdcSmell/clusters/edu.usc.softarch.arcade.facts.ConcernCluster[190]"/>
    </clusters>
  </edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
  <edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
    <clusters>
      <edu.usc.softarch.arcade.facts.ConcernCluster reference="../../../edu.usc.softarch.arcade.antipattern.detection.BdcSmell/clusters/edu.usc.softarch.arcade.facts.ConcernCluster[192]"/>
    </clusters>
  </edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
  <edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
    <clusters>
      <edu.usc.softarch.arcade.facts.ConcernCluster reference="../../../edu.usc.softarch.arcade.antipattern.detection.BdcSmell/clusters/edu.usc.softarch.arcade.facts.ConcernCluster[195]"/>
    </clusters>
  </edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
  <edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
    <clusters>
      <edu.usc.softarch.arcade.facts.ConcernCluster reference="../../../edu.usc.softarch.arcade.antipattern.detection.BdcSmell/clusters/edu.usc.softarch.arcade.facts.ConcernCluster[197]"/>
    </clusters>
  </edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
  <edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
    <clusters>
      <edu.usc.softarch.arcade.facts.ConcernCluster reference="../../../edu.usc.softarch.arcade.antipattern.detection.BdcSmell/clusters/edu.usc.softarch.arcade.facts.ConcernCluster[198]"/>
    </clusters>
  </edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
</linked-hash-set>
